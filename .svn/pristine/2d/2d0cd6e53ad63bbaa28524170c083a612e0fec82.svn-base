<?phpnamespace app\common\controller;use think\Cache;use think\Controller;use think\Db;class AgentApiBase extends Controller{    /**     * 初始化方法     */    const __OK__ = '0'; //请求成功    const __ERROR__ = '1'; //参数错误    const __ERROR1__ = '2'; //没有绑定    const __ERROR2__ = '3';//数据库错误    const __ERROR4__ = '4';//未查询到数据    const __ERROR5__ = '5';//条件不符合    public $code_expire_time = 60;//验证码过期时间    public $array_return = array("ResultType" => 1, "Message" => "success", "AppendData" => []);    public $_reqparam;    public $userInfo;    public function _initialize()    {        $_reqparam = $this->request->param();        $act_name = strtolower($this->request->action());        $ctr_name = strtolower($this->request->controller());        if (!in_array($act_name, config('No_Verification')[$ctr_name]))         {            $uuid = $_COOKIE['adminuuid'];            $pctoken = $_COOKIE["pctoken"];            if (empty($uuid) || empty($pctoken))             {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "token not find";                $this->array_return['AppendData'] = null;                return json($this->array_return);            }                        $userInfo = Db::table("s_api_admin")->where(array("uuid" => $uuid,"isfalg" => 2, "isdel" => 0,"compulsory_downline" => 0))->find();            if (empty($userInfo))             {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "user not find";                $this->array_return['AppendData'] = null;                return json($this->array_return);            }            if((md5($uuid.strtotime($userInfo["last_time"]))."%s".$userInfo["login_num"])!=$pctoken)            {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "Invalid token";                $this->array_return['AppendData'] = null;                return json($this->array_return);           }                        $conut = Db::table("s_api_resources")->alias('a')->join("s_api_resources_role as b on a.r_id=b.resources_id")              ->join("s_api_admin as c on c.role_id=b.role_id")->where(array("a.r_url" => $_SERVER["REQUEST_URI"], "c.uuid" => $uuid))->count();           if ($conut <= 0 || $conut == null)            {     	           	$this->array_return['ResultType'] = self::__ERROR__;     	           	$this->array_return['Message'] = "no authority";     	           	$this->array_return['AppendData'] = null;                 	           	return json($this->array_return);             }           $this->userInfo = $userInfo;        }    }}