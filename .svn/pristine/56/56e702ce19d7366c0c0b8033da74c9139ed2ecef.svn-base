<?phpnamespace app\api\controller;use app\common\controller\ApiBase;use Think\Controller;use think\Db;class UserVideoApi extends  ApiBase {    /**     * 视频添加或修改分类     */    public function add_user_video_type()    {        $title = $this->_reqparam['title'];        $type_id = $this->_reqparam['type_id'];        if($title){            $model = new ModeTypeModel();            $type = 1;//视频分类            if($type_id){                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,'',$type_id);            }else{                $max_sort = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->max('sort');                $sort_count = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->count();                if($sort_count >= 4){                    $this->array_return['ResultType'] = self::__ERROR1__;                    $this->array_return['Message'] = "已有4个模块";                    return json($this->array_return);                }                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,($max_sort+1));                $new_id = $model->where(array('id'=>$res))->getField('mode_id');                $this->array_return['AppendData'] = $new_id;            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 视频分类列表     */    public function user_video_type()    {        $model = new ModeTypeModel();        $res = $model->mode_type_list($this->userInfo['id'],1);        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 视频分类排序修改     */    public function user_video_type_sort()    {        $content = $this->_reqparam['content'];//格式  A分类id=排序,B分类id=排序,        if($content){           $model = new ModeTypeModel();           $model->mode_type_sort($this->userInfo['id'],$content,1);            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 视频分类删除     */    public function user_video_del_type()    {        $type_ids = $this->_reqparam['type_ids'];//以逗号隔开的字符串        if($type_ids){            $model = new ModeTypeModel();            $result = $model->mode_type_del($type_ids,$this->userInfo['id'],1);            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 添加视频     */    public function add_user_video()    {        $title = $this->_reqparam['title'];        $video_cover = $this->_reqparam['video_cover'];        $video = $this->_reqparam['video'];        $video_id = $this->_reqparam['video_id'];        $type_id = $this->_reqparam['type_id'];        if($title && $video_cover && $video){            $model = Db::table('s_user_video');            $data = array(                'title'=>$title,                'video_cover'=>$video_cover,                'video'=>$video,                'type_id'=>$type_id,            );            if($video_id){                $res = $model->where(array('id'=>$video_id))->save($data);            }else{                $max_sort = $model->where(array('user_id'=>$this->userInfo['id']))->max('sort');                $data['user_id'] = $this->userInfo['id'];                $data['sort'] = $max_sort+1;                $data['addtime'] = date('Y-m-d H:i:s');                $res = $model->insert($data);                $this->array_return['AppendData'] = $res;            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 视频排序     */    public function user_video_sort()    {        $content = $this->_reqparam['content'];//格式  A分类id=排序,B分类id=排序,        if($content){            $arr_content = explode(',',$content);            foreach($arr_content as $v){                $new_arr = explode('=',$v);                Db::table('s_user_video')->where(array('id'=>$new_arr[0]))->save(array('sort'=>$new_arr[1]));            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 视频删除     */    public function user_video_del()    {        $ids = explode(',',$this->_reqparam['video_ids']);//以逗号隔开的字符串        if($ids){            $id_arr = array();            foreach ($ids as $id){                $res = Db::table('s_user_video')->where(array('id'=>$id,'user_id'=>$this->userInfo['id']))->find();                if($res){                    $id_arr[] = $id;                }            }            if($id_arr){                $result = Db::table('s_user_video')->where(array('id'=>array('in',$id_arr)))->delete();            }            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }}