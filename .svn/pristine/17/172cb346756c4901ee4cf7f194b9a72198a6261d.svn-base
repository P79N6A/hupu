<?php/**个人中心*/namespace app\home\controller;use app\common\controller\HomeBase;use app\api\logic\VipList  as vipLogic;use app\api\model\UserInfo  as userModel;use app\api\model\Member  as memberModel;class Mycenter extends HomeBase {	private $member_mod = null;	private $vip_logic = null;	private $user_mod = null;	    function _initialize()    {        parent::_initialize();        $this->vip_logic = new vipLogic();        $this->user_mod = new userModel();        $this->member_mod = new memberModel();    }        /**     *新个人中心     */    public function register()    { 	    	$this->myphone = input('get.myphone');    	$this->share_id = input('get.share_id');    	$this->title="注册";        if (isGet) {            $get=input("get.");            if(isset($_GET['share_id'])){                $user = $this->user_mod->field("nick_name,headimg,member_id")->where(array("id"=>$get['share_id']))->find();                $nick_name = $user['nick_name'];                $phone = $this->member_mod ->where(array("id"=>$user['member_id']))->getField("phone");                $this->assign('nick_name',$nick_name);                $this->assign('phone',$phone);                $this->headimg = $user['headimg'];                $this->assign('headimg',$user['headimg']);            } else {                header("location:".getenv("HTTP_REFERER"));//没有推荐人，返回上一页            }        }    	        return  $this->fetch();    }        //付费    public function membersbuy()    {    	$this->unionid=$this->userInfo['unionid'];    	$this->phone = input('get.phone') ? input('get.phone') : $this->userInfo['mobile'];    	$this->share_id = input('get.share_id');        if(isPost){            $res = input("post.");            if($res['vip_id'] == 8){                $old = Db::table('s_pay_code')->where(array('code'=>$res['pay_code'],'status'=>array('neq',1)))->find();                if($old){                    Db::startTrans();                    try {	                    Db::table('s_pay_code_log')->insert(array('code_id'=>$old['id'],'user_id'=>$res['user_id'],'addtime'=>time()));	                    Db::table('s_pay_code')->where(array('id'=>$old['id']))->save(array('status'=>1));	                    $userData['vip_id']=8;	                    $userData['vip_group_id']=7;	                    $userData['vip_orver_time']=strtotime('+1 month');//1个月过期	                    $this->user_mod->where(array('id'=>$res['user_id']))->save($userData);                                            Db::commit();                        $send = $this->user_mod->alias('u')->join('left join s_member m on m.id = u.member_id')                           ->field('m.openid,u.nick_name,m.phone')->where(array('u.id'=>$res['user_id']))->find();                                                   sendWxTemplateMessages('SendBindInfo',array( 'wecha_id' => $send['openid'],'href'=>get_current_Host().url('/Home/User/usercenter'), 'first' => '您己成为洋小秘平台会员，您的会员等级是：体验用户', 'keyword1' =>$send['nick_name'], 'keyword2' => $send['phone'], 'keyword3'=> date("Y-m-d H:i:s"),'remark' => '马上创建您的V网吧！'));                        return json(array('status'=>4));                    } catch (\Exception $e) {                        Db::rollback();                        return json(array('status'=>5,'msg'=>'操作失败'));                    }                }else{                    return json(array('status'=>6,'msg'=>'此验证码无效'));                }            }else{                if ($res['pay_type'] == 1){                    $res['pay_source']='服务号';                    $res['vip_id']=$res['vip_id']?$res['vip_id']:1;                    $order_id=$this->vip_logic->buyVip($res);                    if($order_id!=0){                        return json(array('status'=>1,'order_id'=>$order_id));                    }else{                        return json(array('status'=>0,'msg'=>'创建订单失败'));                    }                }else{                    $user_info = $this->user_mod->where(array('id'=>$res['user_id']))->find();                    if (!$user_info){                        return json(array('status'=>0,'msg'=>'查询失败'));                    }                    $money = $user_info['money'];                    if ( $money < 198 ){                        return json(array('status'=>3,'msg'=>'您的小秘币余额不足！'));                    }                    $res['pay_source']='小秘币';                    $order_id=$this->vip_logic->buyVip($res);                    if($order_id!=0){                        return json(array('status'=>2,'order_id'=>$order_id));                    }else{                        return json(array('status'=>3,'msg'=>'创建订单失败'));                    }                }            }        }else{            $user = $this->user_mod->find(input('get.user_id'));            $vip = $this->vip_logic->getVipList();            if($user['vip_id'] == 8){                //月卡只能用一次                unset($vip[1]);            }            $this->assign('vip',$vip);            $this->assign('user',$this->userInfo);        }                return  $this->fetch();    }        //登录	public function login()	{        return  $this->fetch();    }        public function passwordback()    {    	$this->phone = input('get.phone');        return  $this->fetch();    }        public function note()    {    	$this->unionid=$this->userInfo['unionid'];        return  $this->fetch();    }}