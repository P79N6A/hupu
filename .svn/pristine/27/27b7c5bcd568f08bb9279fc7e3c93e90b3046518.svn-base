{include file="Public/header"}

<div class="layui-fluid">
    <div class="layui-card">

        <div class="example-wrap">
            <div class="example">

                <script type="text/html"  id="toolbar">
                    <div  style="display: none;"  class="layui-btn-container">
                        <button style="display: none;" class="layui-btn layui-btn-sm layui-btn-danger"
                                lay-event="delSelected">
                            <i class="layui-icon">&#xe640;</i>删除
                        </button>
                        <button  class="layui-btn layui-btn-sm" onclick="add_user()">
                            <i class="layui-icon">&#xe61f;</i>添加
                        </button>
                        <!--<button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>-->
                        <!--<button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>-->
                        <!--<button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>-->
                    </div>
                </script>


                <!--搜索框开始-->
                <form class="layui-form" style="display: none"  action="">
                    <div class="layui-form-item" style="display: inline-block;">

                        <!--<label class="layui-form-label layui-btn-sm">用户名</label>-->
                        <!--<input type="text" name="nick_name" placeholder="请输入" autocomplete="off"-->
                               <!--class="layui-input layui-input-inline">-->
                        <!--<label class="layui-form-label layui-btn-sm">手机</label>-->
                        <!--<input type="text" name="phone" placeholder="请输入" autocomplete="off"-->
                               <!--class="layui-input layui-input-inline">-->


                        <!--<label class="layui-form-label layui-btn-sm">手机号</label>-->
                        <!--<input type="text" name="mobile" placeholder="请输入" autocomplete="off"-->
                        <!--class="layui-input layui-input-inline">-->


                        <!--<label class="layui-form-label layui-btn-sm">开始时间</label>-->
                        <!--<input type="text" name="start_at" placeholder="yyyy-MM-dd"-->
                        <!--autocomplete="off" class="date layui-input layui-input-inline">-->


                        <!--<label class="layui-form-label layui-btn-sm">结束时间</label>-->
                        <!--<input type="text" name="end_at"    autocomplete="off"-->
                        <!--class="date layui-input layui-input-inline">-->

                    </div>

                    <div class=" layui-input-inline  " style="    display: block;margin-bottom: 20px">
                        <button class="layui-btn  layui-btn-sm" lay-submit lay-filter="formDemo">立即提交</button>
                        <button type="reset" class="layui-btn  layui-btn-primary layui-btn-sm">重置</button>
                    </div>


                </form>

                <!--搜索框结束-->

                <table class="layui-hide" id="listTable" lay-filter="listTable"></table>

                <script type="text/html" id="barDemo">

                    <a style="display: none;" class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
                    <!--<a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>-->
                    <a class="layui-btn layui-btn-xs" lay-event="users">旗下用户</a>


                </script>

            </div>
        </div>


    </div>
</div>

{include file="Public/footer"}

<script>

    layui.use(['form', 'element', 'table', 'jquery', 'laydate'], function () {
        var table = layui.table;
        var $ = layui.$ //重点处
            , form = layui.form
            , laydate = layui.laydate
            , layer = layui.layer;

        //日期
        laydate.render({
            elem: '.date'
        });

        var urls = '/Admin/{$class}/getList';

        table.render({
            elem: '#listTable'
            , url: urls
            , cellMinWidth: 50 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            , toolbar: '#toolbar' //增加工具栏打印，筛选，导出
            , cols: [[
                {type: 'checkbox'}
                , {field: 'id', title: 'ID', sort: true}
                , {field: 'vip_name', title: '名称'}
                , {field: 'level', title: '等级'}
                , {field:'annual_fee', title: '年费'}
                , {field: 'give_vip1_count', event: 'give_vip1_count',  title: '赠送VIP'}
                , {field: 'give_vip2_count', event: 'give_vip2_count', title: '赠送小创投'}
                , {field: 'give_vip3_count', event: 'give_vip3_count', title: '赠送创投'}
                , {field: 'give_vip4_count', event: 'give_vip4_count', title: '赠送创业家'}
                , {field: 'give_vip5_count', event: 'give_vip5_count', title: '赠送创导'}
                , {title: '操作', align: 'center', width:120, toolbar: '#barDemo'}

            ]]
            , page: true
            , id: 'listReload'//会员列表重载

        });

        //监听提交
        form.on('submit(formDemo)', function (data) {
            table.reload('listReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    phone: data.field.phone
                    , is_pay: data.field.is_pay
                    , nick_name: data.field.nick_name
                    , vipgroup: data.field.vipgroup
                    , mobile: data.field.mobile
                    , start_at: data.field.start_at
                    , end_at: data.field.end_at
                }
            });
            return false;
        });

        form.on('select(pid)', function (data) {
            //执行重载
            table.reload('listReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    vipGroup: $("#pid").val()
                }
            });
        });

        form.on('select(isPay)', function (data) {
            //执行重载
            table.reload('listReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    isPay: $("#isPay").val()
                }
            });
        });

        //监听行工具事件
        table.on('tool(listTable)', function (obj) {
            var data = obj.data //获得当前行数据
                , layEvent = obj.event; //获得 lay-event 对应的值

            // console.log(data.user_id);

            if (layEvent === 'detail') {
                layer.msg('查看操作');

            } else if (layEvent === 'del') {
                layer.confirm('真的冻结么', function (index) {

                });
            } else if (layEvent === 'edit') {
                // layer.msg('编辑操作');
                location.href = './edits/id/' + obj.data.id;
            }else if (layEvent === 'users'){
                location.href = './showRec?id=' + obj.data.id;


            }

            if (layEvent === 'infos') {
                console.log(this);

                layer.open({
                    title: '详细信息'
                    , content: this.textContent
                });
                // layer.msg(this.innerText);
            }

            if (layEvent === 'give_vip1_count') {

                layer.prompt({
                    formType: 2
                    , title: '修改give_vip1_count'
                    , value: data.give_vip1_count
                }, function (value, index) {
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./edits", // ajax请求路径
                        data: {
                            id: data.id,
                            give_vip1_count: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    give_vip1_count: value
                                });
                            }
                        }
                    });
                    //同步更新表格和缓存对应的值
                    obj.update({
                        give_vip1_count: value
                    });
                });
            }

            if (layEvent === 'give_vip2_count') {

                layer.prompt({
                    formType: 2
                    , title: '修改give_vip2_count'
                    , value: data.give_vip2_count
                }, function (value, index) {
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./edits", // ajax请求路径
                        data: {
                            id: data.id,
                            give_vip2_count: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    give_vip2_count: value
                                });
                            }
                        }
                    });
                    //同步更新表格和缓存对应的值
                    obj.update({
                        give_vip2_count: value
                    });
                });
            }

            if (layEvent === 'give_vip3_count') {

                layer.prompt({
                    formType: 2
                    , title: '修改give_vip3_count'
                    , value: data.give_vip3_count
                }, function (value, index) {
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./edits", // ajax请求路径
                        data: {
                            id: data.id,
                            give_vip3_count: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    give_vip3_count: value
                                });
                            }
                        }
                    });
                    //同步更新表格和缓存对应的值
                    obj.update({
                        give_vip3_count: value
                    });
                });
            }
            if (layEvent === 'give_vip4_count') {

                layer.prompt({
                    formType: 2
                    , title: '修改give_vip4_count'
                    , value: data.give_vip4_count
                }, function (value, index) {
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./edits", // ajax请求路径
                        data: {
                            id: data.id,
                            give_vip4_count: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    give_vip4_count: value
                                });
                            }
                        }
                    });
                    //同步更新表格和缓存对应的值
                    obj.update({
                        give_vip4_count: value
                    });
                });
            }
            if (layEvent === 'give_vip5_count') {

                layer.prompt({
                    formType: 2
                    , title: '修改give_vip5_count'
                    , value: data.give_vip5_count
                }, function (value, index) {
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./edits", // ajax请求路径
                        data: {
                            id: data.id,
                            give_vip5_count: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    give_vip5_count: value
                                });
                            }
                        }
                    });
                    //同步更新表格和缓存对应的值
                    obj.update({
                        give_vip5_count: value
                    });
                });
            }


        });


        //工具栏事件
        table.on('toolbar(listTable)', function (obj) {
            var checkStatus = table.checkStatus(obj.config.id);

            switch (obj.event) {
                case 'getCheckData':

                    var data = checkStatus.data;
                    layer.alert(JSON.stringify(data));
                    break;
                case 'getCheckLength':
                    var data = checkStatus.data;
                    layer.msg('选中了：' + data.length + ' 个');
                    break;
                case 'isAll':
                    layer.msg(checkStatus.isAll ? '全选' : '未全选');
                    break;
                case 'delSelected':
                    var checkStatus = table.checkStatus('listReload')
                        , data = checkStatus.data;
                    var ids = "";
                    for (var i = 0; i < data.length; i++) {
                        var val = data[i].id;//注意修改字段  /*zzy*/
                        if (ids.length > 0) {
                            ids += ',';
                        }
                        ids += val;
                    }
                    if (data.length > 0) {
                        console.log(ids);
                        lunhui.deletes(ids, '{:url("delSelecteds")}');
                    } else {
                        layer.msg('请选中需要删除的数据', {icon: 0, time: 1500}, function (index) {
                            console.log(obj);
                            obj.del(); //删除对应行（tr）的DOM结构
                            layer.close(index);
                        });
                    }
                    break;
            }
        });


    });



    //用户会员
    function member_status(id) {
        lunhui.status(id, '{:url("member_status")}');
    }


</script>


<!--状态的模板-->
<script type="text/html" id="statusTpl">


    {{# if(d.status==1){ }}
    <a   onclick="edit_lock({{d.member_id}});">

        <div id="zt{{d.member_id}}"><span class="label label-info ">正常</span></div>
    </a>

    {{# }else{ }}

    <a   onclick="edit_lock({{d.member_id}});">

        <div id="zt{{d.member_id}}"><span class="label label-danger">已冻结</span></div>
    </a>
    {{# } }}

</script>
<!--状态的模板-->

<script type="text/html" id="address">

    <td></td>

</script>


<script type="text/html" id="infos">
    注册手机号:{{d.phone}}


    <br/> | 成为VIP时间: {{ timetrans(d.vip_orver_time) }}
    <br/> |  注册时间: {{ timetrans(d.add_time) }}
    <br/> |  账号状态: {{# if(d.status==1) { }}
    正常
    {{# }else{ }}
    冻结
    {{# } }}
    <br> | 地区：{{d.province_name}}-{{d.city_name}}-{{d.district_name}}


</script>


<script type="text/html" id="dateFormat">

    {{ timetrans(d.add_time)  }}

</script>


</body>
</html>
