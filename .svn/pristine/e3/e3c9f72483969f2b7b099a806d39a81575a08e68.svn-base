<?php/** * Created by PhpStorm. * User: admin * Date: 2017/12/7 * Time: 0:16  */namespace app\api\controller;use app\common\controller\ApiBase;use Org\Util\Date;class Content extends  ApiBase{    public function initialize()    {        parent::initialize();        require_once VENDOR_PATH.'/Weixin/class.wx_sdk_handler.php';//引入微信Api        require_once VENDOR_PATH.'/Weixin/class.wx_network.php'; //引入微信配置文件        require_once VENDOR_PATH.'/Weixin/class.wx_open_api.php';        require_once VENDOR_PATH.'/Weixin/interface.wx_database.php';		require_once EXTEND_PATH.'/Baidu/Geocoding.php';        // 初始化SDK        $opt = array(            'app_id' => XCX_APP_ID,            'app_secret' => XCX_APP_SECRET,            'rsa_private_key' => XCX_RSA_PRIVATE_KEY,            'salt' => XCX_SALT,            'database' => $this->db,            'delegate' => $this        );        $this->sdk = new \WXSDKHandler($opt);        $actionName = strtolower($this->request->action());        $noLogin=array();        if(!in_array($actionName,$noLogin))        {            if($this->_reqparam['spopenid']) {                $this->userInfo=D("Api/User",'Logic')->getUserInfoOption(array('spopenid'=>$this->_reqparam['spopenid']));            }elseif($this->_reqparam['unionid']){                $this->userInfo = Db::table('s_user_info')->where(array('unionid'=>$this->_reqparam['unionid']))->find();            }else{                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']="非法访问";                $this->array_return['data']=null;                return json($this->array_return);            }            if(!$this->userInfo)            {                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']="没有该用户或登录失败";                $this->array_return['data']=null;                return json($this->array_return);            }else {                $this->_reqparam['userInfo']=$this->userInfo;            }        }    }    public function UploadNavImg()    {        $imgEven = A('Home/Img','Event');        if(!empty($_FILES['file']['name'])){            $img=$imgEven->saveImg_file($_FILES['file'],'xcx_user_nav_img');            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']='上传成功！';            $this->array_return['AppendData']=$img;            return json($this->array_return);        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function UploadContentImg()    {        $imgEven = A('Home/Img','Event');        if(!empty($_FILES['file']['name'])){            $img=$imgEven->saveImg_file($_FILES['file'],'xcx_user_content_img');            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']='上传成功！';            $this->array_return['AppendData']=$img;            return json($this->array_return);        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function Photo2Card()    {        if(!empty($_FILES['file']['name'])){            $imgEven = A('Home/Img','Event');            $img=$imgEven->save_file($_FILES['file'],'xcx_user_photo2card');            if($img)            {                $result=$this->fillCard($img);                if(is_array($result))                {                    $this->array_return['ResultType']=self::__OK__;                    $this->array_return['Message']='识别成功';                    $this->array_return['AppendData']=$result;                    return json($this->array_return);                }else{                    $this->array_return['ResultType']=self::__ERROR__;                    $this->array_return['Message']=$result;                    return json($this->array_return);                }            }else{                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']='上传失败！';                return json($this->array_return);            }        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function UploadMycardImg()    {        $imgEven = A('Home/Img','Event');        if(!empty($_FILES['file']['name'])){            $img=$imgEven->saveImg_file($_FILES['file'],'xcx_user_img');            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']='上传成功！';            $this->array_return['AppendData']=$img;            return json($this->array_return);        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function UploadNavVideo()    {        $imgEven = A('Home/Img','Event');        if(!empty($_FILES['file']['name'])){            $img=$imgEven->save_file($_FILES['file'],'xcx_user_nav_video');            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']='上传成功！';            $this->array_return['AppendData']=$img;            return json($this->array_return);        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function UploadContentVideo()    {        $imgEven = A('Home/Img','Event');        if(!empty($_FILES['file']['name']))        {            $img=$imgEven->save_file($_FILES['file'],'xcx_user_content_video');            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']='上传成功！';            $this->array_return['AppendData']=$img;            return json($this->array_return);        }        $this->array_return['ResultType']=self::__ERROR__;        $this->array_return['Message']='没有上传文件！';        $this->array_return['AppendData']=[];        return json($this->array_return);    }    public function getExeName($fileName)    {        $pathinfo      = pathinfo($fileName);        return strtolower($pathinfo['extension']);    }    private function fillCard($url)    {        if($url!=''){            $url=substr($url,strlen(get_current_Host())+1);            $res=bcard_query($url);            if($res['status']!=0){                $message="识别名片失败,".$res['msg'];            }else{                $data = $res['result'];                if(isset($data['mobile'])){                    //手机号码                    $_data['mobile']=implode(",",$data['mobile']);                }                if(isset($data['position'])){                    //职位/部门                    $_data['position']=implode(",",$data['position']);                }                if(isset($data['name'])){                    //姓名                    $_data['nick_name']=$data['name'];                }                if(isset($data['tel'])){                    //固话                    $_data['telephone']=implode(",",$data['tel']);                }                if(isset($data['website'])){                    //网址                    $_data['site']=implode(",",$data['website']);                }                if(isset($data['address'])){                    //地址                    $_data['address']=implode(",",$data['address']);                }                if(isset($data['company'])){                    //公司名称                    $_data['company']=implode(",",$data['company']);                }                if(isset($data['email'])){                    //邮箱                    $_data['email']=implode(",",$data['email']);                }                return $data;            }        }else{            return "识别名片失败,因为没有成功上传图片";        }    }    public function GreetingCardTypes()    {        $res = D("Api/Gcard",'Logic')->getHomeGcard_xcx();        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="贺卡分类为空";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡分类成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    /*    * javatom    * 20180621    * 分页查询我的贺卡数据    *@thispage 当前所在页     *    * */    public function getMyGcardLists()    {        $res = D("Api/Gcard",'Logic')->getMyGcardList_xcx($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您没有贺卡";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取我的贺卡列表成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GreetingCardTemplates()    {        $res = D("Api/Gcard",'Logic')->getGCardList_xcx($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="该贺卡不存在";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function CreateGCard()    {        if(empty($this->_reqparam['gives']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="收卡人没填！";            return json($this->array_return);        }        if(empty($this->_reqparam['blessings']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="祝福语没填！";            return json($this->array_return);        }        if(empty($this->_reqparam['sends']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="发卡人没填！";            return json($this->array_return);        }        if(empty($this->_reqparam['audio']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="背景音乐没填！";            return json($this->array_return);        }        if(empty($this->_reqparam['header']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="头象没填！";            return json($this->array_return);        }        if(empty($this->_reqparam['templateId']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择模板！";            return json($this->array_return);        }        $res = D("Api/Gcard",'Logic')->addUsersGcard_xcx($this->request);        if(!$res)        {            if(empty($this->_reqparam['id']))            {                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']="添加贺卡失败";                $this->array_return['AppendData']=null;            }else{                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']="更新贺卡失败";                $this->array_return['AppendData']=null;            }        }else{            if(empty($this->_reqparam['id']))            {                $this->array_return['ResultType']=self::__OK__;                $this->array_return['Message']="添加贺卡成功";                $this->array_return['AppendData']=$res;            }else{                $this->array_return['ResultType']=self::__OK__;                $this->array_return['Message']="更新贺卡成功";                $this->array_return['AppendData']=$res;            }        }        return json($this->array_return);    }    public function MyGreetingCards()    {        $res = D("Api/Gcard",'Logic')->getUsersGcardInfoList_xcx($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您还没有制作过贺卡";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function MyOneGreetingCards()    {        if(empty($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择贺卡！";            return json($this->array_return);        }        $res = D("Api/Gcard",'Logic')->getOneUsersGcard($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您没有该贺卡";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function OneGreetingCard()    {        if(empty($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择贺卡！";            return json($this->array_return);        }        $res = D("Api/Gcard",'Logic')->oneGreetingCard_xcx($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您没有该贺卡";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function DeleteMyGreetingCard()    {        if(empty($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择贺卡！";            return json($this->array_return);        }        $this->_reqparam['user_id']=$this->userInfo['id'];        $res = D("Api/Gcard",'Logic')->delUsersGcard($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您没有该贺卡，删除失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="删除贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function Getaudios()    {        $res = D("Api/Gcard",'Logic')->getMusicList($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="您没有该贺卡";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取贺卡信息成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function AddVCard()    {        if(empty($this->_reqparam['name']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="真实姓名没有填写！";            return json($this->array_return);        }        if(empty($this->_reqparam['mobile']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="手机号没有填写！";            return json($this->array_return);        }        $this->_reqparam['telephone']=$this->_reqparam['mobile'];        $this->_reqparam['realname']=$this->_reqparam['name'];        $this->_reqparam['user_id'] = $this->userInfo['id'];        $this->_reqparam['site'] = $this->_reqparam['website'];;        $this->_reqparam['type'] = 2;        $res = D("Api/Cards",'Logic')->addCards($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="添加卡片失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="添加卡片成功";            $this->array_return['AppendData']=$res;        }                return json($this->array_return);    }    public function GetSqTypeList()    {        $where=array();        $orderby=array();        if(!isset($this->_reqparam['pid']))        {            array_push($where,array('parent_id'=>0));        }else{            array_push($where,array('parent_id'=>$this->_reqparam['pid']));        }        if(!isset($this->_reqparam['order']))        {            array_push($orderby,array('id'=>'asc'));        }else{            $temp=explode(',',$this->_reqparam['order']);            foreach ($temp as  $item)            {               $tempArray=explode(' ',$item);                //array_push($orderby,array($tempArray[0]=>$tempArray[1]));                $orderby[$tempArray[0]]= $tempArray[1];            }        }        $res = D("Api/Trade",'Logic')->getSqTypeList($where,$orderby);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取行业分类失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取行业分类成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GetTradsList()    {        $where=array('sq_is_search'=>1);        if(!empty($this->_reqparam['provinceid']))        {            $where['province_id']=$this->_reqparam['provinceid'];        }        if(!empty($this->_reqparam['cityid']))        {            $where['city_id']=$this->_reqparam['cityid'];        }        if(isset($this->_reqparam['sex']) && $this->_reqparam['sex'] != '-1')        {            $where['sex']=$this->_reqparam['sex'];        }        if(isset($this->_reqparam['age_id']) && $this->_reqparam['age_id'] != '-1')        {            $where['age_id']=$this->_reqparam['age_id'];        }        if(!empty($this->_reqparam['keyword']))        {           // $where['nick_name']=array('LIKE','%'.$this->_reqparam['keyword'].'%');            $sql=" (nick_name like '%".$this->_reqparam['keyword']."%' or sq_keyword like '%".$this->_reqparam['keyword']."%')";            $where['_string']=empty($where['_string'])?$sql:$where['_string'].' and '.$sql;        }        if(!empty($this->_reqparam['typesid'])){            $array=explode(",", $this->_reqparam['typesid']);            $sql="";            foreach ($array as $key => $value) {                $sql.= "FIND_IN_SET('".$value."',sq_type_id)";                if($key!=(count($array)-1)){                    $sql.=" or ";                }            }            $where['_string']=empty($where['_string'])?$sql:$where['_string'].' and ('.$sql.')';        }        $begin_position = (intval($this->_reqparam['current_page_number'])-1)*intval($this->_reqparam['page_size']);        $limit=$begin_position.",".$this->_reqparam['page_size'];        $userList = Db::table('s_userInfo')->where($where)->limit($limit)->select();//        $userIds = array();        foreach($userList as $k => $v) {//            $userIds[] = $v['id'];            if (mb_strlen($v['position']) > 10) {                $userList[$k]['position'] = mb_substr($v['position'],0,10,'utf-8').'...';            }                        $userList[$k]['background_img']=ToOpenWxImage($userList[$k]['background_img']);            $userList[$k]['headimg']=ToOpenWxImage($userList[$k]['headimg']);            $userList[$k]['wx_ewm_url']=ToOpenWxImage($userList[$k]['wx_ewm_url']);            $userList[$k]['thumbhead']=ToOpenWxImage($userList[$k]['thumbhead']);            $userList[$k]['shareimg']=ToOpenWxImage($userList[$k]['shareimg']);            $userList[$k]['qrcodeimg']=ToOpenWxImage($userList[$k]['qrcodeimg']);        }        $res= $userList;        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取商脉失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取商脉成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GetMsgCount()    {        $where=array();        $where['user_id']=$this->userInfo['id'];//别人发给我        $where1['object_id']=$this->userInfo['id'];//我发给别人        if(isset($this->_reqparam['isreaded']))        {            $where['is_read']=$this->_reqparam['isreaded'];        }        if(!empty($this->_reqparam['status']))        {            $array=explode(",", $this->_reqparam['status']);            $sql="";            foreach ($array as $key => $value) {                $sql.= "status='".$value."'";                if($key!=(count($array)-1)){                    $sql.=" or ";                }            }            $where['_string']=$sql;            $where1['_string']=$sql;        }        $res = D("Api/MsgList",'Logic')->getMsgCount($where,$where1);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取数量失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取数量成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GetMsgList()    {        $where=array();        $where['user_id']=$this->userInfo['id'];        if(isset($this->_reqparam['isreaded']))        {            $where['is_read']=$this->_reqparam['isreaded'];        }        if(!empty($this->_reqparam['keyword']))        {            $where['msg']=array('LIKE','%'.$this->_reqparam['keyword'].'%');        }        if(!empty($this->_reqparam['status'])){            $array=explode(",", $this->_reqparam['status']);            $sql="(";            foreach ($array as $key => $value) {                $sql.= "status='".$value."'";                if($key!=(count($array)-1)){                    $sql.=" or ";                }            }            $sql.=")";            $where['_string']=$sql;        }        if(!empty($this->_reqparam['types'])){            $array=explode(",", $this->_reqparam['types']);            $sql="(";            foreach ($array as $key => $value) {                $sql.= "type='".$value."'";                if($key!=(count($array)-1)){                    $sql.=" or ";                }            }            $sql.=")";            $where['_string']=empty($where['_string'])?$sql:$where['_string'].' and '.$sql;        }        $begin_position = (intval($this->_reqparam['current_page_number'])-1)*intval($this->_reqparam['page_size']);        $limit=$begin_position.",".$this->_reqparam['page_size'];        $orderby=array();        if(!isset($this->_reqparam['order']))        {            $orderby['id']='asc';        }else{            $temp=explode(',',$this->_reqparam['order']);            foreach ($temp as  $item)            {                $tempArray=explode(' ',$item);                //array_push($orderby,array($tempArray[0]=>$tempArray[1]));                $orderby[$tempArray[0]]= $tempArray[1];            }        }        if(empty($this->_reqparam['order']))        {            $res = D("Api/MsgList",'Logic')->getMsgList_xcx($where,$limit);        }else{            $res = D("Api/MsgList",'Logic')->getMsgList_xcx($where,$limit,$this->_reqparam['order']);        }        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取消息列表失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取消息列表成功";            $this->array_return['AppendData']=$res;        }                return json($this->array_return);    }    public function CatchArticle()    {        if(empty($this->_reqparam['url']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="要抓取的URL没有填写！";            return json($this->array_return);        }        $user_id=$this->userInfo['id'];        $res = D("Api/ArticleList",'Logic')->captArticle($this->_reqparam['url'],$user_id);        $par=array('user_id'=>$user_id);        $par['id']=$res;        $res= D("Api/ArticleList",'Logic')->getArticleInfo($par);//        $res=captArticle($this->_reqparam['url']);//        $a = $res['content'];//        $res['content']=utf8_encode($a);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="软文抓取失败";            $this->array_return['AppendData']=null;        }else{            $res['thumb']=ToOpenWxImage($res['thumb']);            if(!empty($res['Advert']))            {                foreach ($res['Advert'] as  $key=>$value)                {                    $res['Advert'][$key]['thumb']=ToOpenWxImage($res['Advert'][$key]['thumb']);                }            }            if(!empty($res['promotion']))            {            	$res['promotion']['wx_ewm_url']=ToOpenWxImage($res['promotion']['wx_ewm_url']);                $res['promotion']['headimg']=ToOpenWxImage($res['promotion']['headimg']);            }            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="软文抓取成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function DeleteArticle()    {        if(empty($this->_reqparam['id'])        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="要删除的软文没有填写！";            return json($this->array_return);        }        $user_id=$this->userInfo['id'];        $this->_reqparam['user_id']=$user_id;        $res = D("Api/ArticleList",'Logic')->delArticle($this->request);        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="删除软文失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="删除软文成功";            $this->array_return['AppendData']=$res;        }                return json($this->array_return);    }    public function GetArticleList()    {        if(!empty($this->_reqparam['keyword']))        {            // $where['nick_name']=array('LIKE','%'.$this->_reqparam['keyword'].'%');            $sql=" (title like '%".$this->_reqparam['keyword']."%' or content like '%".$this->_reqparam['keyword']."%')";            $where['_string']=empty($where['_string'])?$sql:$where['_string'].' and '.$sql;        }        $where['user_id']=$this->userInfo['id'];        $begin_position = (intval($this->_reqparam['current_page_number'])-1)*intval($this->_reqparam['page_size']);        $limit=$begin_position.",".$this->_reqparam['page_size'];        $articleList=D('Api/ArticleList')->where($where)->limit($limit)->select();//        $userIds = array();        foreach($articleList as $k => $v) {//            $userIds[] = $v['id'];            if (mb_strlen($v['title']) > 10) {                $articleList[$k]['title'] = mb_substr($v['title'],0,10,'utf-8').'...';            }            $articleList[$k]['thumb']=ToOpenWxImage($articleList[$k]['thumb']);            $articleList[$k]['add_time']=date('Y-m-d H:i:s',$articleList[$k]['add_time']);        }        $res= $articleList;        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取软文列表失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取软文列表成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GetArticleListAllUser()    {        if(!empty($this->_reqparam['tspopenid']))        {//            $this->array_return['ResultType']=self::__ERROR__;//            $this->array_return['Message']="请选择要获取软文的作者！";//            return json($this->array_return);            $where['user_id']=$this->_reqparam['tspopenid'];        }        if(!empty($this->_reqparam['keyword']))        {            // $where['nick_name']=array('LIKE','%'.$this->_reqparam['keyword'].'%');            $sql=" (title like '%".$this->_reqparam['keyword']."%' or content like '%".$this->_reqparam['keyword']."%')";            $where['_string']=empty($where['_string'])?$sql:$where['_string'].' and '.$sql;        }        $begin_position = (intval($this->_reqparam['current_page_number'])-1)*intval($this->_reqparam['page_size']);        $limit=$begin_position.",".$this->_reqparam['page_size'];        $articleList=D('Api/ArticleList')->where($where)->limit($limit)->select();//        $userIds = array();        foreach($articleList as $k => $v) {//            $userIds[] = $v['id'];            if (mb_strlen($v['title']) > 10) {                $articleList[$k]['title'] = mb_substr($v['title'],0,10,'utf-8').'...';            }            $articleList[$k]['thumb']=ToOpenWxImage($articleList[$k]['thumb']);            $articleList[$k]['add_time']=date('Y-m-d H:i:s',$articleList[$k]['add_time']);;        }        $res= $articleList;        if(!$res)        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取所有软文列表失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取所有软文列表成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function GetTheArticle()    {        if(empty($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="要获取的软文没有填写！";            return json($this->array_return);        }        $where['user_id']=$this->userInfo['id'];        $where['id']=$this->_reqparam['id'];        $article=D('Api/ArticleList')->where($where)->find();//        $userIds = array();       if(!empty($article)) {//            $userIds[] = $v['id'];            if (mb_strlen($article['title']) > 10) {                $article['title'] = mb_substr($article['title'],0,10,'utf-8').'...';            }           $article['thumb']=ToOpenWxImage($article['thumb']);        }        $res = $article;        if(empty($res))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取软文失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取软文成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function EditTheArticle()    {        if(empty($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="参数错误！";            return json($this->array_return);        }        if(empty($this->_reqparam['content']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="文章内容错误！";            return json($this->array_return);        }        if(empty($this->_reqparam['title']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="文章标题错误！";            return json($this->array_return);        }        $where['user_id']=$this->userInfo['id'];        $where['id']=$this->_reqparam['id'];        $data = array();        //$data['content']=htmlspecialchars_decode($this->_reqparam['content']);        $data['content']=$this->_reqparam['content'];        $data['title']=$this->_reqparam['title'];        $data['add_time']=time();        $res = D('Api/ArticleList')->where($where)->save($data);        if(empty($res))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="软文编辑失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="软文编辑成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function AddArticle()    {        if(empty($this->_reqparam['content']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="文章内容错误！";            return json($this->array_return);        }        if(empty($this->_reqparam['title']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="文章标题错误！";            return json($this->array_return);        }        $data=array();        //$data['content']=htmlspecialchars_decode($this->_reqparam['content']);        $data['user_id']=$this->userInfo['id'];        $data['content']=$this->_reqparam['content'];        $data['title']=$this->_reqparam['title'];        $data['add_time']=time();        $res = D('Api/ArticleList')->add($data);        if(empty($res))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="软文增加失败";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="软文增加成功";            $this->array_return['AppendData']=$res;        }        return json($this->array_return);    }    public function Gps2Areas()    {        if(empty($this->_reqparam['la']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="请传入正确的纬度！";            return json($this->array_return);        }        if(empty($this->_reqparam['lo']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="请传入正确的经度！";            return json($this->array_return);        }                $ak='IVmvZZ1tGygIrhAOKGGvELITyE6WCsHC';        $result = \Geocoding::getAddressComponent($ak, $this->_reqparam['lo'], $this->_reqparam['la'], \Geocoding::NO_POIS);        $address=$result["result"]["addressComponent"];        if($address["province"]!=$address["city"])        {            $location=$address["province"].$address["city"].$address["district"].$address["street"];        }else{            $location=$address["city"].$address["district"].$address["street"];        }        if(!empty($location))        {            $ret["address"]=$location;        }        $areas=D('Api/User','Logic')->GetAreas($this->request);        if(!empty($address["province"]))        {            $ret["province_name"]=$address["province"];            foreach ($areas as $key=>$value)            {                if($areas[$key]['region_name']==$address["province"])                {                    $province=$areas[$key];                    $ret["province_id"]=$areas[$key]['region_id'];                    break;                }            }            if(!empty($address["city"]))            {                $ret["city_name"]=$address["city"];                if($address["province"]!=$address["city"]) {                    $citys = $province['ChildList'];                }else{                    $citys = array_merge($province['ChildList'][0]['ChildList'],$province['ChildList'][1]['ChildList']);                }                foreach ($citys as $key=>$value)                {                    if($address["province"]!=$address["city"]) {                        if ($citys[$key]['region_name'] == $address["city"]) {                            $city = $citys[$key];                            $ret["city_id"] = $citys[$key]['region_id'];                            break;                        }                    }else{                        $ret["city_id"]= $ret["province_id"];                        $city=array();                        $city['ChildList']=$citys;                        break;                    }                }                if(!empty($address["district"]))                {                    $ret["district_name"]=$address["district"];                    $districts=$city['ChildList'];                    foreach ($districts as $key=>$value)                    {                        if($districts[$key]['region_name']==$address["district"])                        {                            $district=$districts[$key];                            $ret["district_id"]=$districts[$key]['region_id'];                            break;                        }                    }                }            }        }        if(empty($ret))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="地址不合法";            $this->array_return['AppendData']=null;        }else{            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取地址成功";            $this->array_return['AppendData']=$ret;        }        return json($this->array_return);    }}