<?phpnamespace app\api\controller;use Api\Model\ModeTypeModel;use app\common\controller\ApiBase;use Think\Controller;use Think\Model;class NewProductApi extends  ApiBase {    /**     * 新产品添加或修改分类     */    public function add_product_type()    {        $title = $this->request['title'];        $type_id = $this->request['type_id'];        if($title){            $model = new ModeTypeModel();            $type = 3;//产品分类            if($type_id){                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,'',$type_id);            }else{                $max_sort = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->max('sort');                $sort_count = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->count();                if($sort_count >= 4){                    $this->array_return['ResultType'] = self::__ERROR1__;                    $this->array_return['Message'] = "已有4个模块";                    return json($this->array_return);                }                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,($max_sort+1));                $new_id = $model->where(array('id'=>$res))->getField('mode_id');                $this->array_return['AppendData'] = $new_id;            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新产品分类列表     */    public function product_type(){        $model = new ModeTypeModel();        $res = $model->mode_type_list($this->userInfo['id'],3);        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 新产品分类排序修改     */    public function product_type_sort()    {        $content = $this->request['content'];//格式  A分类id=排序,B分类id=排序,        if($content){           $model = new ModeTypeModel();           $model->mode_type_sort($this->userInfo['id'],$content,3);            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 新产品分类删除     */    public function product_del_type()    {        $type_ids = $this->request['type_ids'];//以逗号隔开的字符串        if($type_ids){            $model = new ModeTypeModel();            $result = $model->mode_type_del($type_ids,$this->userInfo['id'],3);            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }}