{include file="Public/header"}

<div class="layui-fluid">
    <div class="layui-card">

        <div class="example-wrap">
            <div class="example">

                <script type="text/html" id="toolbar">
                    <div class="layui-btn-container">
                        <button  style="display: none;"  class="layui-btn layui-btn-sm layui-btn-danger" lay-event="delSelected">
                            <i class="layui-icon">&#xe640;</i>删除
                        </button>
                        <button  style="display: none;" class="layui-btn layui-btn-sm" onclick="add_user('./voteAdd')">
                            <i class="layui-icon">&#xe61f;</i>添加
                        </button>
                        <!--<button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>-->
                        <!--<button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>-->
                        <!--<button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>-->
                    </div>
                </script>


                <!--搜索框开始-->
                <form class="layui-form"  style="display: none"    action="">
                    <div class="layui-form-item">

                        <label class="layui-form-label" style="width: 96px;">类别:</label>
                        <div class="layui-input-inline">
                            <select name="interest" id="pid" class="layui-selecwwwt" lay-filter="pid">
                                <option value="">全部</option>

                            </select>
                        </div>

                        <!--<label class="layui-form-label layui-btn-sm">注册手机号</label>-->
                        <!--<input type="text" name="phone"  placeholder="请输入"-->
                        <!--autocomplete="off" class="layui-input layui-input-inline layui-btn-sm">-->

                        <!--<label class="layui-form-label layui-btn-sm">文章标题</label>-->
                        <!--<input type="text" name="title"  placeholder="请输入" autocomplete="off" class="layui-input layui-input-inline">-->


                        <!--<label class="layui-form-label layui-btn-sm">用户名</label>-->
                        <!--<input type="text" name="nick_name"  placeholder="请输入" autocomplete="off" class="layui-input layui-input-inline">-->

                    </div>

                    <div class=" layui-input-inline " style="    display: block;margin-bottom: 20px">
                        <button class="layui-btn  layui-btn-sm" lay-submit lay-filter="formDemo">立即提交</button>
                        <button type="reset" class="layui-btn  layui-btn-primary layui-btn-sm">重置</button>
                    </div>


                </form>

                <!--搜索框结束-->

                <table class="layui-hide" id="listTable" lay-filter="listTable"></table>

                <script type="text/html" id="barDemo">

                    <a style="display: none;" class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
                    <a  style="display: none;" class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
                    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
                </script>

            </div>
        </div>


    </div>
</div>

{include file="Public/footer"}

<script>

    layui.use(['form', 'element', 'table', 'jquery'], function () {
        var table = layui.table;
        var $ = layui.$ //重点处
            , form = layui.form
            , layer = layui.layer;
        var urls = '/admin/Vote/voteUsers';

        table.render({
            elem: '#listTable'
            , url: urls
            , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            ,toolbar: '#toolbar' //增加工具栏打印，筛选，导出
            , cols: [[
                {type: 'checkbox'}
                // , {field: 'rid', width: 80, title: 'ID', sort: true}
                // , {field: 'is_video',width: 80, templet:'#is_video',title: '是否视频教程'}

                , {field: 'uname', event:'pname', title: '讲师名'}
                , {field: 'nickname', event:'pprice',  title: '微信名'}
                , {field: 'createtime',  event:'pstock', title: '投票时间'}
                , {field: 'pimgurl',  templet:'#image',  width: 100, height:100, align:'center',  title: '头像'}
                // , {field: 'ptype',  templet:'#statusTpl', title: '商品类型'}
                // , {width: 150, templet: '#dateFormat', title: '添加时间'}
                // , {title: '操作', width: 120, align: 'center', toolbar: '#barDemo'}

            ]]

            , page: true
            , id: 'listReload'//会员列表重载

        });

        //监听提交
        form.on('submit(formDemo)', function(data){
            table.reload('listReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                ,where:{
                    phone:data.field.phone
                    ,type_id:data.field.pid
                    ,title:data.field.title
                    ,nick_name:data.field.nick_name
                }
            });
            return false;
        });


        form.on('select(pid)', function (data) {
            //执行重载
            table.reload('listReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    type_id: $("#pid").val()
                }
            });
        });

        //监听行工具事件
        table.on('tool(listTable)', function (obj) {
            var data = obj.data //获得当前行数据
                , layEvent = obj.event; //获得 lay-event 对应的值

            // console.log(data.user_id);

            if (layEvent === 'detail') {
                layer.msg('查看操作');

            } else if (layEvent === 'del') {
                layer.confirm('真的删除行么', function (index) {

                    obj.del(); //删除对应行（tr）的DOM结构
                    //向服务端发送删除指令
                    del_member(data.pid);
                    layer.close(index);
                });
            } else if (layEvent === 'edit') {
                // layer.msg('编辑操作');
                location.href = './editsPrize/id/' + obj.data.pid;
            }


            if(layEvent === 'pprobability'){

                layer.prompt({
                    formType: 2
                    ,title: '修改pprobability'
                    ,value: data.pprobability
                }, function(value, index){
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./editsPrize", // ajax请求路径
                        data: {
                            id: data.pid,
                            pprobability: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    pprobability: value
                                });

                            }

                        }
                    });

                    //同步更新表格和缓存对应的值
                    obj.update({
                        pprobability: value
                    });
                });


            }

            if(layEvent === 'pname'){

                layer.prompt({
                    formType: 2
                    ,title: '修改pname'
                    ,value: data.pname
                }, function(value, index){
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./editsPrize", // ajax请求路径
                        data: {
                            id: data.pid,
                            pname: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    pname: value
                                });

                            }

                        }
                    });

                    //同步更新表格和缓存对应的值
                    obj.update({
                        pname: value
                    });
                });


            }

            if(layEvent === 'pprice'){

                layer.prompt({
                    formType: 2
                    ,title: '修改pprice'
                    ,value: data.pprice
                }, function(value, index){
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./editsPrize", // ajax请求路径
                        data: {
                            id: data.pid,
                            pprice: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    pprice: value
                                });

                            }

                        }
                    });

                    //同步更新表格和缓存对应的值
                    obj.update({
                        pprice: value
                    });
                });


            }

            if(layEvent === 'pstock'){

                layer.prompt({
                    formType: 2
                    ,title: '修改pstock'
                    ,value: data.pstock
                }, function(value, index){
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./editsPrize", // ajax请求路径
                        data: {
                            id: data.pid,
                            pstock: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    pstock: value
                                });

                            }

                        }
                    });

                    //同步更新表格和缓存对应的值
                    obj.update({
                        pstock: value
                    });
                });


            }
            if(layEvent === 'pdis'){

                layer.prompt({
                    formType: 2
                    ,title: '修改pdis'
                    ,value: data.pdis
                }, function(value, index){
                    layer.close(index);
                    //这里一般是发送修改的Ajax请求
                    $.ajax({
                        type: 'POST',
                        url: "./editsPrize", // ajax请求路径
                        data: {
                            id: data.pid,
                            pdis: value
                        },
                        dataType: 'json',
                        success: function (data) {
                            //调用弹窗显示信息
                            layer.msg(data['msg']);

                            if (data.code == 1) {

                                //同步更新表格和缓存对应的值
                                obj.update({
                                    pdis: value
                                });

                            }

                        }
                    });

                    //同步更新表格和缓存对应的值
                    obj.update({
                        pdis: value
                    });
                });


            }




        });


        //工具栏事件
        table.on('toolbar(listTable)', function(obj){
            var checkStatus = table.checkStatus(obj.config.id);

            switch(obj.event){
                case 'getCheckData':

                    var data = checkStatus.data;
                    layer.alert(JSON.stringify(data));
                    break;
                case 'getCheckLength':
                    var data = checkStatus.data;
                    layer.msg('选中了：'+ data.length + ' 个');
                    break;
                case 'isAll':
                    layer.msg(checkStatus.isAll ? '全选': '未全选');
                    break;
                case 'delSelected':
                    var checkStatus = table.checkStatus('listReload')
                        , data = checkStatus.data;
                    var ids = "";
                    for (var i = 0; i < data.length; i++) {
                        var val = data[i].id;//注意修改字段  /*zzy*/
                        if (ids.length > 0) {
                            ids += ',';
                        }
                        ids += val;
                    }
                    if (data.length > 0) {
                        console.log(ids);
                        lunhui.deletes(ids, '{:url("delSelecteds")}');
                    } else {
                        layer.msg('请选中需要删除的数据', {icon: 0, time: 1500}, function (index) {
                            console.log(obj);
                            obj.del(); //删除对应行（tr）的DOM结构
                            layer.close(index);
                        });
                    }
                    break;
            }
        });


    });


</script>


<!--状态的模板-->
<script type="text/html" id="statusTpl">


    {{# if(d.ptype==1){ }}
    <div id="zt{{d.id}}"><span class="label label-info ">实物商品</span></div>

    {{# }else{ }}

    <div id="zt{{d.id}}"><span class="label label-default ">虚拟商品</span></div>

    {{# } }}


</script>
<!--状态的模板-->


<script type="text/html" id="is_video">

    {{# if(d.is_video){ }}

    是

    {{# }else{ }}

    否

    {{# } }}

</script>

<script type="text/html" id="image">
    <img id="img_data" onclick="fangda(this);" style="  width: 90px; height: 90px;"
         src="{{d.headimgurl}}"/>

</script>

<script type="text/html" id="dateFormat">

    {{  timetrans(d.addtime) }}

</script>


</body>
</html>
