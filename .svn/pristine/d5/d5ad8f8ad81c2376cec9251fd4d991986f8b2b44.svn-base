<?phpnamespace app\api\controller;use app\common\controller\ApiBase;use think\Db;class AppApi extends  ApiBase {    /**     * 得到粉丝贡献详情     */    public function yxm_fx_gx()    {    	$this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";            $data = D("Api/CapitalLog","Logic")->getHistoryLogInfo(array("user_id"=>$this->userInfo['id'],"id"=>$this->_reqparam['thisid']));        if ($data) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $data;        }                 return json($this->array_return);    }    /**     * 小秘充值记录     */    public function xmb_pay_recording()    {        $res = $this->request->post();        $n = $res['n'] ? $res['n'] : 1;                $map = array();        if (!empty($res['pay_status'])) {            $map['a.pay_status'] = $res["pay_status"];        }        $map['c.unionid'] =$this->userInfo["unionid"];        $pageSize = 10;        $m = Db::table("s_xmb_order");                $pageTotal = $m->alias("a")->join("left join s_user_info c on c.id=a.user_id")->        field("c.nick_name,c.headimg,a.price,a.add_time")->where($map)->count();        $list =$m->alias("a")->join("left join s_user_info c on c.id=a.user_id")->field("c.nick_name,c.headimg,a.price,a.add_time")            ->where($map)->order('add_time desc')->limit(($n - 1) * $pageSize, $pageSize)->select();        $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";         $datalist = array("list" => $list, "pageTotal" => $pageTotal, "pageSize" => $pageSize, "pageNum" => $n);        if ($datalist) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $datalist;        }                return json($this->array_return);    }        /**     * 小秘币支付     * @param  money支付的金額     */    public function xmb_pay_package()    {        //发起小秘币支付        if(IS_POST)        {            $res = $this->request->post();            $money = $res["money"];            $user_id=$this->userInfo['id'];            $unionid = $res["unionid"];            $openid = $res['openid'];            $array_return=array("status"=>1,"msg"=>"success","data"=>array());            if(empty($money)){                $array_return["status"]=0;                $array_return["msg"]="充值金额不能为空";                return json($array_return);            }            //判断是否是是微信公众号环境start            $user_agent = $_SERVER['HTTP_USER_AGENT'];            if (strpos($user_agent, 'MicroMessenger') === false) {                // 不是微信浏览器                // 支付类型，6是H5支付                $type = 6;                $is_wechat = 0;                $source = "浏览器H5";               // $openid = "";            }else{                // 支付类型，2是公众号支付                $type = 2;                // 是微信环境                $is_wechat = 1;                $source = "服务号";                $openid = $openid;            }            $orderlist = Db::table("s_xmb_order")->where(array(                "user_id"=>$user_id,                "pay_status"=>1,                "add_time"=>array("gt",strtotime('-30minute'))            ))->find();            $order_no=getOrderSn();            $time=time();          //  $money=0.01;            $datadd=array(                "user_id"=>$user_id,                "pay_status"=>1,                "add_time"=>$time,                "order_no"=>$order_no,                "price"=>$money,                //"price"=>1,                "pay_source"=>$type,                "openid"=>$openid            );            if($orderlist==null){                $a = Db::table("s_xmb_order")->add($datadd);            }else{                $a = Db::table("s_xmb_order")->where(array("id"=>$orderlist["id"]))->                save($datadd);            }            $orderlist = Db::table("s_xmb_order")->where(array("user_id"=>$user_id,                "pay_status"=>1,                "add_time"=>$time,                "price"=>$money            ))->find();            if(!empty($orderlist["id"])){                $data=[                    'connect_id'=>$orderlist["id"],                    'type' =>$type,                    'order_type'=>12,                    'pay_money' =>$money,                    'pay_title'=>"小秘充值",                    'pay_stitle'=>"小秘充值",                    'pay_tag'=>'费用',                    'mark'=>json_encode($datadd),                    'openid'=>$openid,                ];                $pay_info=get_obj('pay_test')->add_pay_log($data);                $pay_info=(json_decode($pay_info,true));                $pay_obj = $pay_info['obj'];                $pra = $pay_obj['pra'];                if ($is_wechat == 1){                    $pra=(json_decode($pra,true));                }                $pra['source'] = $is_wechat;                if ($pra['mweb_url'] !=null){                    $mweb_url = $pay_info['obj']['pra']['mweb_url'];                    $pra['mweb_url'] = $mweb_url;                }                $array_return['data'] = $pra;            }else{                $array_return['status']=0;                $array_return['msg']="发起支付失败";            }                        return json($array_return);        }    }    /**     * 微信回调     */    public function wx_pay_back()    {        $result = file_get_contents('php://input');        $xml = simplexml_load_string($result, 'SimpleXMLElement', LIBXML_NOCDATA);        $option = get_object_vars($xml);//转换成数组        if($option['result_code'] != 'SUCCESS'){            echo "支付失败";            exit;        }        if(substr($option['out_trade_no'],0,1) == 'X'){            //续费回调            $option['attach'] = $option['mch_id'];            $option['data']['user_id'] = $option['nonce_str'];            $option['data']['day'] = '365';            $option['order_id'] = $option['nonce_str'];            $price = Db::table('s_user_info')->alias('u')->join('left join s_vip_group v on v.id = u.vip_group_id')                ->where(array('u.id'=>$option['nonce_str']))->field('v.annual_fee')->find();            if(($price['annual_fee']*100) != $option['total_fee']){                echo '金额不对';                exit;            }            $flag=D("Api/VipList","Logic")->payCallback($option);        }else{            //会员支付回调            $option['out_trade_no'] = substr($option['out_trade_no'],3);            $is_pay = Db::table('s_vip_order')->where(array('user_id'=>$option['nonce_str'],'order_no'=>$option['out_trade_no'],'pay_status'=>0))->find();            if($is_pay){                if($is_pay['price']*100 != $option['total_fee']){                    echo '金额不对';                    exit;                }                $option['attach'] = $option['mch_id'];                $option['order_id'] = $is_pay['id'];                $flag=D("Api/VipList","Logic")->BuyCallBack($option);            }        }                file_put_contents(APP_ROOT.'/test.txt', PHP_EOL.json_encode($option).PHP_EOL,FILE_APPEND);        echo "SUCCESS";    }        /**     * 判断是否注册用户     */    public function is_register()    {        if(!$this->_reqparam['phone']){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                $this->array_return['ResultType'] = self::__OK__;         $this->array_return['Message'] = "没有被注册";        $res = Db::table('s_member')->where(array('phone'=>$this->_reqparam['phone']))->find();        if ($res) {        	$this->array_return['ResultType'] = self::__ERROR2__;        	$this->array_return['Message'] = "已被注册";        }                    return json($this->array_return);    }    /**     * 首页访问量统计     */    public function data_stat()    {        $today_stat = Db::table('s_visit_log')->where(array('object_id'=>$this->userInfo['id'],'add_time'=>array('egt',strtotime(date('Y-m-d',time())))))->count();        $all_stat = Db::table('s_visit_log')->where(array('object_id'=>$this->userInfo['id']))->count();        $this->array_return['ResultType'] = self::__OK__;        $this->array_return['Message'] = "操作成功";        $this->array_return['AppendData'] = array('today'=>$today_stat,'all_start'=>$all_stat);                return json($this->array_return);    }    /**     *Android更新信息接口     */    public function android_update()    {        $data = array(            'serverVersion'=>'4',//版本号            'updateurl'=>'https://wap.yxm360.com/android_update/app_yxm104.apk',//下载地址            "upgradeinfo"=> "V1.4版本更新，修复部分bug！！！"//更新内容        );                return json($data);    }    /**     * 获取注册推荐人信息     */    public function res_user()    {        $phone = $this->_reqparam['phone'];//注册手机号        $res_id = $this->_reqparam['res_id'];//推荐人id        if(!$phone || !$res_id){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                if($phone){        	$where['m.phone'] = $phone;        }else{            $where['u.id'] = $res_id;        }                    $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";               $user = Db::table('s_user_info')->alias('u')->join('left join s_member m on m.id = u.member_id')                ->field('m.phone,u.unionid,u.nick_name,u.headimg')->where($where)->find();        if ($user) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $user;        }                 return json($this->array_return);    }    /**     * 注册     */    public function app_register()    {        $res = $this->request;        if(!isset($res['rec_user_id'])){            $res['rec_user_id'] = Db::table('s_user_info')->where(array('unionid'=>$this->_reqparam['unionid']))->getField('id');        }                if(!$res['rec_user_id'] || !$res['phone'])        {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                $flag = D("Api/User",'Logic')->register($res);        if($flag['status']==2){            $this->array_return['ResultType'] = self::__ERROR1__;            $this->array_return['Message'] = "已被注册";        }elseif($flag['status']==0){            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "注册失败";        }else{            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "注册成功";            $this->array_return['AppendData'] = $unionid;        }                    return json($this->array_return);    }        /**     * 付款vip等级列表     */    public function buy_vip_list()    {        $vip = Db::table('s_vip_list')->alias('v')->join('left join s_vip_group g on g.id = v.vip_group_id')            ->where(array('v.status'=>1))->field('v.id,v.money,g.vip_name')->select();        if($this->userInfo['vip_id'] == 8){            //月卡只能用一次            unset($vip[1]);        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";          if ($vip) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $vip;        }                return json($this->array_return);    }        /**     * 体验卡和小秘币支付     */    public function app_pay()    {        $type = $this->_reqparam['type'];//1:微信支付   2:小秘币   3   付款码        $vip_id = $this->_reqparam['vip_id'];//会员id        if(!$type || !$vip_id)        {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                if($type == 1 && $vip_id){            //微信支付            $res['vip_id'] = $vip_id;            $res['price'] = Db::table('s_vip_list')->where(array('id'=>$vip_id))->getField('money');            $res['user_id'] = $this->userInfo['id'];            $res['pay_source']='安卓微信';            $order_id=D("Api/VipList","Logic")->buyVip($res);            if(!$order_id)            {                $this->array_return['ResultType'] = self::__ERROR1__;                $this->array_return['Message'] = "创建订单失败";            }                        $vipOrder = D('Api/VipOrder')->where(array('id'=>$order_id))->find();              $config = config('WEIXINPAY_CONFIG');            $arr = array(             	'appid'=>$config['APP_APPID'],                'appsecret'=>$config['APP_APPSECRET'],                'mchid'=>$config['APP_MCHID'],                'order_num'=>mt_rand(100,999).$vipOrder['order_no'],                'package'=>'Sign=WXPay',                'noncestr'=>time().mt_rand(1,9999),                'timestamp'=>time(),                'price'=>$res['price'],                'back_url'=>$config['APP_PAYBACK']            );            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $arr;        }elseif($type == 2){            //小秘币支付            if ( $this->userInfo['money'] < 198 ){                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "您的小秘币余额不足";                return json($this->array_return);            }            $res['vip_id'] = $vip_id;            $res['user_id'] = $this->userInfo['id'];            $res['price'] = Db::table('s_vip_list')->where(array('id'=>$vip_id))->getField('money');            $res['pay_source']='安卓小秘币';            $order_id=D("Api/VipList","Logic")->buyVip($res);            if(!$order_id){            	$this->array_return['ResultType'] = self::__ERROR1__;                $this->array_return['Message'] = "创建订单失败";            }                            $vipOrder = D('Api/VipOrder')->where(array('id'=>$order_id))->find();               $vipGroup = Db::table('s_vip_group')->alias('vg')->join('left jion s_vip_list v on vg.id = v.vip_group_id')                    ->field('vg.*')->where(array('v.id'=>$res['vip_id'])) ->find();                                $userData['give_vip1_count'] = $vipGroup['give_vip1_count'];            $userData['give_vip2_count'] = $vipGroup['give_vip2_count'];            $userData['give_vip3_count'] = $vipGroup['give_vip3_count'];            $userData['give_vip4_count'] = $vipGroup['give_vip4_count'];            $userData['give_vip5_count'] = $vipGroup['give_vip5_count'];            $userData['vip_id'] = $res['vip_id'];            $userData['vip_group_id'] = $vipGroup['id'];            $userData['vip_orver_time'] = strtotime('+1 year');//1年过期                //用户注册加积分            $dat['user_id']=$this->userInfo['rec_user_id'];            $dat['inte'] = Db::table("s_inte")->where('id=6')->getField('inte');            $dat['addtime']=time();            $dat['inte_id']=6;            $data['order_sn']=$vipOrder['order_no'];//订单号            $data['user_id']=$this->userInfo['id'];            $data['object_id'] = $res['vip_id'];            $data['as']=2;//减少            if(intval($vipOrder['price'])==298)            {               $vipOrder['price']=198;            }             $data['money']=$vipOrder['price'];             $data['msg']="会员购买";             $data['type']=3;            //todo 避免重复加入            $log = D('Api/CapitalLog')->where(['order_sn' => $vipOrder['order_no'], 'user_id' => $this->userInfo['id']])->find();            if ($log) {            	$this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "此订单已支付";                return json($this->array_return);            }                        $f_data = array('user_id'=>$this->userInfo['id'],'vip_id'=>$res['vip_id'],'level'=>$vipGroup['level'],                    'money'=>$data['money'],'order_sn'=>$data['order_sn'],'vip_name'=>$vipGroup['vip_name']);            D('Api/UsersFans','Logic')->nexus($f_data);//分佣计算            Db::startTrans();            try {                Db::table("s_user_info")->where(array('id'=> $this->userInfo['rec_user_id']))->setInconfig('inte',$dat['inte']);                Db::table('s_inte_log')->add($dat);                D('Api/UserInfo')->where(array('id'=> $this->userInfo['id']))->save($userData);                D('Api/VipOrder')->where(array('id'=>$order_id))->save(array('pay_status'=>1));//更改订单状态                D('Api/CapitalLog')->add($data);                Db::table('s_user_info')->where(array('id'=> $this->userInfo['id']))->setDeconfig('money',$vipOrder['price']);                Db::commit();                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } catch (\Exception $e) {                Db::rollback();                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }         }elseif($type == 3){            //体验卡            $old = Db::table('s_pay_code')->where(array('code'=>$this->_reqparam['pay_code'],'status'=>array('neq',1)))->find();            if(!$old){                $this->array_return['ResultType'] = self::__ERROR1__;                $this->array_return['Message'] = "没有此付款码或付款码已过期";            }                        Db::startTrans();			try {                $r = Db::table('s_pay_code_log')->add(array('code_id'=>$old['id'],'user_id'=>$this->userInfo['id'],'addtime'=>time()));                $result = Db::table('s_pay_code')->where(array('id'=>$old['id']))->save(array('status'=>1));                $userData['vip_id']=8;                $userData['vip_group_id']=7;                $userData['vip_orver_time']=strtotime('+1 month');//1个月过期                Db::table('s_user_info')->where(array('id'=>$this->userInfo['id']))->save($userData);                Db::commit();                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";             } catch (\Exception $e) {                 Db::rollback();                 $this->array_return['ResultType'] = self::__ERROR2__;                 $this->array_return['Message'] = "操作失败";             }        }                return json($this->array_return);    }        /**     * App年费续费     */    public function year_app_pay()    {        if(($this->userInfo['vip_orver_time'] - time()) < 30*24*60*60){            $price = Db::table('s_vip_group')->where(array('id'=>$this->userInfo['vip_group_id']))->getField('annual_fee');            if($price){                $config = config('WEIXINPAY_CONFIG');                $arr = array(                    'appid'=>$config['APP_APPID'],                    'appsecret'=>$config['APP_APPSECRET'],                    'mchid'=>$config['APP_MCHID'],                    'order_num'=>'X'.time().mt_rand(1,9999),                    'package'=>'Sign=WXPay',                    'noncestr'=>time().mt_rand(1,9999),                    'timestamp'=>time(),                    'price'=>$price,                    'back_url'=>$config['APP_PAYBACK']                );            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $arr;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "您的会员还未到期";        }                return json($this->array_return);    }    /**     * 一键导入通讯录     */    public function import_phone()    {        $arr = array(            'nick_name'=>$this->userInfo['nick_name'],            'position'=>$this->userInfo['position'],            'address'=>$this->userInfo['address'],            'mobile'=>$this->userInfo['mobile'],            'site'=>'http://wx.yxm360.com/Home/Nologin/card_jump/id/'.$this->userInfo['id']        );        $this->array_return['ResultType'] = self::__OK__;        $this->array_return['Message'] = "操作成功";        $this->array_return['AppendData'] = $arr;                return json($this->array_return);    }        /**     * 首页个人信息     */    public function user_detail()    {        //获取我的V网数据        $field=array(            'u.id',            'u.style',//V网风格            'u.headimg',//头像            'u.nick_name',//昵称            'u.position',//职位            'u.company',//公司名称            'u.industry_tag',//行业标签            'u.mobile',//手机号            'u.address',//地址            'u.email',//邮箱            'u.auto_music',//是否自动播放            'u.is_phone',//是否显示手机号            'u.is_wechat',//是否显示微信            'u.sq_is_search',//商圈是否显示            'u.is_copy_cards',//是否被复制            'u.wx_ewm_url',//微信二维码链接            'u.add_time',//注册时间            'u.vip_orver_time',//会员到期时间            'u.is_map',//是否显示地图            'u.share_my_introduct',//简历            'u.sex',//性别            'u.age_id',//年龄段            'u.sq_type_id',//行业            'u.sq_keyword',//关键字            'u.inte',//积分            'u.unionid',//用户唯一id,调接口时用            'u.completion',//完善度            'u.show_list',//展示一切的样式 0 三个一排 1 一个一排            'u.vip_group_id',//会员组id            'u.music_id',//音乐id            'm.spopenid',            'm.phone',//注册手机号            'm.user_no',//用户显示id            'vg.vip_name as vip_group_name',//用户会员名            'mc.url as music_url',//音乐url            'mc.name as music_name',//音乐名            'mc.type_id as music_type_id',//音乐分类        );        $user = Db::table('s_user_info')->alias('u')            ->join('left join s_member m on m.id = u.member_id')            ->join('left join s_vip_group vg on vg.id = u.vip_group_id')            ->join('left join s_music mc on mc.id = u.music_id')            ->field($field)->where(array('u.id'=>$this->userInfo['id']))->find();        if ($user) {            $user['orver_day']=intval(($user['vip_orver_time']-time())/86400);//转换为天数            $user['sq_type_id'] = Db::table('s_sqtype')->where(array('id'=>array('in',explode(",",$user['sq_type_id']))))->field('id,name')->select();            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $user;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 登陆     */    public function app_login()    {        $phone = $this->_reqparam['phone'];        $password = $this->_reqparam['password'];        if($phone && $password){            $old = Db::table('s_member')->where(array('phone'=>$phone,'status'=>1))->find();            if(!$old){                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "您还没有注册";                return json($this->array_return);            }            $mem = Db::table('s_member')->where(array('phone'=>$phone,'password'=>md5($password),'status'=>1))->find();            if(!$mem){                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "密码不对";                return json($this->array_return);            }            $res = Db::table("s_user_info")->field('unionid,nick_name,headimg')->where('member_id='.$mem['id'])->find();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     *     * 重设密码     */    public function reset_password()    {        $phone = $this->_reqparam['phone'];        $pwd = $this->_reqparam['password'];        $t_pwd = $this->_reqparam['t_password'];        $code = $this->_reqparam['code'];        if($phone){            $res = Db::table('s_member')->where(array('phone'=>$phone))->find();            if(!$res){                $this->array_return['ResultType'] = self::__ERROR1__;                $this->array_return['Message'] = "您还没有注册";                return json($this->array_return);            }        }        if($pwd != $t_pwd){            $this->array_return['ResultType'] = 4;            $this->array_return['Message'] = "两次密码不一致";            return json($this->array_return);        }        if($code){            $res = Db::table('s_mobile_code')->where(array('phone'=>$phone,'type'=>2))->order('id desc')->getField('code');            if($res != $code){                $this->array_return['ResultType'] = 5;                $this->array_return['Message'] = "验证码错误";                return json($this->array_return);            }        }        if($phone && $pwd && $t_pwd && $code){            $res = Db::table('s_member')->where(array('phone'=>$phone))->save(array('password'=>md5($pwd)));            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * v网编辑     */    public function edit_my_card()    {        $data = $this->request;        $insert = array();        if(isset($data['headimg'])){//头像            $insert['headimg'] = $data['headimg'];        }        if(isset($data['nick_name'])){//昵称            $insert['nick_name'] = $data['nick_name'];        }        if(isset($data['sex'])){//性别  0:男   1: 女            $insert['sex'] = $data['sex'];        }        if(isset($data['age_id'])){//年龄段id            $insert['age_id'] = $data['age_id'];        }        if(isset($data['mobile'])){//手机号            $insert['mobile'] = $data['mobile'];        }        if(isset($data['wx_ewm_url'])){//微信二维码链接            $insert['wx_ewm_url'] = $data['wx_ewm_url'];        }        if(isset($data['sq_type_id'])){//逗号隔开的字符串            $insert['sq_type_id'] = $data['sq_type_id'];        }        if(isset($data['company'])){//公司            $insert['company'] = $data['company'];        }        if(isset($data['position'])){//职务            $insert['position'] = $data['position'];        }        if(isset($data['industry_tag'])){//其他职务            $insert['industry_tag'] = $data['industry_tag'];        }        if(isset($data['address'])){//地址            $insert['address'] = $data['address'];        }        if(isset($data['email'])){//地址            $insert['email'] = $data['email'];        }        if(isset($data['is_map'])){//是否首页显示地图            $insert['is_map'] = $data['is_map'];        }        if(isset($data['share_my_introduct'])){//自我介绍            $insert['share_my_introduct'] = $data['share_my_introduct'];        }        if(isset($data['music_id'])){//音乐id            $insert['music_id'] = $data['music_id'];        }        if(isset($data['auto_music'])){//是否自动播放 1自动 0否            $insert['auto_music'] = $data['auto_music'];        }        if($insert){            $res = Db::table('s_user_info')->where(array('id'=>$this->userInfo['id']))->save($insert);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 批量删除接口     */    public function all_del()    {        $user_id = $this->userInfo['id'];        $ids = explode(',',$this->_reqparam['ids']);//以,隔开的id字符串        $type = $this->_reqparam['type'];//1:链接一切   2: 展示一切        if($type && $ids){            if($type == 1){//链接一切                $id_arr = array();                foreach ($ids as $id){                    $res = Db::table('s_users_nav')->where(array('id'=>$id,'user_id'=>$user_id))->find();                    if($res){                        $id_arr[] = $id;                    }                }                if($id_arr){                    $result = Db::table('s_users_nav')->where(array('id'=>array('in',$id_arr)))->delete();                }            }elseif($type == 2){//展示一切                $id_arr = array();                foreach ($ids as $id){                    $res = Db::table('s_card_content')->where(array('id'=>$id,'user_id'=>$user_id))->find();                    if($res){                        $id_arr[] = $id;                    }                }                if($id_arr){                    $result = Db::table('s_card_content')->where(array('id'=>array('in',$id_arr)))->delete();                }            }            if($result){                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 链接一切编辑或添加     */    public function edit_nav()    {        $title = $this->_reqparam['title'];//标题        $cover  = $this->_reqparam['cover_img'];//封面        if($title && $cover){            if($this->_reqparam['tab']){                if($this->_reqparam['is_app'] == 1){                    $tab = str_replace('&quot;','"',$this->_reqparam['tab']);                }else{                    $tab = json_encode($this->_reqparam['tab']);                }            }            $data =array(                'name'=>$title,                'icon_url'=>$cover,                'jump_url'=>$this->_reqparam['jump_url'],                'sort'=>$this->_reqparam['sort']?$this->_reqparam['sort']:0,                'tab'=>$tab?$tab:'',                'type_id'=>$this->_reqparam['type_id']?$this->_reqparam['type_id']:1            );            if($this->_reqparam['nav_id']){                //修改                $res = Db::table('s_users_nav')->where(array('id'=>$this->_reqparam['nav_id'],'user_id'=>$this->userInfo['id']))->save($data);            }else{                //添加                $data['user_id'] = $this->userInfo['id'];                $data['add_time'] = time();                $res = Db::table('s_users_nav')->add($data);            }            if($res){                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 保存轮播图     */    public function save_banner()    {        $imgs = $this->_reqparam['imgs'];//图片集合        if($this->_reqparam['is_app'] == 1){            $imgs = str_replace('&quot;','"',$imgs);            $imgs = json_decode($imgs,true);        }        if(!$imgs){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                $old = Db::table('s_user_img')->where(array('user_id'=>$this->userInfo['id']))->select();        if($old){            Db::table('s_user_img')->where(array('user_id'=>$this->userInfo['id']))->delete();        }                    $banner_list = array();        foreach ($imgs as $k=>$j){           	$banner_list[] = array('img_url'=>$j,'user_id'=>$this->userInfo['id'],'sort'=>$k,'createtime'=>time());        }                                  $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";          $res =  Db::table('s_user_img')->addAll($banner_list);          if($res){           	$this->array_return['ResultType'] = self::__OK__;          	$this->array_return['Message'] = "操作成功";                 }                     return json($this->array_return);    }    /**     * 设置隐私保护     */    public function privacy_protection()    {        $is_search = $this->_reqparam['is_search'];//0:不能在商圈搜索到   1:能搜索到        $is_copy = $this->_reqparam['is_copy'];//0 不允许被复制V网   1:允许被复制V网        $is_phone = $this->_reqparam['is_phone'];//0:手机号码不保护   1:保护        $is_wechat = $this->_reqparam['is_wechat'];//0: 微信不保护  1:保护        $keyword = $this->_reqparam['keyword'];//设置商圈搜索关键字        $save = array();        if(isset($is_search)){            $save['sq_is_search'] = $is_search;        }        if(isset($is_copy)){            $save['is_copy_cards'] = $is_copy;        }        if(isset($is_phone)){            $save['is_phone'] = $is_phone;        }        if(isset($is_wechat)){            $save['is_wechat'] = $is_wechat;        }        if(isset($keyword)){            $save['sq_keyword'] = $keyword;        }        if(!$save){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";                $res = Db::table('s_user_info')->where(array('id'=>$this->userInfo['id']))->save($save);        if($res){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }                    return json($this->array_return);    }    /**     * banner列表     */    public function banner_list()    {	            	$this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";        $list = Db::table('s_user_img')->where(array('user_id'=>$this->userInfo['id']))->field('id,img_url,sort')->order('sort asc')->select();        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }                return json($this->array_return);    }        /**     * 链接一切列表     */    public function link_list()    {        $start = $this->_reqparam['start']?$this->_reqparam['start']:0;        $length = $this->_reqparam['length']?$this->_reqparam['length']:99;        $where = array('user_id'=>$this->userInfo['id']);        if($this->_reqparam['type_id']){            $where['type_id'] = $this->_reqparam['type_id'];        }        $list = Db::table('s_users_nav')->where($where)->field('id,name,icon_url,jump_url,sort,tab')->order('sort asc,id desc')->limit($start,$length)->select();        foreach ($list as $k=>$v){            $list[$k]['tab'] = json_decode($v['tab']);        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }                return json($this->array_return);    }    /**     * 展示一切列表     */    public function show_list()    {        $start = $this->_reqparam['start']?$this->_reqparam['start']:0;        $length = $this->_reqparam['length']?$this->_reqparam['length']:99;        $where['user_id'] = $this->userInfo['id'];        $type = $this->_reqparam['type_id']?$this->_reqparam['type_id']:0;        $show_id = $this->_reqparam['show_id']?$this->_reqparam['show_id']:0;        if($type){            $where['type_id'] = $type;        }        if($show_id){            $where['id'] = $show_id;            $list = Db::table('s_card_content')->where($where)->field('id,title,thumb,content,sort,user_id')->find();            $list['detail'] = Db::table('s_card_content_res')->field('type,data_url,thumb')->where(array('card_content_id'=>$show_id))->order('sort asc')->select();        }else{            $list = Db::table('s_card_content')->where($where)->field('id,title,thumb,content,sort,user_id')->order('type_id asc,sort asc,id desc')->limit($start,$length)->select();        }                $this->array_return['ResultType'] = self::__ERROR1__;        $this->array_return['Message'] = "操作失败";        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }                return json($this->array_return);    }    /**     * 展示一切详情     */    public function show_list_detail()    {        $card_content_id = $this->_reqparam['card_content_id'];        $start = $this->_reqparam['start']?$this->_reqparam['start']:0;        $length = $this->_reqparam['length']?$this->_reqparam['length']:5;        if(!$card_content_id){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";        $lists = Db::table('s_card_content_res')->field('type,data_url,thumb')->where(array('card_content_id'=>$card_content_id))->order('sort asc')->limit($start,$length)->select();        if($lists){        	$this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $lists;        }                    return json($this->array_return);    }        /**     * 视频列表     */    public function video_list()    {        $start = $this->_reqparam['start']?$this->_reqparam['start']:0;        $length = $this->_reqparam['length']?$this->_reqparam['length']:5;        $where = array('user_id'=>$this->userInfo['id']);        if($this->_reqparam['type_id']){            $where['type_id'] = $this->_reqparam['type_id'];        }                $this->array_return['ResultType'] = self::__ERROR1__;        $this->array_return['Message'] = "操作失败";        $list = Db::table('s_user_video')->where($where)->order('sort asc,id desc')->limit($start,$length)->select();        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }                return json($this->array_return);    }}