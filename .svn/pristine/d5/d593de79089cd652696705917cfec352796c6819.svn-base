<?phpnamespace app\api\controller;use app\common\controller\ApiBase;use think\Db;class NewShowListApi extends ApiBase{    /**     * 新展示一切添加或修改分类     */    public function add_show_list_type()    {        $title = $this->_reqparam['title'];        $type_id = $this->_reqparam['type_id'];        if ($title) {            $model = new ModeTypeModel();            $type = 2; //展示一切分类            if ($type_id) {                $res = $model->add_mode_type($title, $this->userInfo['id'], $type, '', $type_id);            } else {                $max_sort = Db::table('s_mode_type')->where(array(                    'user_id' => $this->userInfo['id'],                    'type' => $type                ))->max('sort');                $sort_count = Db::table('s_mode_type')->where(array(                    'user_id' => $this->userInfo['id'],                    'type' => $type                ))->count();                if ($sort_count >= 4) {                    $this->array_return['ResultType'] = self::__ERROR1__;                    $this->array_return['Message'] = "已有4个模块";                    return json($this->array_return);                }                $res = $model->add_mode_type($title, $this->userInfo['id'], $type, ($max_sort + 1));                $new_id = $model->where(array(                    'id' => $res                ))->getField('mode_id');                $this->array_return['AppendData'] = $new_id;            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新展示一切分类列表     */    public function show_list_type()     {        $model = new ModeTypeModel();        $res = $model->mode_type_list($this->userInfo['id'], 2);        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 新展示一切分类排序修改     */    public function show_list_type_sort()     {        $content = $this->_reqparam['content']; //格式  A分类id=排序,B分类id=排序,        if ($content) {            $model = new ModeTypeModel();            $model->mode_type_sort($this->userInfo['id'], $content, 2);            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新展示一切分类删除     */    public function show_list_del_type()     {        $type_ids = $this->_reqparam['type_ids']; //以逗号隔开的字符串        if ($type_ids) {            $model = new ModeTypeModel();            $result = $model->mode_type_del($type_ids, $this->userInfo['id'], 2);            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新展示一切添加     */    public function add_show_list()     {        $uid = Db::table('s_user_info')->where(array('unionid' => $this->_reqparam['unionid']))->getField('id');        $title = $this->_reqparam['title'];        $cover_img = $this->_reqparam['cover_img'];        $content = $this->_reqparam['content'];        $show_id = $this->_reqparam['show_id'];        $type_id = $this->_reqparam['type_id'];        $model = Db::table('s_card_content');        $data = array();        if ($title) {            $data['title'] = $title;        }        if ($cover_img) {            $data['thumb'] = $cover_img;        }        if ($content) {            $data['content'] = htmlspecialchars_decode($content);        }        if ($type_id) {            $data['type_id'] = $type_id;        }        if ($show_id) {            $model->where(array('id' => $show_id))->save($data);            if ($content) {                Db::table('s_card_content_res')->where(array('card_content_id' => $show_id))->delete();            }            $res = true; //防止没有修改时        } else {            $max_sort = $model->where(array(                'user_id' => $uid            ))->max('sort');            $data['user_id'] = $uid;            $data['sort'] = $max_sort + 1;            $data['add_time'] = time();            $res = $model->add($data);            $this->array_return['AppendData'] = $res;        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 展示一切排序     */    public function show_list_sort()     {        $content = $this->_reqparam['content']; //格式  A分类id=排序,B分类id=排序,        if ($content) {            $arr_content = explode(',', $content);            foreach ($arr_content as $v) {                $new_arr = explode('=', $v);                Db::table('s_card_content')->where(array('id' => $new_arr[0],'user_id' => $this->userInfo['id']))->save(array('sort' => $new_arr[1]));            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 展示一切删除     */    public function show_list_del()     {        $ids = explode(',', $this->_reqparam['show_ids']); //以逗号隔开的字符串        if ($ids) {            $id_arr = array();            foreach ($ids as $id) {                $res = Db::table('s_card_content')->where(array('id' => $id,'user_id' => $this->userInfo['id']))->find();                if ($res) {                    $id_arr[] = $id;                }            }            if ($id_arr) {                $result = Db::table('s_card_content')->where(array('id' => array('in',$id_arr)))->delete();            }            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }}