<?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006-2016 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: 流年 <liu21st@gmail.com>
// +----------------------------------------------------------------------

// 应用公共文件
if(version_compare(PHP_VERSION,'7.0.0','>')) {
	function titleArticle($url)
	{
		require_once './vendor/autoload.php';
		$ql = \QL\QueryList::getInstance();
		$ql->use(\QL\Ext\PhantomJs::class,'/usr/bin/phantomjs');
		$ql->browser($url);
	
		$thumb = '';
		$images = $ql->find('img')->attrs('src');
		if ($images) {
	       foreach ($images as $key=>$img) {
	            $thumb = $img;
	            if ($key > 3 ) {
	                break;
	            }
	        }
	    }
	    
		$title = $ql->find('.article-title')->eq(0)->text();
		$content = $ql->find(".article-content")->html();
		return array("content"=>trim($content),"thumb"=>$thumb,"title"=>trim($title));
	}
}else{
	function titleArticle($url)
	{
	    header("Content-Type: text/html;charset=utf-8");
	    Vendor('phpQuery.phpQuery');
	    phpQuery::newDocumentFile($url);
	    //获取标题
	    $title = pq(".article-title:first")->text();
	    $title = htmlspecialchars($title);
	    //图片处理
	    $thumb = '';
	    $images = pq('.article-content img');
	    if ($images->length) {
	       foreach ($images as $key=>$img) {
	            $img = pq($img);
	            $thumb = $img->attr("src");
	            if ($key>3) {
	                break;
	            }
	        }
	    }
	    
	    //特殊处理
	    pq("p")->contents()->not('[nodeType=1]')->wrap('<span/>');
	    pq("div")->contents()->not('[nodeType=1]')->wrap('<span/>');
	    pq("span")->contents()->not('[nodeType=1]')->wrap('<span/>');
	    $content = pq(".article-content")->html();
	
	    return array("content"=>trim($content),"thumb"=>$thumb,"title"=>trim($title));
	}
}

	/**
 * @param $imgs
 * @param $start_name
 * @return string
 * @throws \OSS\Core\OssException
 * 上传阿里云图片
 */
function upload_img_to_aliyun($imgs,$start_name)
{
    if(substr($_SERVER['HTTP_HOST'],0,1) == 'w'){
        $start_name = ucwords($start_name);
    }else{
        $start_name = 'Test';
    }

    $img = '';
    if(substr($imgs,0,5) == 'data:'){
        //上传base64图
        $result = $this->base64_to_blob($imgs);
        $content =  $result['blob'];
        //匹配成功
        $img_type = str_replace('image/','',$result['type']);
        $img_type = str_replace('jpeg','jpg',$img_type);
        $image_name = uniqid().rand(1000,9999).'.'.$img_type;
        $object = $start_name.'/'.date("Y-m-d",time())."/".$image_name;
        try{
            $ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);
            $image_file = $ossClient->putObject(C('OSS_IMAGE')['bucket'], $object, $content);
            if ($image_file['status'] == 1){
                $shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);
                $img =  $shift_url."@!protected";
            }
        } catch(OssException $e) {

        }
    }else{
        $end_name = trim(strrchr($imgs['name'], '.'),'.');
        $end_name = $end_name == 'jpeg' ? 'jpg' : $end_name;
        $save_name = $start_name.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.'.$end_name;
        try{
            $ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);
            $image_file =  $ossClient->uploadFile(C('OSS_IMAGE')['bucket'], $save_name, $imgs['tmp_name']);
            if ($image_file['status'] == true){
                $shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);
                $img =  $shift_url."@!protected";

            }else{
                // 上传错误提示错误信息

            }
        } catch(OssException $e) {

        }
    }
    
    return $img;

}
/**
 * 上传视频到阿里云
 */
function upload_video_to_aliyun($videos,$start_name)
{
    if(substr($_SERVER['HTTP_HOST'],0,1) == 'w'){
        $start_name = ucwords($start_name);
    }else{
    	$start_name = 'Test';
    }
    
    $video = '';
    $end_name = trim(strrchr($videos['name'], '.'),'.');
    $save_name = $start_name.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.'.$end_name;
    try{
        $ossClient = new \OSS\OssClient(C('OSS_VIDEO')['accessKeyId'], C('OSS_VIDEO')['accessKeySecret'], C('OSS_VIDEO')['endpoint']);
        $image_file =  $ossClient->uploadFile(C('OSS_VIDEO')['bucket'], $save_name, $videos['tmp_name']);
        if ($image_file['status'] == true){
            $shift_url = str_replace(C('OSS_VIDEO')['oss_url'],C('OSS_VIDEO')['cdn_usl'],$image_file['url']);
            $video =  $shift_url;

        }else{
            // 上传错误提示错误信息

        }
    } catch(OssException $e) {

    }
    return $video;
}

/*
 *微信新闻抓取
 */
function captArticle($url="")
{
	header("Content-Type: text/html;charset=utf-8");
    Vendor('phpQuery.phpQuery');
    phpQuery::newDocumentFile($url);    
    //获取标题
    $title = pq(".rich_media_title:first")->text();
    $title = htmlspecialchars($title);
    //图片处理
    $thumb = ''; 
	$images = pq(".rich_media_content img");
	if ($images->length) {
	    foreach ($images as $key=>$data) {
	        $data_src = pq($data)->attr('data-src');
	        pq($data)->removeAttr('data-src');
	        $len = strpos($data_src,"?");
	        if ($len) { $data_src = substr($data_src,0,$len); }
	 		pq($data)->attr("src",$data_src);
	 		$data_src = str_replace("https","http",$data_src);
	    	if ($key<2) {
	    		$thumb = $data_src;
	    	}
	    }
	}
	
	//特殊处理
	pq("p")->contents()->not('[nodeType=1]')->wrap('<span/>');
	pq("div")->contents()->not('[nodeType=1]')->wrap('<span/>');
    pq("span")->contents()->not('[nodeType=1]')->wrap('<span/>');
	$content = pq(".rich_media_content")->html();
	$content = preg_replace('/[\x{10000}-\x{10FFFF}]/u', '', $content); //过滤掉表情
	$content = str_replace('text-indent: 2em;', 'text-indent:1.5em;', $content); 
 	return array("content"=>trim($content),"thumb"=>$thumb,"title"=>trim($title));
}

function  sendWxTemplateMessages($tempKey,$dataArr)
{
    require_once './ThinkPHP/Library/Vendor/wxpayapi/lib/WxPay.Config.php';
    require_once './ThinkPHP/Library/Vendor/wxpayapi/lib/wxSendMsg.php';
    $templatBrige=new wxSendMsg();
    $templatBrige->sendTempMsg($tempKey,$dataArr);
}

/**
 * @param $url
 * @param null $data
 * @param bool $json
 * @return array|mixed
 * 模拟post请求
 */
function request_post($url, $data = NULL, $json = false)
{
    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, $url);
    if (!empty($data)) {
        if($json && is_array($data)){
            $data = json_encode( $data );
        }
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        if($json){ //发送JSON数据
            curl_setopt($curl, CURLOPT_HEADER, 0);
            curl_setopt($curl, CURLOPT_HTTPHEADER,
                array(
                    'Content-Type: application/json; charset=utf-8',
                    'Content-Length:' . strlen($data))
            );
        }
    }
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
    $res = curl_exec($curl);
    $errorno = curl_errno($curl);

    if ($errorno) {
        return array('errorno' => false, 'errmsg' => $errorno);
    }
    curl_close($curl);
    return json_decode($res, true);
}

/**
* 计算两点地理坐标之间的距离
* @param  Decimal $longitude1 起点经度
* @param  Decimal $latitude1  起点纬度
* @param  Decimal $longitude2 终点经度
* @param  Decimal $latitude2  终点纬度
* @param  Int     $unit       单位 1:米 2:公里
* @param  Int     $decimal    精度 保留小数位数
* @return Decimal
*/
 function getDistance($longitude1, $latitude1, $longitude2, $latitude2, $unit=1, $decimal=0)
 {
        
	$EARTH_RADIUS = 6370.996; // 地球半径系数
    $PI = 3.1415926;
        
    $radLat1 = $latitude1 * $PI / 180.0;
    $radLat2 = $latitude2 * $PI / 180.0;
        
    $radLng1 = $longitude1 * $PI / 180.0;
    $radLng2 = $longitude2 * $PI /180.0;
        
    $a = $radLat1 - $radLat2;
    $b = $radLng1 - $radLng2;
        
    $distance = 2 * asin(sqrt(pow(sin($a/2),2) + cos($radLat1) * cos($radLat2) * pow(sin($b/2),2)));
    $distance = $distance * $EARTH_RADIUS * 1000;
        
    if($unit==2){
        $distance = $distance / 1000;
    }
        
    $range = round($distance, $decimal);
    return $range;
}

//微信用户访问统计
function user_stats($user_id=0,$target_id=0)
{	    
	//需要微信浏览器打开
	$user_agent = $_SERVER['HTTP_USER_AGENT'];
	if(!strpos($user_agent, 'MicroMessenger') || !is_numeric($user_id)) return ;

	$openid = $nickname = $headimgurl = '';
	$uinfo = session("user_info")?session("user_info"):'';
   	if ($uinfo) {
   		$openid = isset($uinfo['openid']) ? $uinfo['openid'] : '';
		$nickname = $uinfo['nick_name'];
		$headimgurl = $uinfo['headimg'];
   	}
    
   	$ctr_name = CONTROLLER_NAME; 
	$act_name = ACTION_NAME;
	$share_openid = session("share_openid") ? session("share_openid") : '' ;
	if (!$share_openid && in_array($act_name,array('previewArticle'))) {
        $url = get_current_url();
    	header('Location:/getuserinfo.php?target_url='.urlencode($url));
    	exit;
    }elseif($share_openid){   
    	$openid = $share_openid;
		$nickname = session("nickname"); 
		$headimgurl = session("headimgurl"); 
    }
    
	$data = array('control' => $ctr_name,'action'=>$act_name,'nick_name'=>$nickname,'uid'=>$user_id,'target_id'=>$target_id,
        'openid'=>$openid,'avatar'=>$headimgurl,'param'=>json_encode($_REQUEST),'add_time'=>time());    
	Db::table('user_stats')->add($data);
}