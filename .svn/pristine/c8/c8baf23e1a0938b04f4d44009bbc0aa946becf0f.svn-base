<?phpnamespace app\api\controller;use app\common\controller\ApiBase;use think\Controller;use think\Db;use app\api\logic\Cards  as cardsLogic;class NewCardApi extends  ApiBase{	private $cards_mod = null; 		public function initialize()    {    	parent::initialize();    	$this->cards_mod = new cardsLogic();    }        /**     * 新版V网排序修改     */    public function plate_order()    {        $plate = $this->_reqparam['plate'];//板块名  轮播图=0,链接一切=1        if(!$plate){            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";            return json($this->array_return);        }                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";             $res = Db::table('s_user_detail')->where(array('id'=>$this->userInfo['id']))->update(array('plate_order'=>$plate));        if ($res) {        	$this->array_return['ResultType'] = self::__OK__;                	$this->array_return['Message'] = "操作成功";        }                    return json($this->array_return);    }        /**     * 新版V网模块排序     */    public function plate_order_list()    {    	$this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";         $user = Db::table('s_user_detail')->where(array('id'=>$this->userInfo['id']))->column('plate_order');        if($user){        	$plate_order = explode(',',$user);            	foreach ($plate_order as $v){        		$order = explode('=',$v);        		$res[$order[0]] = $order[1];         	}            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        }                return json($this->array_return);    }    /**     * 链接一切添加或修改分类     */    public function add_user_nav_type()    {        $title = $this->_reqparam['title'];        $type_id = $this->_reqparam['type_id'];        if($title){            $model = new ModeTypeModel();            $type = 0;//链接一切分类            if($type_id){                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,'',$type_id);            }else{                $max_sort = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->max('sort');                $sort_count = Db::table('s_mode_type')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->count();                if($sort_count >= 4){                    $this->array_return['ResultType'] = self::__ERROR1__;                    $this->array_return['Message'] = "已有4个模块";                    return json($this->array_return);                }                $res = $model->add_mode_type($title,$this->userInfo['id'],$type,($max_sort+1));                $new_id = $model->where(array('id'=>$res))->column('mode_id');                $this->array_return['AppendData'] = $new_id;            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 链接一切分类列表     */    public function user_nav_type()    {    	    	    	$this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";         $model = new ModeTypeModel();        $res = $model->mode_type_list($this->userInfo['id'],0);        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        }                 return json($this->array_return);    }        /**     * 链接一切分类排序修改     */    public function user_nav_type_sort()    {        $content = $this->_reqparam['content'];//格式  A分类id=排序,B分类id=排序,        $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";        if($content){            $model = new ModeTypeModel();            $model->mode_type_sort($this->userInfo['id'],$content,0);            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }                return json($this->array_return);    }    /**     * 链接一切分类删除     */    public function user_nav_del_type()    {        $type_ids = $this->_reqparam['type_ids'];//以逗号隔开的字符串                        $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";        if ($type_ids) {        	$this->array_return['ResultType'] = self::__ERROR2__;            	$this->array_return['Message'] = "操作失败";            $model = new ModeTypeModel();            $result = $model->mode_type_del($type_ids,$this->userInfo['id'],0);            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            }         }                return json($this->array_return);    }    /**     * 各个功能的分类列表     */    public function mode_type_list()    {        $type = $this->_reqparam['type'];//0:链接一切分类   1:视频分类   2:展示一切分类   3：产品中心                        $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";        if($type >= 0)        {	      	        	$this->array_return['ResultType'] = self::__ERROR2__;            	$this->array_return['Message'] = "操作失败";            $result = Db::table('s_mode_type')->field('mode_id as id,title')->where(array('user_id'=>$this->userInfo['id'],'type'=>$type))->order('sort asc')->select();            if ($result) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $result;            }         }                return json($this->array_return);    }        /**     *各个功能批量移动至分类     */    public function move_type()    {        $type = $this->_reqparam['type'];//1:链接一切分类   2:视频分类   3:展示一切分类   4：产品中心        $type_ids = $this->_reqparam['type_ids'];//array('id=分类id')        $sort_ids = $this->_reqparam['sort_ids'];//array('id=排序id')        if($this->_reqparam['is_app'] == 1) {            $type_ids = str_replace('&quot;', '"', $this->_reqparam['type_ids']);            $type_ids = json_decode($type_ids,true);            $sort_ids = str_replace('&quot;', '"', $this->_reqparam['sort_ids']);            $sort_ids = json_decode($sort_ids,true);        }        if(($type_ids || $sort_ids) && $type){            if($type == 1){                if($type_ids){                    foreach ($type_ids as $v){                        $data = explode('=',$v);                        Db::table('s_users_nav')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('type_id'=>$data[1]));                    }                }else{                    foreach ($sort_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_users_nav')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('sort'=>$data[1]));                    }                }            }elseif($type == 2){                if($type_ids){                    foreach ($type_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_user_video')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('type_id'=>$data[1]));                    }                }else{                    foreach ($sort_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_user_video')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('sort'=>$data[1]));                    }                }            }elseif($type == 3){                if($type_ids){                    foreach ($type_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_card_content')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('type_id'=>$data[1]));                    }                }else{                    foreach ($sort_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_card_content')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('sort'=>$data[1]));                    }                }            }elseif($type == 4){                if($type_ids){                    foreach ($type_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_product')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('new_type'=>$data[1]));                    }                }else{                    foreach ($sort_ids as $k=>$v){                        $data = explode('=',$v);                        Db::table('s_product')->where(array('id'=>$data[0],'user_id'=>$this->userInfo['id']))->update(array('sort'=>$data[1]));                    }                }            }else{                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "缺少参数";                return json($this->array_return);            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     *  添加或修改名片扫描     */    public function fill_cards()    {        $card_id = $this->_reqparam['card_id'];//修改时主键id        $data = array();        //姓名        $data['realname'] = $this->_reqparam['realname']?$this->_reqparam['realname']:'';        //手机号        $data['telephone'] = $this->_reqparam['telephone']?$this->_reqparam['telephone']:'';        //名片图        $data['thumb'] = $this->_reqparam['thumb']?$this->_reqparam['thumb']:'';        //公司        $data['company'] = $this->_reqparam['company']?$this->_reqparam['company']:'';        //职位        $data['position'] = $this->_reqparam['position']?$this->_reqparam['position']:'';        //邮箱        $data['email'] = $this->_reqparam['email']?$this->_reqparam['email']:'';        //微信        $data['wxnum'] = $this->_reqparam['wxnum']?$this->_reqparam['wxnum']:'';        //qq        $data['qq'] = $this->_reqparam['qq']?$this->_reqparam['qq']:'';        //网址        $data['site'] = $this->_reqparam['site']?$this->_reqparam['site']:'';        //地址        $data['address'] = $this->_reqparam['address']?$this->_reqparam['address']:'';        //传真        $data['fax'] = $this->_reqparam['fax']?$this->_reqparam['fax']:'';        //邮政编码        $data['zipcode'] = $this->_reqparam['zipcode']?$this->_reqparam['zipcode']:'';        $data['user_id'] = $this->userInfo['id'];        $data['type'] = 2;        if($card_id){            $data['phone']=$data['telephone'];            $arr=array(                'thumb'=>$data['thumb'],//V网图                'company'=>$data['company'],//公司                'position'=>$data['position'],//职务                'email'=>$data['email'],//邮箱                'wxnum'=>$data['wxnum'],//微信                'qq'=>$data['qq'],//QQ                'telephone'=>$data['telephone'],//电话（小程序是手机号）                'site'=>$data['site'],//网址                'address'=>$data['address'],//地址                'fax'=>$data['fax'],//传真（小程序）                'zipcode'=>$data['zipcode'],//邮政编码（小程序）            );            $data['data']=json_encode($arr);            Db::table('s_cards')->where(array('id'=>$card_id))->update($data);            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $addId = $this->cards_mod->addCards($data);            if ($addId) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $addId;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }                return json($this->array_return);    }        /**     * 获取扫描名片的详情     */    public function cards_detail()    {        $card_id = $this->_reqparam['card_id'];                          $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";            if ($card_id) {        	$this->array_return['ResultType'] = self::__ERROR2__;        	$this->array_return['Message'] = "操作失败";                $result = Db::table('s_cards')->field('data,realname,phone')->find($card_id);            if ($result) {                $result['data'] = json_decode($result['data']);                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $result;            }         }                return json($this->array_return);    }        /**     * 快速入口添加     */    public function add_quick()    {        $quick_id = $this->_reqparam['quick_id'];//快速入口id        $data = array();        if($this->_reqparam['title']){            $data['title'] = $this->_reqparam['title'];//标题        }        if($this->_reqparam['quick_img_id']){            $data['quick_img_id'] = $this->_reqparam['quick_img_id'];//小图标id        }        if($this->_reqparam['url']){            $data['url'] = $this->_reqparam['url'];//跳转链接        }        if($this->_reqparam['is_home']){            $data['is_home'] = $this->_reqparam['is_home'];//1：首页展示 2：不展示        }        if($quick_id){            if($data){                Db::table('s_quick')->where(array('id'=>$quick_id))->update($data);            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            if($data['title'] && $data['url']){                $data['addtime'] = date('Y-m-d H:i:s');                $data['user_id'] = $this->userInfo['id'];                $count = Db::table('s_quick')->where(array('user_id'=>$data['user_id']))->count();                if($count >= 4){                    $this->array_return['ResultType'] = self::__ERROR1__;                    $this->array_return['Message'] = "最多添加4个";                }else{                    $addId = Db::table('s_quick')->insert($data);                    if ($addId) {                        $this->array_return['ResultType'] = self::__OK__;                        $this->array_return['Message'] = "操作成功";                        $this->array_return['AppendData'] = $addId;                    } else {                        $this->array_return['ResultType'] = self::__ERROR2__;                        $this->array_return['Message'] = "操作失败";                    }                }            }else{                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "缺少参数";            }        }                return json($this->array_return);    }        /**     * 快速入口小图标列表     */    public function quick_img()    {        $res = Db::table('s_quick_img')->select();        $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";            if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        }                return json($this->array_return);    }        /**     *快速入口列表或详情     */    public function quick_list()    {        $type = $this->_reqparam['type'];//1：首页展示   2：获取全部        $quick_id = $this->_reqparam['quick_id'];//1：首页展示   2：获取全部        $where['user_id']=$this->userInfo['id'];        if($type == 1){            $where['is_home']=1;        }        if($quick_id){            $res = Db::table('s_quick')->alias('q')->leftJoin(' s_quick_img img','img.id = q.quick_img_id')                ->field('q.id,q.title,q.url,img.img,q.is_home')->where(array('id'=>$quick_id))->find();        }else{            $res =  Db::table('s_quick')->alias('q')->leftJoin(' s_quick_img img','img.id = q.quick_img_id')                ->field('q.id,q.title,q.url,img.img,q.is_home')->where($where)->select();        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        }                return json($this->array_return);    }        /**     * 快速入口删除     */    public function del_quick()    {        $quick_id = $this->_reqparam['quick_id'];//快速入口id        $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";        if($quick_id){            $res = Db::table('s_quick')->where(array('id'=>$quick_id))->delete();            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            }        }                return json($this->array_return);    }    /**     * 模板列表以及详情     */    public function style_list()    {        $style_id = $this->_reqparam['style_id'];        if($style_id){            $res['detail'] = Db::table('s_style_detail')->where(array('style_id'=>$style_id,'type'=>1))->select();            $res['background'] = Db::table('s_style_detail')->where(array('style_id'=>$style_id,'type'=>2))->column('img');            $fu = Db::table('s_style')->where(array('id'=>$style_id))->field('title,type')->find();            $res['title'] = $fu['title'];            $res['type'] = $fu['type'];        }else{            $res = Db::table('s_style')->select();        }                $this->array_return['ResultType'] = self::__ERROR2__;        $this->array_return['Message'] = "操作失败";        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        }                return json($this->array_return);    }    /**     * 设置模板     */    public function edit_style()    {        $style_id = $this->_reqparam['style_id'];         $this->array_return['ResultType'] = self::__ERROR__;        $this->array_return['Message'] = "缺少参数";        if($style_id)        {        	$this->array_return['ResultType'] = self::__ERROR2__;            	$this->array_return['Message'] = "操作失败";            $res = Db::table('s_user_detail')->where(array('id'=>$this->userInfo['id']))->update(array('style'=>$style_id));            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            }         }                return json($this->array_return);    }}