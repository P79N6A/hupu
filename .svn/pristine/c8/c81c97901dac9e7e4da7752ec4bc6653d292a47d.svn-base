<?php/***********Vip购买列表逻辑层************ */namespace app\api\logic;use think\Model;class VipList extends Model{    private $User = null;    private $VipGroup = null;    private $VipOrder = null;	private $Vip = null;	private $FansLogic = null;    private $MemberLogic = null;	private $CapitalLog = null;    function __construct()    {        $this->User = D('Api/UserInfo');        $this->Vip = D('Api/VipList');        $this->VipOrder = D('Api/VipOrder');        $this->VipGroup = D('Api/VipGroup');        $this->CapitalLog = D('Api/CapitalLog');                $this->FansLogic = D('Api/UsersFans','Logic');        $this->MemberLogic = D('Api/Member','Logic');    }    public function payCallback($options=array())    {        //续费回调        if($options['result_code']!="SUCCESS" || !isset($options['attach']))        {            return 0;        }                $user_id=$options['data']['user_id'];        $day=$options['data']['day'];//续费天数        $object_id=$options['order_id'];        $total_fee=$options['total_fee']/100;        $data['pay_sn']=$options['transaction_id'];//微信订单号        $data['order_sn']=$options['out_trade_no'];//商户订单号        $data['user_id']=$user_id;        $data['object_id']=$object_id;        $data['as']=2;//减少        $data['money']=$total_fee;        $data['type']=5;        $data['pay_callback']=json_encode($options);//第三方支付回调        //todo 避免重复加入        $log = $this->CapitalLog->where(['order_sn' => $options['out_trade_no'], 'user_id' => $user_id])->find();        if ($log) {            return 1;        }        $this->FansLogic->year_money(array(            'user_id'=>$user_id,            'order_sn'=>$data['order_sn'],        ));        //分佣计算        $this->CapitalLog->add($data);        $this->User->where(array('id'=>$user_id))->setInc('vip_orver_time',365*24*3600);        echo "SUCCESS";    }    public function getVipList($options=array())    {        //获取Vip列表        $where['status']=1;        $list=$this->Vip->where($where)->select();        foreach ($list as $key => $value) {            $vip=$this->VipGroup->where(array('id'=>$value['vip_group_id']))->find();            $list[$key]['vip_name']=$vip['vip_name'];        }        return $list;    }    public function buyVip($options=array())    {        $old = Db::table('s_vip_order')->where(array('pay_status'=>1,'vip_list_id'=>$options['vip_id'],'user_id'=>$options['user_id']))->find();        if($old){            //避免重复付款            return 0;        }        //会员购买        $where = array('pay_status'=>0,'vip_list_id'=>$options['vip_id'],'user_id'=>$options['user_id']);        $vip_order = $this->VipOrder->where($where)->find();        if(!$vip_order){            $order['order_no'] = getOrderSn();            $order['user_id']=$options['user_id'];            $order['vip_list_id']=$options['vip_id'];            $order['pay_source']=$options['pay_source'];            $vip=$this->Vip->where(array('id'=>$order['vip_list_id']))->find();            $order['price']=$vip['money'];            $order['pay_status']=0;            $order['add_time']=time();            $order_id=D('Api/VipOrder')->add($order);        }else{            $order_id=$vip_order['id'];        }                return $order_id;    }    public function BuyCallBack($options=array())    {        //会员购买回调        if($options['result_code']!="SUCCESS"){            return 0;        }        if(!isset($options['attach'])){            return 0;        }        $order_id = $options['order_id'];        $vipOrder = $this->VipOrder->where(array('id'=>$order_id))->find();        $user = Db::table("s_UserInfo")->where(array('id'=>$vipOrder['user_id']))->find();        $user_id = $user['id'];        $bind_user_id = $user['rec_user_id'];//推荐人人id        if(empty($bind_user_id)){            $bind_user_id=$user_id;//没有传默认是自己        }        $vip_id=$vipOrder['vip_list_id'];        $vip=$this->Vip->where(array('id'=>$vip_id))->find();        $vipGroup=$this->VipGroup->where(array('id'=>$vip['vip_group_id']))->find();        $old_order = $this->VipOrder->where(array('id'=>$order_id,'pay_status'=>1))->find();//更改订单状态        if($old_order){            return 1;        }                $this->VipOrder->where(array('id'=>$order_id))->save(array('pay_status'=>1));//更改订单状态        $userData['give_vip1_count']=$vipGroup['give_vip1_count'];        $userData['give_vip2_count']=$vipGroup['give_vip2_count'];        $userData['give_vip3_count']=$vipGroup['give_vip3_count'];        $userData['give_vip4_count']=$vipGroup['give_vip4_count'];        $userData['give_vip5_count']=$vipGroup['give_vip5_count'];        $userData['vip_id']=$vip_id;        $userData['vip_group_id']=$vip['vip_group_id'];        $userData['vip_orver_time']=strtotime('+1 year');//1年过期        //用户注册加积分        $dat['user_id']=$user['rec_user_id'];        $dat['inte'] = Db::table("s_inte")->where('id=6')->getField('inte');        $dat['addtime']=time();        $dat['inte_id']=6;        Db::table("s_user_info")->where(array('id'=>$dat['user_id']))->setInc('inte',$dat['inte']);        Db::table('s_inte_log')->add($dat);        $this->User->where(array('id'=>$user_id))->save($userData);        $total_fee=$options['total_fee']/100;        $data['pay_sn']=$options['transaction_id'];//微信订单号        $data['order_sn']=$vipOrder['order_no'];//订单号        $data['user_id']=$user_id;        $data['object_id']=$vip_id;        $data['as']=2;//减少        if(intval($vipOrder['price'])==298)        {            $vipOrder['price']=198;        }        $data['money']=$vipOrder['price'];        $data['msg']="会员购买";        $data['type']=3;        $data['pay_callback']=json_encode($options);//第三方支付回调        //todo 避免重复加入        $log = $this->CapitalLog->where(['order_sn' => $vipOrder['order_no'], 'user_id' => $user_id])->find();        if ($log) {            return 1;        }        $this->FansLogic->nexus(array(            'user_id'=>$user_id,            'vip_id'=>$vip_id,            'level'=>$vipGroup['level'],            'money'=>$data['money'],            'order_sn'=>$data['order_sn'],            'vip_name'=>$vipGroup['vip_name']        ));//分佣计算        $this->CapitalLog->add($data);        return 1;    }    public function buyByMiBi($order_id = '')    {        //会员购买回调        if(empty($order_id)){            $this->error("访问错误");exit;        }                $vipOrder = D('Api/VipOrder')->where(array('id'=>$order_id))->find();        $user = Db::table("s_user_info")->where(array('id'=>$vipOrder['user_id']))->find();        $user_id = $user['id'];        $bind_user_id = $user['rec_user_id'];//推荐人人id        if(empty($bind_user_id)){            $bind_user_id = $user_id;//没有传默认是自己        }        $vip_id = $vipOrder['vip_list_id'];        $vip = D('Api/VipList')->where(array('id'=>$vip_id))->find();        $vipGroup = D('Api/VipGroup')->where(array('id'=>$vip['vip_group_id']))->find();        $userData['give_vip1_count'] = $vipGroup['give_vip1_count'];        $userData['give_vip2_count'] = $vipGroup['give_vip2_count'];        $userData['give_vip3_count'] = $vipGroup['give_vip3_count'];        $userData['give_vip4_count'] = $vipGroup['give_vip4_count'];        $userData['give_vip5_count'] = $vipGroup['give_vip5_count'];        $userData['vip_id'] = $vip_id;        $userData['vip_group_id'] = $vip['vip_group_id'];        $userData['vip_orver_time'] = strtotime('+1 year');//1年过期        //用户注册加积分        $dat['user_id']=$user['rec_user_id'];        $dat['inte'] = Db::table("s_inte")->where('id=6')->getField('inte');        $dat['addtime']=time();        $dat['inte_id']=6;        $data['order_sn']=$vipOrder['order_no'];//订单号        $data['user_id']=$user_id;        $data['object_id']=$vip_id;        $data['as']=2;//减少        if(intval($vipOrder['price'])==298)        {            $vipOrder['price']=198;        }        $data['money']=$vipOrder['price'];        $data['msg']="会员购买";        $data['type']=3;        //todo 避免重复加入        $log = D('Api/CapitalLog')->where(['order_sn' => $vipOrder['order_no'], 'user_id' => $user_id])->find();        if ($log) {            return 2;        }        D('Api/UsersFans','Logic')->nexus(array(            'user_id'=>$user_id,            'vip_id'=>$vip_id,            'level'=>$vipGroup['level'],            'money'=>$data['money'],            'order_sn'=>$data['order_sn'],            'vip_name'=>$vipGroup['vip_name']        ));//分佣计算              Db::startTrans();	   try {	       Db::table("s_user_info")->where(array('id'=>$user['rec_user_id']))->setInc('inte',$dat['inte']);	       Db::table('s_inte_log')->add($dat);	       D('Api/UserInfo')->where(array('id'=>$user_id))->save($userData);	       D('Api/VipOrder')->where(array('id'=>$order_id))->save(array('pay_status'=>1));//更改订单状态	       D('Api/CapitalLog')->add($data);	       Db::table('s_user_info')->where(array('id'=>$user['id']))->setDec('money',$vipOrder['price']);	       Db::commit();           return 1;       } catch (\Exception $e) {            Db::rollback();            return 0;        }    }}