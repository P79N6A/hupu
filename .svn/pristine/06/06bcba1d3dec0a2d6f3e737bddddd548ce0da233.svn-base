<?phpnamespace app\api\controller;use Think\Controller;class IndexApi extends Controller {    const __OK__ = '0'; //请求成功    const __ERROR__ = '1'; //参数错误    const __ERROR1__ = '2'; //没有绑定    const __ERROR2__ = '3';//数据库错误    private $code_expire_time=60;//验证码过期时间    private $array_return=array("ResultType"=>1,"Message"=>"success","AppendData"=>[]);    private $request;    private $userInfo;    public function _initialize()    {        if($_SERVER['REQUEST_METHOD']=='PUT'){            $input=json_decode(file_get_contents('php://input'));            if($input){                $this->request=$this->object_array($input);            }        }else{            $this->request = Request::param();        }        $actionName = strtolower(ACTION_NAME);        $noLogin = array('send_phone_code','region_list','age_group');        if(!in_array($actionName,$noLogin)) {            if ($this->request['spopenid']) {                $this->userInfo = D("Api/User", 'Logic')->getUserInfoOption(array('spopenid' => $this->request['spopenid']));            } elseif ($this->request['unionid']) {                // 返回所有信息是否合适                $this->userInfo = Db::table('s_user_info')->where(array('unionid' => $this->request['unionid']))->find();            } elseif ($this->request['id']) {                $this->userInfo = Db::table('s_user_info')->find($this->request['id']);            } else {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "非法访问";                $this->array_return['data'] = null;                return json($this->array_return);            }            if (!$this->userInfo) {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "没有该用户或登录失败";                $this->array_return['data'] = null;                return json($this->array_return);            } else {                $this->request['userInfo'] = $this->userInfo;            }        }    }    /**     * 摇一摇,小雷达(打开)     */    public function shake_open()    {        $mode = Db::table('s_shake');        $data = array(            'user_id' => $this->request['unionid'] ? $this->userInfo['id'] : '',            'spopenid' => $this->request['spopenid'] ? $this->request['spopenid'] : '',            's_time' => time(),            'latitude' => $this->request['latitude'],//纬度            'longitude' => $this->request['longitude'],//经度            'is_falg' => $this->request['is_falg']?'1':0,            'is_radar' => $this->request['is_radar']?'1':0,        );        if ($data['user_id']) {            $old = $mode->where(array('user_id' => $data['user_id']))->find();            if (empty($old)) {                $res = $mode->add($data);            } else {                $res = $mode->where(array('id' => $old['id']))->data($data)->save();            }        } else {            $old = $mode->where(array('spopenid' => $data['spopenid']))->find();            if (empty($old)) {                $res = $mode->add($data);            } else {                $res = $mode->where(array('id' => $old['id']))->data($data)->save();            }        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 摇一摇搜索     */    public function shake_search()    {        $mode = Db::table('s_shake');        $data = array(            'user_id' => $this->request['unionid'] ? $this->userInfo['id'] : '',            'spopenid' => $this->request['spopenid'] ? $this->request['spopenid'] : '',        );        $Model = new \Think\Model();        if ($data['user_id']) {            $old = $mode->where(array('user_id' => $data['user_id']))->find();            $starttime = $old['s_time']-7;            $endtime = $old['s_time']+7;            $res = $Model->query("SELECT u.unionid,u.nick_name,u.headimg,u.position,u.email,u.company,m.phone,s.user_id,longitude,latitude, ROUND(6378.138*2*ASIN(SQRT(POW(SIN((".$old['latitude']."*PI()/180-latitude*PI()/180)/2),2)+COS(".$old['latitude']."*PI()/180)*COS(latitude*PI()/180)*POW(SIN((".$old['longitude']."*PI()/180-longitude*PI()/180)/2),2)))*1000) AS distance FROM s_shake as s join s_user_info as u on u.id = s.user_id left join s_member as m on m.id = u.member_id  WHERE is_falg = 1 AND (s_time between '".$starttime."' and '".$endtime."') AND s.id != ".$old['id']." ORDER BY distance ASC LIMIT 1");        } else {            $old = $mode->where(array('spopenid' => $data['spopenid']))->find();            $starttime = $old['s_time']-5;            $endtime = $old['s_time']+5;            $res = $Model->query("SELECT u.unionid,u.id as user_id,u.nick_name,u.headimg,u.position,u.email,u.company,m.phone,s.spopenid,longitude,latitude, ROUND(6378.138*2*ASIN(SQRT(POW(SIN((".$old['latitude']."*PI()/180-latitude*PI()/180)/2),2)+COS(".$old['latitude']."*PI()/180)*COS(latitude*PI()/180)*POW(SIN((".$old['longitude']."*PI()/180-longitude*PI()/180)/2),2)))*1000) AS distance FROM s_shake as s join s_member as m on m.spopenid = s.spopenid left join s_user_info as u on u.member_id = m.id WHERE is_falg = 1 AND (s_time between '".$starttime."' and '".$endtime."') AND s.id != ".$old['id']." ORDER BY distance ASC LIMIT 1");        }        foreach ($res as &$v){            if(substr($v['headimg'],0,4) != 'http'){                $v['headimg'] = 'http://wx.yxm360.com'.$v['headimg'];            }        }                if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 小雷达搜索     */    public function radar_search()    {        $postData = $this->request;        if($postData['longitude'] && $postData['latitude']) {            $Model = new \Think\Model();            if ($postData['unionid']) {                $res = $Model->query("SELECT u.unionid,u.nick_name,u.headimg,u.position,u.email,u.company,m.phone,s.user_id,longitude,latitude, ROUND(6378.138*2*ASIN(SQRT(POW(SIN((".$postData['latitude']."*PI()/180-latitude*PI()/180)/2),2)+COS(".$postData['latitude']."*PI()/180)*COS(latitude*PI()/180)*POW(SIN((".$postData['longitude']."*PI()/180-longitude*PI()/180)/2),2)))*1000) AS distance FROM s_shake as s join s_user_info as u on u.id = s.user_id left join s_member as m on m.id = u.member_id WHERE s_time > ".strtotime(date('Ymd'))." AND is_radar = 1 AND s.user_id != '".$this->userInfo['id']."' ORDER BY distance ASC limit 50");            } else {                $res = $Model->query("SELECT u.unionid,u.id as user_id,u.nick_name,u.headimg,u.position,u.email,u.company,m.phone,s.spopenid,longitude,latitude, ROUND(6378.138*2*ASIN(SQRT(POW(SIN((".$postData['latitude']."*PI()/180-latitude*PI()/180)/2),2)+COS(".$postData['latitude']."*PI()/180)*COS(latitude*PI()/180)*POW(SIN((".$postData['longitude']."*PI()/180-longitude*PI()/180)/2),2)))*1000) AS distance FROM s_shake as s join s_member as m on m.spopenid = s.spopenid left join s_user_info as u on u.member_id = m.id WHERE s_time > ".strtotime(date('Ymd'))." AND is_radar = 1 AND s.spopenid != '".$postData['spopenid']."' ORDER BY distance ASC limit 50");            }            foreach ($res as &$v){                if(substr($v['headimg'],0,4) != 'http'){                    $v['headimg'] = 'http://wx.yxm360.com'.$v['headimg'];                }            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 获取签到的天数（目前只返回本月和上月）     */    public function get_sign_day()    {        $data = Db::table('s_inte_log')->where(array('user_id'=>$this->userInfo['id'],'addtime'=>array('gt',strtotime(date('Ym01',strtotime('-1 month')))),'inte_id'=>1))->field('addtime')->select();        if(!empty($data)){            foreach ($data as &$v){                $v['addtime'] = date('Y-m-d',$v['addtime']);            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $data;        }else{            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 每日签到获取积分     */    public function sign_inte()    {        $post = $this->request['day'];//日期格式  2018-03-05        if(date('Y-m-d') != $post){            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";            return json($this->array_return);        }        $inte = Db::table('s_inte')->where(array('id'=>1))->getField('inte');//签到积分        // 查看最后一次的签到信息        $old_time = Db::table('s_inte_log')->where(array('user_id'=>$this->userInfo['id'],'inte_id'=>1))->order('addtime desc')->find();        if(date('Ymd',$old_time['addtime']) == date('Ymd',strtotime('-1 day')) && date('w') != '1'){            $inte = $old_time['inte'] * 2;            Db::table('s_inte_log')->add(array('user_id'=>$this->userInfo['id'],'addtime'=>time(),'inte'=>$inte,'inte_id'=>1));        }elseif(date('Ymd',$old_time['addtime']) == date('Ymd')){            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "今日已签到";            return json($this->array_return);        }else{            Db::table('s_inte_log')->add(array('user_id'=>$this->userInfo['id'],'addtime'=>time(),'inte'=>$inte,'inte_id'=>1));        }        $res =  Db::table('s_user_info')->where(array('id'=>$this->userInfo['id']))->setInc('inte',$inte);        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $inte;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 年龄段接口     */    public function age_group()    {        $list = Db::table('s_age')->select();        if ($list) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 行业接口     */    public function industry_list()    {        $type_id = $this->request['parent_id'];        if($type_id){            $res = Db::table('s_sqtype')->where(array('parent_id'=>$type_id))->field('id,name')->select();        }else{            $res = Db::table('s_sqtype')->where(array('parent_id'=>0))->field('id,name')->select();            foreach ($res as &$r){                $r['two_list'] = Db::table('s_sqtype')->where(array('parent_id'=>$r['id']))->field('id,name')->select();            }        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 地区接口     */    public function region_list()    {        $regionid = $this->request['region_id'];//一级地区id        if(!empty($regionid)){            $where['top_parentid'] = $regionid;            $where['level'] = 2;            if (in_array($regionid,array(1,2,9,22,3561))) {                $where['level'] = 3;            }            $res = Db::table('s_region')->where($where)->field('region_id,region_name')->select();        }else{            $res = Db::table('s_region')->where(array('level'=>1))->field('region_id,region_name')->order('highlight desc')->select();        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 地区接口(一个数组)     */    public function region_lists()    {        $res = Db::table('s_region')->where(array('level'=>1))->field('region_id,region_name')->order('highlight desc')->select();        foreach ($res as &$v){            $where['top_parentid'] = $v['region_id'];            $where['level'] = 2;            if (in_array($v['region_id'],array(1,2,9,22,3561))) {                $where['level'] = 3;            }            $v['ChildList'] = Db::table('s_region')->where($where)->field('region_id,region_name')->select();        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 海报分类     */    public function poster_type()    {        $res = Db::table('s_poster_type')->field('id,title')->order('sort asc,addtime desc')->select();        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 海报获取底图,获取海报信息     */    public function poster_img()    {        $poster_id = $this->request['poster_id'];//底图id        $my_id = $this->request['my_id'];//我的海报id        $type = $this->request['type_id'];//海报分类id        $data = array();        if ($type) {            $data['my'] = Db::table('s_user_poster')->where(array('user_id' => $this->userInfo['id'], 'type_id' => $type))->select();            $data['model'] = Db::table('s_poster_img')->where(array('type_id' => $type))->order('sort asc,id desc')->select();        } elseif ($poster_id) {            $data = Db::table('s_poster_img')->where(array('id' => $poster_id))->find();            //创建路径            $qrcode_save_path="./Uploads/Poster/";            if(!is_dir($qrcode_save_path.date('Ymd'))){                mkdir($qrcode_save_path.date('Ymd'),0777,true);            }            //保存路径和文件名称            $qrCode_file_name = $qrcode_save_path.md5($this->userInfo['id']).'.png';            $url = 'http://'.$_SERVER['HTTP_HOST'].'/index.php?s=/Home/Nologin/card_jump/id/'.$this->userInfo['id'];            if(!$this->img_exists($qrCode_file_name)){                qrcode2($url,4,$qrCode_file_name);            }            $data['erweima'] =  'http://wx.yxm360.com'.substr($qrCode_file_name,1);        } elseif($my_id) {            $data = Db::table('s_user_poster')->where(array('id' => $my_id))->find();        }else{            $data['my'] = Db::table('s_user_poster')->where(array('user_id' => $this->userInfo['id']))->select();        }        if ($data) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $data;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     *海报合成     */    public function synthesis_poster()    {        $user_id = $this->userInfo['id'];        $my_id = $this->request['my_id']?$this->request['my_id']:0;        $sharePublicIMg = $this->request['img'];        $left = $this->request['left'];        $top = $this->request['top'];        if($this->request['is_gzh']){            $left = 300;            $top = 1000;        }        $add = array(            'title'=>$this->request['title'],            'content'=>$this->request['content']        );        if($my_id){            $res = Db::table('s_user_poster')->where(array('id'=>$my_id))->data($add)->save();        }else{            //创建路径            $qrcode_save_path="./Uploads/Poster/";            if(!is_dir($qrcode_save_path.date('Ymd'))){                mkdir($qrcode_save_path.date('Ymd'),0777,true);            }            //保存路径和文件名称            $qrCode_file_name = $qrcode_save_path.md5($user_id).'.png';            $url = 'http://'.$_SERVER['HTTP_HOST'].'/index.php?s=/Home/Nologin/card_jump/id/'.$user_id;            if(!$this->img_exists($qrCode_file_name)){                qrcode2($url,4,$qrCode_file_name);            }            $file_name= $qrcode_save_path.date('Ymd').'/bg_'.$user_id.time().'.png';            $imgEven = A('Home/Img','Event');            $this->img=$imgEven->save_poster_img($sharePublicIMg,$qrCode_file_name,$file_name,$left,$top);            $end_name = trim(strrchr(substr($this->img,1), '.'),'.');            $start_name = 'Poster';            $save_name = $start_name.'/'.date('Ymd').'/'.time().rand(1,9999).'.'.$end_name;            try{                $ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);                $image_file =  $ossClient->uploadFile(C('OSS_IMAGE')['bucket'], $save_name, $this->img);                if ($image_file['status'] == true){                    $shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);                    $result_url =  $shift_url."@!protected";                    $add['img'] = $result_url;                    unlink(substr($this->img,2));                    unlink(substr($qrCode_file_name,2));                }else{                    // 上传错误提示错误信息                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "操作失败";                }            } catch(OssException $e) {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }            $add['user_id'] = $user_id;            $add['addtime'] = time();            $add['type_id'] = $this->request['type_id'];            $res = Db::table('s_user_poster')->add($add);        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['New_id'] = $res;            $this->array_return['AppendData'] = $add['img'];        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 海报删除     */    public function poster_del()    {        $my_id = $this->request['my_id'];//我的海报id        $old = Db::table('s_user_poster')->where(array('id'=>$my_id))->find();        if($old){            $res = Db::table("s_user_poster")->where(array('id'=>$my_id))->delete();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "参数错误";        }                return json($this->array_return);    }    /**     * 获取底图     */    public function wallpaper_list()    {        $model = Db::table('s_wallpaper_img')->field('id,img')->select();        foreach ($model as &$v){            $v['my'] = Db::table('s_user_wallpaper')->where(array('wid'=>$v['id'],'user_id'=>$this->userInfo['id']))->find();        }        if ($model) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $model;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 壁纸删除     */    public function wallpaper_del()    {        $wall_id = $this->request['wall_id'];        if($wall_id){            $res = Db::table('s_user_wallpaper')->where(array('id'=>$wall_id))->delete();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "删除成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     *壁纸生成     */    public function extension_code()    {        $user_id = $this->userInfo['id'];        $w_id = $this->request['w_id'];//模板id        $wall = Db::table('s_wallpaper_img')->where(array('id'=>$w_id))->find();        $left = $this->request['left']?$this->request['left']:255;        $top = $this->request['top']?$this->request['top']:684;        if($user_id && $w_id){            $old = Db::table('s_user_wallpaper')->where(array('user_id'=>$user_id,'wid'=>$w_id))->find();            if($old){                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $old;            }else{                $add = array(                    'user_id'=>$user_id,                    'wid'=>$w_id,                    'addtime'=>time()                );                //创建路径                $qrcode_save_path="./Uploads/Ewm/";                if(!is_dir($qrcode_save_path.date('Ymd'))){                    $a=mkdir($qrcode_save_path.date('Ymd'),0777,true);                }                //保存路径和文件名称                $qrCode_file_name = $qrcode_save_path.date('Ymd').'/'.md5($user_id).'.png';                //保存内容                $url = 'http://'.$_SERVER['HTTP_HOST'].'/index.php?s=/Home/Nologin/card_jump/id/'.$user_id;                $userinfo = Db::table("s_userInfo")->where(array('id'=>$user_id))->find();                //生成qrcode                $userImg = $userinfo['headimg'];                $image = new \Think\Image();                if(substr($userImg,0,4) == 'http'){                    if (!getimagesize($userImg)) {                        $userImg="/Uploads/User/b.png";                        $head_img_path = $qrcode_save_path.date('Ymd').'/head_'.md5($user_id).'.png';                    }else{                        $head_img_path = $qrcode_save_path.date('Ymd').'/head_'.md5($user_id).'.jpg';                    }                    $image->open($userImg);                }else{                    if (!getimagesize('.'.$userImg)) {                        $userImg="/Uploads/User/b.png";                        $head_img_path=$qrcode_save_path.date('Ymd').'/head_'.md5($user_id).'.png';                    }else{                        $head_img_path=$qrcode_save_path.date('Ymd').'/head_'.md5($user_id).'.jpg';                    }                    $image->open('.'.$userImg);                }                qrcode2($url,4,$qrCode_file_name);                $sharePublicIMg=$wall['img'];                $userName="我是".$userinfo['nick_name'];                $font_path = './Uploads/msyh.ttf';                $file_name= $qrcode_save_path.date('Ymd').'/bg_'.md5($user_id).time().'.png';                $image->thumb($wall['size'], $wall['size'],3)->save($head_img_path);                $imgEven = A('Home/Img','Event');                 $this->img = $imgEven->save_userShareImg($sharePublicIMg,$head_img_path,$qrCode_file_name,$file_name,$userName,'',$font_path,$wall['left'],$wall['top'],$wall['size'],$left,$top);                $end_name = trim(strrchr(substr($this->img,1), '.'),'.');                $start_name = 'Wallpaper';                $save_name = $start_name.'/'.date('Ymd').'/'.time().rand(1,9999).'.'.$end_name;                try{                    $ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);                    $image_file =  $ossClient->uploadFile(C('OSS_IMAGE')['bucket'], $save_name, $this->img);                    if ($image_file['status'] == true){                        $shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);                        $result_url =  $shift_url."@!protected";                        $add['img'] = $result_url;                        unlink(substr($this->img,2));                        unlink(substr($qrCode_file_name,2));                        unlink(substr($head_img_path,2));                    }else{                        // 上传错误提示错误信息                        $this->array_return['ResultType'] = self::__ERROR2__;                        $this->array_return['Message'] = "操作失败";                    }                } catch(OssException $e) {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "操作失败";                }                $res = Db::table('s_user_wallpaper')->add($add);                if ($res) {                    $this->array_return['ResultType'] = self::__OK__;                    $this->array_return['Message'] = "操作成功";                    $this->array_return['AppendData'] = $add['img'];                } else {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "操作失败";                }            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 相册分类列表     */    public function get_album_type()    {        $list = Db::table('s_album_type')->order('addtime desc')->select();        if ($list) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 获取相册列表以及自己相册详情     */    public function get_album_list()    {        $user_id = $this->userInfo['id'];        $type = $this->request['type_id'];        $my_id = $this->request['my_id'];        $model_id = $this->request['model_id'];        $start = $this->request['start']?$this->request['start']:0;        $length = $this->request['length']?$this->request['length']:10;        $res = array();        if($type){            $res['mine'] = Db::table('s_user_album')->field('id,cover_img')->where(array('type_id'=>$type,'user_id'=>$user_id))->select();            $res['model'] = Db::table('s_album')->field('id,cover_img')->where(array('type_id'=>$type))->select();        }elseif($my_id){            $res = Db::table('s_user_album')->alias('ua')                ->join('left join s_music m on m.id = ua.music_id')                ->field('ua.*,m.url as music_url')                ->where(array('ua.id'=>$my_id))->find();            $res['content_detail'] = Db::table('s_user_album_detail')->where(array('album_id'=>$res['id']))->order('sort asc')->select();        }elseif($model_id){            $res = Db::table('s_album')->alias('a')                ->join('left join s_music m on m.id = a.music_id')                ->field('a.*,m.url as music_url')                ->where(array('a.id'=>$model_id))->find();            $res['content_detail'] = Db::table('s_album_detail')->where(array('album_id'=>$res['id']))->order('sort asc')->select();        }else{            $res = Db::table('s_user_album')->field('id,cover_img')->where(array('user_id'=>$user_id))->limit($start,$length)->select();        }        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "没有数据";        }                return json($this->array_return);    }        /**     * 添加自己的相册     */    public function add_album()    {        $user_id = $this->userInfo['id'];        $model_id = $this->request['model_id'];        if($model_id){            $model = Db::table('s_album')->where(array('id'=>$model_id))->find();            $data = array(                'cover_img'=>$model['cover_img'],                'share_title'=>$model['share_title'],                'share_content'=>$model['share_content'],                'music_id'=>$model['music_id'],                'user_id'=>$user_id,                'type_id'=>$model['type_id'],                'album_id'=>$model_id,                'addtime'=>time()            );            $res = Db::table('s_user_album')->add($data);            $list = Db::table('s_album_detail')->where(array('album_id'=>$model_id))->select();            if ($res) {                foreach ($list as $li){                    $ress = array(                        'img'=>$li['img'],                        'content'=>$li['content'],                        'font_color'=>$li['font_color'],                        'font_x'=>$li['font_x'],                        'font_y'=>$li['font_y'],                        'album_id'=>$res,                        'user_id'=>$user_id,                        'sort'=>$li['sort'],                        'addtime'=>$li['addtime']                    );                    Db::table('s_user_album_detail')->add($ress);                }                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 内容页修改     */    public function edit_album_content()    {        $my_id = $this->request['my_id'];//我的相册id        if($my_id){            $data = array();            if($this->request['cover_img']){                $data['cover_img'] = $this->request['cover_img'];            }            if($this->request['share_title']){                $data['share_title'] = $this->request['share_title'];            }            if($this->request['share_content']){                $data['share_content'] = $this->request['share_content'];            }            if($this->request['music_id']>=0){                $data['music_id'] = $this->request['music_id'];            }            $res = Db::table('s_user_album')->where(array('id'=>$my_id))->data($data)->save();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 板块内容列表     */    public function album_template()    {        $model_id = $this->request['model_id'];        if($model_id){            $list = Db::table('s_album_detail')->field('id,img')->where(array('album_id'=>$model_id))->select();            if ($list) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     *内容页添加模块     */    public function add_album_template()    {        $my_id = $this->request['my_id'];//自己相册id        $content_id = $this->request['content_id'];//模板内容id        $user_id = $this->userInfo['id'];        if($my_id && $content_id){            $model = Db::table('s_album_detail')->where(array('id'=>$content_id))->find();            $add = array(                'img'=>$model['img'],                'content'=>$model['content'],                'font_color'=>$model['font_color'],                'font_x'=>$model['font_x'],                'font_y'=>$model['font_y'],                'album_id'=>$my_id,                'user_id'=>$user_id,                'sort'=>$model['sort'],                'addtime'=>time()            );            $res = Db::table('s_user_album_detail')->add($add);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     *新相册内容页修改排序     */    public function edit_album_sort()    {        $content_ids = $this->request['content_id'];//内容id作为数组:array(1,2,3)        if($content_ids){            if($this->request['is_app'] == 1){                $content_ids = explode(',',$content_ids);            }            foreach ($content_ids as $k=>$content_id){                Db::table('s_user_album_detail')->where(array('user_id'=>$this->userInfo['id'],'id'=>$content_id))->save(array('sort'=>$k));            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     *内容页修改排序(废除,兼容中)     */    public function edit_album_template()    {        $content_id = $this->request['content_id'];//内容id        $sort = $this->request['sort'];//排序        if($content_id){            $res = Db::table('s_user_album_detail')->where(array('id'=>$content_id))->save(array('sort'=>$sort));            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 内容页删除模块     */    public function del_user_album_detail()    {        $user_content_id = $this->request['user_content_id'];//我的相册内容id        if ($user_content_id){            $old = Db::table('s_user_album_detail')->where(array('id'=>$user_content_id))->find();            if($old){                $res = Db::table('s_user_album_detail')->where(array('id'=>$user_content_id))->delete();                if ($res) {                    $this->array_return['ResultType'] = self::__OK__;                    $this->array_return['Message'] = "操作成功";                } else {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "操作失败";                }            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 修改页更改     */    public function edit_user_album_content()    {        $img = $this->request['img'];        $content_id = $this->request['user_content_id'];        $content = $this->request['content'];        $font_color = $this->request['font_color'];        $font_x = $this->request['font_x'];        $font_y = $this->request['font_y'];        $sort = $this->request['sort'];//排序        $font_size = $this->request['font_size'];//字体大小        if(($img || $content || $font_color || $font_x || $font_y || $sort || $font_size) && $content_id){            $data = array();            if($img){                $data['img'] = $img;            }            $data['content'] = $content;            if($font_color){                $data['font_color'] = $font_color;            }            if($font_x>=0){                $data['font_x'] = $font_x;            }            if($font_y>=0){                $data['font_y'] = $font_y;            }            if($font_size>=0){                $data['font_size'] = $font_size;            }            if(isset($this->request['sort'])){                $data['sort'] = $sort;            }            //字体旋转角度            if(isset($this->request['font_angle'])){                $data['font_angle'] = $this->request['font_angle'];            }            //字体缩放倍数            if(isset($this->request['font_zoom'])){                $data['font_zoom'] = $this->request['font_zoom'];            }            //编辑时的底图宽度            if(isset($this->request['edit_width'])){                $data['edit_width'] = $this->request['edit_width'];            }            //编辑时的底图高度            if(isset($this->request['edit_height'])){                $data['edit_height'] = $this->request['edit_height'];            }           $res = Db::table('s_user_album_detail')->where(array('id'=>$content_id))->save($data);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 预览内容详情     */    public function get_user_album_detail()    {        $content_id = $this->request['user_content_id'];//我的相册内容id        if($content_id){            $list = Db::table('s_user_album_detail')->where(array('id'=>$content_id))->find();            if ($list) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 删除用户相册     */    public function del_user_album()    {        $my_id = $this->request['my_id'];//我的相册内容id        if ($my_id){            $old = Db::table('s_user_album')->where(array('id'=>$my_id))->find();            if($old){                $res = Db::table('s_user_album')->where(array('id'=>$my_id))->delete();                if ($res) {                    $detail = Db::table('s_user_album_detail')->where(array('album_id'=>$my_id))->find();                    if($detail){                        Db::table('s_user_album_detail')->where(array('album_id'=>$my_id))->delete();                    }                    $this->array_return['ResultType'] = self::__OK__;                    $this->array_return['Message'] = "操作成功";                } else {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "操作失败";                }            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 系统文章分类     */    public function system_article_type()    {        $list = Db::table('s_article_type')->field('id,name')->where(array('user_id'=>0))->select();        if ($list) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "没有数据";        }                return json($this->array_return);    }    /**     * 系统文章列表     */    public function system_article_list()    {        $type_id = $this->request['type_id'];        $start = $this->request['start'];        $end = $this->request['end'];        if($start>=0 && $end>=0){            $where = array();            if($type_id){                $where['type_id'] = $type_id;            }            $where['status'] = 1;            $list = Db::table('s_system_article')->field('id,title,cover_img,content,visit,extend,addtime,type_id')->where($where)->order('addtime desc')->limit($start,$end)->select();            foreach ($list as &$v){                $v['content'] = mb_substr(cutstr_html($v['content']),0,20,'utf-8').'...';                $v['addtime'] = date('m-d H:i',$v['addtime']);            }            if ($list) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 查看系统文章详情页     */    public function system_article_content()    {        $article_id = $this->request['article_id'];//系统文章id        $is_app = $this->request['is_app'];//1:是App        if($article_id){            if($is_app == 1){                $user_id = $this->userInfo['id'];//1:是App                $old = Db::table('s_user_extend_article')->where(array('user_id'=>$user_id,'s_article_id'=>$article_id))->find();                if($old){                    $res = 1;                    $res_arr =  'http://'.$_SERVER['HTTP_HOST'].'/index.php?s=/Home/Nologin/share_article/id/'.$user_id.'/kid/2/aid/'.$old['id'].'/user_id/'.$user_id;                }else{                    $res = Db::table('s_user_extend_article')->add(array('user_id'=>$user_id,'s_article_id'=>$article_id,'addtime'=>time()));                    if ($res) {                        Db::table('s_system_article')->where(array('id'=>$article_id))->setInc('extend');                        //插入积分日志                        $logs = Db::table('s_inte_log')->where('user_id='.$user_id.' and inte_id=3 and type=0 and addtime>'.strtotime(date("Ymd")))->count();                        if($logs<=4){                            $dat['user_id']=$user_id;                            $dat['inte'] = Db::table("s_inte")->where('id=3')->getField('inte');                            $dat['addtime']=time();                            $dat['inte_id']=3;                            $zj = Db::table("s_user_info")->where(array('id'=>$user_id))->setInc('inte',$dat['inte']);                            if($zj){                                Db::table('s_inte_log')->add($dat);                            }                        }                        $res_arr = 'http://'.$_SERVER['HTTP_HOST'].'/index.php?s=/Home/Nologin/share_article/id/'.$user_id.'/kid/2/aid/'.$res.'/user_id/'.$user_id;                    }                }            }else{                $res = Db::table('s_system_article')->field('id,title,content,visit,extend,addtime')->where(array('id'=>$article_id))->find();                $res['addtime'] = date("Y-m-d H:i:s",$res['addtime']);                $user_content = array(                    'id'=>$this->userInfo['id'],                    'headimg'=>$this->userInfo['headimg'],                    'nick_name'=>$this->userInfo['nick_name'],                    'company'=>$this->userInfo['company'],                    'mobile'=>$this->userInfo['mobile'],                    'email'=>$this->userInfo['email'],                    'share_my_introduct'=>$this->userInfo['share_my_introduct'],                );                $res_arr = array('article_content'=>$res,'user'=>$user_content);            }            if ($res) {                Db::table('s_system_article')->where(array('id'=>$article_id))->setInc('visit');                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res_arr;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 推广文章接口     */    public function extend_system_article()    {        $user_id = $this->userInfo['id'];        $article_id = $this->request['article_id'];        if ($article_id){            $old = Db::table('s_user_extend_article')->where(array('user_id'=>$user_id,'s_article_id'=>$article_id))->find();            if($old){                $this->array_return['ResultType'] = self::__ERROR1__;                $this->array_return['Message'] = "已推广";                $this->array_return['AppendData'] = $old['id'];            }else{                $res = Db::table('s_user_extend_article')->add(array('user_id'=>$user_id,'s_article_id'=>$article_id,'addtime'=>time()));                if ($res) {                    Db::table('s_system_article')->where(array('id'=>$article_id))->setInc('extend');                    //插入积分日志                    $logs = Db::table('s_inte_log')->where('user_id='.$user_id.' and inte_id=3 and type=0 and addtime>'.strtotime(date("Ymd")))->count();                    if($logs<=4){                        $dat['user_id']=$user_id;                        $dat['inte'] = Db::table("s_inte")->where('id=3')->getField('inte');                        $dat['addtime']=time();                        $dat['inte_id']=3;                        $zj = Db::table("s_user_info")->where(array('id'=>$user_id))->setInc('inte',$dat['inte']);                        if($zj){                            Db::table('s_inte_log')->add($dat);                        }                    }                    $this->array_return['ResultType'] = self::__OK__;                    $this->array_return['Message'] = "操作成功";                    $this->array_return['AppendData'] = $res;                } else {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "没有数据";                }            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 我的推广文章列表     */    public function user_extend_list()    {        $start = $this->request['start'];        $end = $this->request['end'];        if($start>=0 && $end>=0){            $where = array();            $where['status'] = 1;            $where['user_id'] = $this->userInfo['id'];            $list = Db::table('s_user_extend_article')->alias('ua')                ->join('left join s_system_article sa on sa.id = ua.s_article_id')                ->field('sa.id,sa.title,sa.content,sa.cover_img,ua.visit,ua.addtime,ua.id as aid')                ->where($where)                ->order('ua.addtime desc')                ->limit($start,$end)                ->select();            foreach ($list as &$v){                $v['content'] = mb_substr(cutstr_html($v['content']),0,20,'utf-8').'...';                $v['addtime'] = date('m-d H:i',$v['addtime']);            }            if ($list) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 我的推广文章删除     */    public function del_user_extend()    {        $aid = $this->request['aid'];//我的推广id        if($aid){           $res =  Db::table('s_user_extend_article')->where(array('id'=>$aid,'user_id'=>$this->userInfo['id']))->delete();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 我的推广文章内容     */    public function my_extend_detail()    {        $aid = $this->request['aid'];        if($aid){            $res = Db::table('s_user_extend_article')->alias('ua')                ->join('left join s_system_article sa on sa.id = ua.s_article_id')                ->field('sa.id,sa.title,sa.content,ua.visit,ua.addtime,ua.id as aid')                ->where(array('ua.id'=>$aid))                ->order('ua.addtime desc')                ->find();            $res['addtime'] = date("Y-m-d H:i:s",$res['addtime']);            $user_content = array(                'id'=>$this->userInfo['id'],                'headimg'=>$this->userInfo['headimg'],                'nick_name'=>$this->userInfo['nick_name'],                'company'=>$this->userInfo['company'],                'mobile'=>$this->userInfo['mobile'],                'email'=>$this->userInfo['email'],                'share_my_introduct'=>$this->userInfo['share_my_introduct'],            );            $res_arr = array('article_content'=>$res,'user'=>$user_content);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res_arr;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新龙虎榜接口     */    public function hot_user_lists()    {        $endtime = strtotime('+1 month',strtotime(date('Ym01')))-6*60*60;//月底最后一天的18:00:00的时间戳        $list = Db::table('s_user_info')->alias('u')            ->join('left join s_capital_log l on l.user_id = u.id')            ->field('u.unionid,u.nick_name,count(l.user_id) as fans_num')            ->where(array('l.add_time'=>array('between',array(strtotime(date('Y-m-01')),$endtime)),'l.type'=>1))            ->group('u.id')            ->order('fans_num desc')            ->limit(5)            ->select();          if($list){              $this->array_return['ResultType'] = self::__OK__;              $this->array_return['Message'] = "操作成功";              $this->array_return['AppendData'] = $list;          }else{              $this->array_return['ResultType'] = self::__ERROR__;              $this->array_return['Message'] = "操作失败";          }                  $this->array_return['endtime'] = date('m/d/Y H:i:s',$endtime);        return json($this->array_return);    }        /**     * 龙虎榜列表接口     */    public function hot_user_list()    {        $vip_id = $this->request['vip_id']?$this->request['vip_id']:0;        $where = array();        $where['cl.type'] = array('in',array(1,6,7));//直接,间接,团队 分佣        if($vip_id >0){            $where['cl.add_time'] = array('gt', strtotime('-1 month'));        }else{            $where['cl.add_time'] = array('gt', strtotime('-1 week'));        }        $list = Db::table('s_user_info')->alias('u')            ->join('left join s_capital_log cl on cl.user_id = u.id')            ->field('sum(cl.money) as total,u.id,u.nick_name')            ->where($where)            ->group('u.id')            ->order('total desc')            ->limit(20)            ->select();        foreach ($list as &$v){            $where1['user_id'] = $v['id'];            if($vip_id >0){                $where1['add_time'] = array('gt', strtotime('-1 month'));            }else{                $where1['add_time'] = array('gt', strtotime('-1 week'));            }            $v['fans_num'] = Db::table('s_users_fans')->where($where1)->count();            if($v['total']>100) {                $num = strlen((int)$v['total']);                $v['total'] = substr('*********', 0, $num-1) . substr($v['total'], $num-2, 2);            }        }        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 产品分类列表     */    public function product_type()    {        $type = $this->request['type_id'];        if($type >= 0){            $list = Db::table('s_product_type')->field('id,title')->where(array('type'=>$type))->select();        }else{            $list = Db::table('s_product_type')->field('id,title')->where(array('type'=>0))->select();            foreach ($list as &$v){                $v['type_content'] = Db::table('s_product_type')->field('id,title')->where(array('type'=>$v['id']))->select();            }        }        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 产品分类公众号     */    public function product_type_list()    {        $list = Db::table('s_product_type')->field('id,title,type')->select();        foreach ($list as &$v){            $v['name'] = $v['title'];            $v['shortName'] = '';            $v['parentId'] = $v['type'];            $v['level'] = $v['type']?'2':1;            unset($v['title']);            unset($v['type']);        }        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 产品首页展示     */    public function home_product()    {        $list = Db::table('s_product')->field('id,title,cover_img,describe')->where(array('is_home'=>1,'user_id'=>$this->userInfo['id']))->select();        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 产品列表     */    public function product_list()    {        $start = $this->request['start']?$this->request['start']:0;        $length = $this->request['length']?$this->request['length']:99;        $one_type = $this->request['one_type'];//一级分类id        $two_type = $this->request['two_type'];//二级分类id        $keywords = $this->request['keywords'];//关键字        $new_type = $this->request['new_type'];//新分类        if($one_type || $two_type || $keywords || $new_type) {            $where['user_id'] = $this->userInfo['id'];            if ($keywords) {                $where['title'] = array('like', '%' . $keywords . '%');            } else {                if ($one_type) {                    $where['type'] = $one_type;                }                if ($two_type) {                    $where['type_id'] = $two_type;                }                if ($new_type) {                    $where['new_type'] = $new_type;                }            }            $list = Db::table('s_product')->field('id,title,describe,cover_img')->where($where)->order('sort asc,id desc')->limit($start,$length)->select();            if ($list) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 产品详情     */    public function product_detail()    {        $product_id = $this->request['product_id'];        if($product_id){            Db::table('s_product')->where(array('id'=>$product_id))->setInc('visit');//添加浏览量            $list = Db::table('s_product')->field('id,title,describe,cover_img,type,type_id,address,price,is_home,info')->where(array('id'=>$product_id))->find();            if ($list) {                $list['img'] = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$list['id'],'type'=>0))->order('sort asc')->select();                $list['img_detail'] = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$product_id,'type'=>1))->order('sort asc')->select();                $list['product_parameter'] = Db::table('s_product_detail')->field('id,title,content')->where(array('product_id'=>$product_id))->select();                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $list;            } else {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     *我的产品列表     */    public function my_product_list()    {        $user_id = $this->userInfo['id'];        $list = Db::table('s_product')->field('id,title,describe,cover_img')->where(array('user_id'=>$user_id))->select();        if ($list) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        } else {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 产品添加/编辑页     */    public function add_edit_product()    {        $id = $this->request['product_id'];        $data = array(          'title'=>$this->request['title'],          'cover_img' => $this->request['cover_img'],          'address'=>$this->request['address'],          'price'=>(float)$this->request['price'],          'type_id'=>$this->request['type_id'],//二级分类id          'type'=>$this->request['type'],//一级分类id          'is_home'=>$this->request['is_home'],//1:首页展示          'describe'=>$this->request['describe'],//描述          'new_type' => $this->request['new_type']?$this->request['new_type']:1,//新分类          'info'=>$this->request['info'],//详情        );        $banner = $this->request['product_banner'];//数组        $detail = $this->request['product_detail'];//数组        $canshu = $this->request['product_para'];//数组        if($this->request['is_app'] == 1){            //app调用            if($banner){                $banner = str_replace('&quot;','"',$banner);                $banner = json_decode($banner,true);            }           if($detail){               $detail = str_replace('&quot;','"',$detail);               $detail = json_decode($detail,true);           }           if($canshu){               $canshu = str_replace('&quot;','"',$canshu);               $canshu = json_decode($canshu,true);           }        }        if($data['title'] && $data['cover_img'] && $data['address'] ){       // if($data['title'] && $data['cover_img'] && $data['address'] && $data['type_id']){            if($id){//修改                $res = Db::table('s_product')->where(array('id'=>$id))->save($data);                if($banner){                    $old_banner = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$id,'type'=>0))->select();                    foreach ($old_banner as &$v){                        if(!in_array($v['img'],$banner)){                            Db::table('s_product_img')->where(array('id'=>$v['id']))->delete();//                            unlink($v['img']);                        }else{                            $banner = array_diff($banner,array($v['img']));                        }                    }                    $add_banner = array();                    foreach ($banner as $img){                        $add_banner[] = array('img'=>$img,'product_id'=>$id,'type'=>0,'addtime'=>time());                    }                    if($add_banner){                        Db::table('s_product_img')->addAll($add_banner);                    }                }                if($detail){                    $old_detail = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$id,'type'=>1))->select();                    foreach ($old_detail as &$v){                        if(!in_array($v['img'],$detail)){                            Db::table('s_product_img')->where(array('id'=>$v['id']))->delete();//                            unlink($v['img']);                        }else{                           $detail = array_diff($detail,array($v['img']));                        }                    }                    $add_detail = array();                    foreach ($detail as $img){                        $add_detail[] = array('img'=>$img,'product_id'=>$id,'type'=>1,'addtime'=>time());                    }                    if($add_detail){                        Db::table('s_product_img')->addAll($add_detail);                    }                }                if($canshu){                    $old_canshu = Db::table('s_product_detail')->where(array('product_id'=>$id))->find();                    if($old_canshu){                        $del = Db::table('s_product_detail')->where(array('product_id'=>$id))->delete();                        if($del){                            $add_canshu = array();                            foreach ($canshu as $v){                               $add_canshu[] = array('title'=>$v['name'],'content'=>$v['val'],'product_id'=>$id,'addtime'=>time());                            }                            if($add_canshu){                                Db::table('s_product_detail')->addAll($add_canshu);                            }                        }                    }else{                        $add_canshu = array();                        foreach ($canshu as $v){                            $add_canshu[] = array('title'=>$v['name'],'content'=>$v['val'],'product_id'=>$id,'addtime'=>time());                        }                        if($add_canshu){                            Db::table('s_product_detail')->addAll($add_canshu);                        }                    }                }else{                    Db::table('s_product_detail')->where(array('product_id'=>$id))->delete();                }            }else{//添加                $data['user_id'] = $this->userInfo['id'];                $data['addtime'] = time();                $res = Db::table('s_product')->add($data);                if($res){                    if($banner){                        $add_banner = array();                        foreach ($banner as $img){                            $add_banner[] = array('img'=>$img,'product_id'=>$id,'type'=>0,'addtime'=>time());                        }                        if($add_banner){                            Db::table('s_product_img')->addAll($add_banner);                        }                    }                    if($detail){                        $add_detail = array();                        foreach ($detail as $img){                            $add_detail[] = array('img'=>$img,'product_id'=>$id,'type'=>1,'addtime'=>time());                        }                        if($add_detail){                            Db::table('s_product_img')->addAll($add_detail);                        }                    }                    if($canshu){                        $add_canshu = array();                        foreach ($canshu as $v){                            $add_canshu[] = array('title'=>$v['name'],'content'=>$v['val'],'product_id'=>$id,'addtime'=>time());                        }                        if($add_canshu){                            Db::table('s_product_detail')->addAll($add_canshu);                        }                    }                    $this->array_return['AppendData'] = $res;                }            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 删除产品（批量）     */    public function del_product()    {        $user_id = $this->userInfo['id'];        $product_id = $this->request['product_id'];        $product_ids = explode(',',$this->request['product_ids']);//以,隔开的id字符串        if($product_id || $product_ids){            if($product_id){                $res = Db::table('s_product')->where(array('id'=>$product_id,'user_id'=>$user_id))->delete();            }else{                $id_arr = array();                foreach ($product_ids as $id){                    $res = Db::table('s_product')->where(array('id'=>$id,'user_id'=>$user_id))->find();                    if($res){                        $id_arr[] = $id;                    }                }                if($id_arr){                    $res = Db::table('s_product')->where(array('id'=>array('in',$id_arr)))->delete();                }            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /*     * 自己产品的分类     */    public function my_product_type()    {        $user_id = $this->userInfo['id'];        $type = $this->request['type_id'];        if($type == 0){            $list = Db::table('s_product')->alias('p')                ->join('left join s_product_type pt on pt.id = p.type')                ->field('pt.title,p.type')->where(array('p.user_id'=>$user_id))->group('p.type')->select();        }else{            $list = Db::table('s_product')->alias('p')                ->join('left join s_product_type pt on pt.id = p.type_id')                ->field('pt.title,p.type_id')->where(array('p.user_id'=>$user_id,'p.type'=>$type))->group('p.type_id')->select();        }        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 产品添加/编辑页     */    public function add_edit_product_index()    {        $id = $this->request['product_id'];        $data = array(            'title'=>$this->request['title'],            'cover_img' => $this->request['cover_img'],            'address'=>$this->request['address'],            'price'=>(float)$this->request['price'],            'type_id'=>$this->request['type_id'],//二级分类id            'type'=>$this->request['type'],//一级分类id            'is_home'=>$this->request['is_home'],//1:首页展示            'describe'=>$this->request['describe'],//描述            'new_type' => $this->request['new_type']?$this->request['new_type']:1,//新分类            'info'=>$this->request['info'],//详情        );        if($data['title'] && $data['cover_img'] && $data['address']){            if($id){                 Db::table('s_product')->where(array('id'=>$id))->save($data);            }else{                $data['user_id'] = $this->userInfo['id'];                $data['addtime'] = time();                $res = Db::table('s_product')->add($data);            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendDatas'] = '';            if($res){                $this->array_return['AppendData'] = $res;                $this->array_return['AppendDatas'] = $res;            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 产品banner图和详情图修改     */    public function add_edit_product_img(){        $id = $this->request['product_id'];        $banner = $this->request['product_banner'];//数组        $detail = $this->request['product_detail'];//数组        if($id || $banner || $detail){            if($banner){                if($this->request['is_app'] == 1){                    //app调用                    $banner = str_replace('&quot;','"',$banner);                    $banner = json_decode($banner,true);                }                $old_banner = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$id,'type'=>0))->select();                foreach ($old_banner as &$v){                    if(!in_array($v['img'],$banner)){                        Db::table('s_product_img')->where(array('id'=>$v['id']))->delete();//                        unlink($v['img']);                    }else{                        Db::table('s_product_img')->where(array('img'=>$v['img'],'product_id'=>$id,'type'=>0))->save(array('sort'=>array_search($v['img'],$banner)));                        $banner = array_diff($banner,array($v['img']));                    }                }                $add_banner = array();                foreach ($banner as $k=>$img){                    $add_banner[] = array('img'=>$img,'product_id'=>$id,'type'=>0,'sort'=>$k,'addtime'=>time());                }                if($add_banner){                    Db::table('s_product_img')->addAll($add_banner);                }            }            if($detail){                if($this->request['is_app'] == 1){                    //app调用                    $detail = str_replace('&quot;','"',$detail);                    $detail = json_decode($detail,true);                }                    $old_detail = Db::table('s_product_img')->field('id,img')->where(array('product_id'=>$id,'type'=>1))->select();                    foreach ($old_detail as &$v){                        if(!in_array($v['img'],$detail)){                            Db::table('s_product_img')->where(array('id'=>$v['id']))->delete();//                            unlink($v['img']);                        }else{                            Db::table('s_product_img')->where(array('img'=>$v['img'],'product_id'=>$id,'type'=>1))->save(array('sort'=>array_search($v['img'],$detail)));                            $detail = array_diff($detail,array($v['img']));                        }                    }                    $add_detail = array();                    foreach ($detail as $k=>$img){                        $add_detail[] = array('img'=>$img,'product_id'=>$id,'type'=>1,'sort'=>$k,'addtime'=>time());                    }                    if($add_detail){                        Db::table('s_product_img')->addAll($add_detail);                    }                }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 产品参数修改/添加     */    public function add_edit_product_para()    {        $id = $this->request['product_id'];        $canshu = $this->request['product_para'];        if($id || $canshu){            if($canshu) {                if($this->request['is_app'] == 1){                    //app调用                    $canshu = str_replace('&quot;','"',$canshu);                    $canshu = json_decode($canshu,true);                }                $old_canshu = Db::table('s_product_detail')->where(array('product_id' => $id))->find();                if ($old_canshu) {                    $del = Db::table('s_product_detail')->where(array('product_id' => $id))->delete();                    if ($del) {                        $add_canshu = array();                        foreach ($canshu as $v) {                            // $add_canshu[] = array('title' => $v['name'], 'content' => $v['val'], 'product_id' => $id, 'addtime' => time());                            $add_canshu[] = array('title' => $v[0], 'content' => $v[1], 'product_id' => $id, 'addtime' => time());//                            $add_canshu = Db::table('s_product_detail')->add($add_canshu);                        }                        if ($add_canshu) {                             Db::table('s_product_detail')->addAll($add_canshu);                            $this->array_return['ResultType'] = self::__OK__;                        }                    }                } else {                    $add_canshu = array();                    foreach ($canshu as $k=>$v) {                            // $add_canshu[] = array('title' => $v['name'], 'content' => $v['val'], 'product_id' => $id, 'addtime' => time());                            $add_canshu[] = array('title' => $v[0], 'content' => $v[1], 'product_id' => $id, 'addtime' => time());//                            $add_canshu = Db::table('s_product_detail')->add($add_canshu);                    }                    if ($add_canshu) {                         Db::table('s_product_detail')->addAll($add_canshu);                        $this->array_return['ResultType'] = self::__OK__;                    }                }            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 删除产品参数     */    public function del_product_parm()    {        $parm_id = $this->request['parm_id'];        if($parm_id){            $res = Db::table('s_product_detail')->where(array('id'=>$parm_id))->delete();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 商脉搜索     * 参数  sex ,age_id , province_id , city_id, sq_type_id , keyword     */    public function trade_search()    {        $data = $this->request->post();        $data['start'] = $this->request['start']?$this->request['start']:0;        $data['length'] = $this->request['length']?$this->request['length']:10;        $data['province_name'] = Db::table("s_region")->where(['region_id'=>$data['province_id']])->getField("region_name");        $data['city_name'] = Db::table("s_region")->where(['region_id'=>$data['city_id']])->getField("region_name");        $data['sq_type'] = Db::table('s_sqtype')->where(array('id'=>$data['sq_type_id']))->getField('name');        $data['age_name'] = Db::table('s_age')->where(array('id'=>$data['age_id']))->getField('age_group');        $where['u.sq_is_search'] = 1;        if(!empty($data['province_id'])){            $where['u.province_id']=$data['province_id'];        }        if(!empty($data['city_id'])){            $where['u.city_id']=$data['city_id'];        }        if(!empty($data['keyword'])){            $where['u.nick_name | u.sq_keyword | m.phone']= array('like','%'.$data['keyword'].'%');        }        if(!empty($data['sex'])){            $where['u.sex']=$data['sex'];        }        if($data['age_id']){            $where['u.age_id']=$data['age_id'];        }        if($data['sq_type_id']){//            $where['sq_type_id']=$data['sq_type_id'];            $where['u.sq_type_id'] = array(array('like','%,'.$data['sq_type_id'].',%'));//            $where['_string']="sq_type_id LIKE '%".$data['sq_type_id']."% or sq_type_id = null'";        }//        if(empty($data['province_id']) && empty($data['city_id']) && empty($data['keyword']) && empty($data['sex']) && !$data['age_id'] && !$data['sq_type_id']){//            $where['u.vip_id'] = array('EGT',4);//        }        //当前用户的经纬度 		$lon = $this->userInfo['longitude'];        $lat = $this->userInfo['latitude'];        $userList = Db::table("s_user_info")->alias('u')            ->join('left join s_member m on m.id = u.member_id')            ->field("u.unionid,u.id,u.nick_name,u.headimg,u.position,u.sq_type_id,u.address,u.longitude,u.latitude,m.spopenid,m.phone,ROUND(6378.138*2*ASIN(SQRT(POW(SIN((".$lat."*PI()/180-latitude*PI()/180)/2),2)+COS(".$lat."*PI()/180)*COS(latitude*PI()/180)*POW(SIN((".$lon."*PI()/180-longitude*PI()/180)/2),2))),2) AS distance")            ->where($where)->order('distance asc')->limit($data['start'],$data['length'])->select();        foreach ($userList as $k=>$v)        {            $is_friend = Db::table('s_msg_list')->where(array('user_id'=>$this->userInfo['id'],'object_id'=>$v['id'],'type'=>1))->getField('status');            $i_friend = Db::table('s_msg_list')->where(array('object_id'=>$this->userInfo['id'],'user_id'=>$v['id'],'type'=>1))->getField('status');            if($is_friend == 1 || $i_friend == 1){                $userList[$k]['is_friend'] = 1;//已经互加好友            }elseif($is_friend == 2){                $userList[$k]['is_friend'] = 2;//已添加,等待对方同意            }else{                $userList[$k]['is_friend'] = 0;//未加或拒绝            } 	        $res = array('search'=>$data,'userlist'=>$userList);	        if($res){	            $this->array_return['ResultType'] = self::__OK__;	            $this->array_return['Message'] = "操作成功";	            $this->array_return['AppendData'] = $res;	        }else{	            $this->array_return['ResultType'] = self::__ERROR__;	            $this->array_return['Message'] = "操作失败";	        }	        	        return json($this->array_return);		}    }        /**     * 会员等级接口     */    public function vip_list()    {        $list = Db::table('s_vip_list')->alias('v')            ->join('left join s_vip_group vg on vg.id = v.vip_group_id')            ->field('v.id,vg.vip_name')            ->where(array('v.id'=>array('not in',array(2,3))))//屏蔽298创客和小创投            ->select();        if($list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 音乐分类列表     */    public function music_type()    {        $type_list = Db::table("s_music_type")->field('id,title')->select();        if($type_list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $type_list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 音乐接口     */    public function music_list()    {        $type_id = $this->request['type_id'];        if($type_id>0){            $where = array('type_id'=>$type_id);        }else{            $where = array();        }        $music_list = Db::table('s_music')->field('id,name,url')->where($where)->order('id asc')->select();        if($music_list){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $music_list;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }    /**     * 音乐详情     */    public function music_detail()    {        if($this->request['music_id']){            $music_list = Db::table('s_music')->field('id,name,url,type_id')->where(array('id'=>$this->request['music_id']))->find();            if($music_list){                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $music_list;            }else{                $this->array_return['ResultType'] = self::__ERROR__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 253短信验证码接口     */    public function send_phone_code()    {        $phone = $this->request['phone'];//手机号        $type = $this->request['type'];//类型 1/注册 2/忘记密码 3/修改手机号码 4/登录 5/绑定银行卡        if($phone && $type){                $where['phone']=$phone;                $where['type']=$type;                $_code= Db::table('s_mobile_code')->where($where)->order('id desc')->find();                if($_code) {                    $time = time();                    if ($_code['expire_time'] >= $time) {                        $this->array_return['ResultType'] = self::__ERROR2__;                        $this->array_return['Message'] ="您的操作太频繁了";                        return json($this->array_return);                    }                }                $data['type']=$type;                $data['phone']=$phone;                $data['add_time']=time();                $data['expire_time']=time()+$this->code_expire_time;                $data['code']=rand(1000,9999);                if(substr($data['phone'],0,1) == 1){                    $status = 0;                }else{                    $status = 1;                }                $res=$this->setMsg($data['phone'],$data['code'],$status);                if($res['status']!="0"){                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "验证码获取失败,".$res['msg'];                }else{                    $ret = Db::table('s_mobile_code')->add($data);                    if ($ret) {                        $this->array_return['ResultType'] = self::__OK__;                        $this->array_return['Message'] = "操作成功";                        $this->array_return['AppendData'] = $data['code'];                    } else {                        $this->array_return['ResultType'] = self::__ERROR2__;                        $this->array_return['Message'] = "没有数据";                    }               }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 普通短信接口     */    public function send_msg()    {        $option = $this->request;        $statusStr = array(            "0" => "短信发送成功",            "-1" => "参数不全",            "-2" => "服务器空间不支持,请确认支持curl或者fsocket，联系您的空间商解决或者更换空间！",            "30" => "密码错误",            "40" => "账号不存在",            "41" => "余额不足",            "42" => "帐户已过期",            "43" => "IP地址限制",            "50" => "内容含有敏感词"        );        $smsapi = "http://47.95.217.41:8088/";        $user = "shmingxin"; //短信平台帐号        $pass = 'shmingxin123321'; //短信平台密码        $sendurl = $smsapi."sms.aspx?action=send&userid=12&&account=".$user."&password=".$pass."&mobile=".$option['phone']."&content=".$option['content']."&sendTime=&extno=";        $result =simplexml_load_string(file_get_contents($sendurl)) ;        if(((String)$result->returnstatus)=='Success'){            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "没有数据";        }        return json($this->array_return);    }    /**     * 图片上传     */    public function upload_img()    {        $img = $this->request['img'];        if(substr($img,0,5) == 'data:'){            //上传base64图            $base64_image = str_replace(' ', '+', $img);            if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $base64_image, $result)){                //匹配成功                if($result[2] == 'jpeg'){                    $image_name = uniqid().rand(1000,9999).'.jpg';                }else{                    $image_name = uniqid().rand(1000,9999).'.'.$result[2];                }                $image_file = "./Uploads/newUpload_base64/".date('Y-m-d')."/".$image_name;                if (!is_dir('./Uploads/newUpload_base64/'.date('Y-m-d'))) {                    mkdir('./Uploads/newUpload_base64/'.date('Y-m-d'),0777,true);                }                //服务器文件存储路径                if (file_put_contents($image_file, base64_decode(str_replace($result[1], '', $base64_image)))){                   $img = "http://wx.yxm360.com/Uploads/newUpload_base64/".date('Y-m-d')."/".$image_name;                     // $img = "http://localhost/Uploads/newUpload_base64/".date('Y-m-d')."/".$image_name;                }            }        }else{            $upload = new \Think\Upload();// 实例化上传类            $upload->maxSize   =     3145728 ;// 设置附件上传大小            $upload->exts      =     array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型            $upload->rootPath  =      './Uploads/newUpload/'; // 设置附件上传根目录            $upload->savePath  =      ''; // 设置附件上传（子）目录            if(!is_dir($upload->rootPath))            {                mkdir($upload->rootPath,0777,true);            }            // 上传文件            $info   =   $upload->upload();            if(!$info) {                // 上传错误提示错误信息                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }else{                foreach($info as $file){                    // $img = 'https://wap.yxm360.com/Uploads/newUpload/'.$file['savepath'].$file['savename'];                    $img = "http://wx.yxm360.com/Uploads/newUpload/".date('Y-m-d')."/".$file['savename'];                }            }        }        if ($this->img_exists($img))         {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $img;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }        return json($this->array_return);    }    /**     * 图片上传     */    public function uploads_img()    {        $imgs = $this->request['img'];        if(substr($_SERVER['HTTP_HOST'],0,1) == 'w'){            $start_name = ucwords($this->request['start_name']);        }else{            $start_name = 'Test';        }        $img = '';        if($this->request['start_name']){            if(substr($imgs,0,5) == 'data:'){                //上传base64图				$result = $this->base64_to_blob($imgs);				$content =  $result['blob'];				//匹配成功				$img_type = str_replace('image/','',$result['type']);				$img_type = str_replace('jpeg','jpg',$img_type);				$image_name = uniqid().rand(1000,9999).'.'.$img_type;				$object = $start_name.'/'.date("Y-m-d",time())."/".$image_name;				try{					$ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);					$image_file = $ossClient->putObject(C('OSS_IMAGE')['bucket'], $object, $content);					if ($image_file['status'] == 1){						$shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);						$img =  $shift_url."@!protected";					}				} catch(OssException $e) {					 				}            }else{                $end_name = trim(strrchr($_FILES['img']['name'], '.'),'.');                $end_name = $end_name == 'jpeg' ? 'jpg' : $end_name;                $save_name = $start_name.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.'.$end_name;                try{                    $ossClient = new \OSS\OssClient(C('OSS_IMAGE')['accessKeyId'], C('OSS_IMAGE')['accessKeySecret'], C('OSS_IMAGE')['endpoint']);                    $image_file =  $ossClient->uploadFile(C('OSS_IMAGE')['bucket'], $save_name, $_FILES['img']['tmp_name']);                    if ($image_file['status'] == true){                        $shift_url = str_replace(C('OSS_IMAGE')['oss_url'],C('OSS_IMAGE')['cdn_usls'],$image_file['url']);                        $img =  $shift_url."@!protected";                    }else{                        // 上传错误提示错误信息                    }                } catch(OssException $e) {                }            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $img;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }        return json($this->array_return);    }    /**     * 视频上传     */    public function upload_video()    {        $imgs = $this->request['img'];        if(substr($_SERVER['HTTP_HOST'],0,1) == 'w'){            $start_name = ucwords($this->request['start_name']);        }else{            $start_name = 'Test';        }        $img = '';        if($this->request['start_name']){            $end_name = trim(strrchr($_FILES['img']['name'], '.'),'.');            if($end_name == 'jpeg'){                $save_name = $start_name.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.jpg';            }else{                $save_name = $start_name.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.'.$end_name;            }            try{                $ossClient = new \OSS\OssClient(C('OSS_VIDEO')['accessKeyId'], C('OSS_VIDEO')['accessKeySecret'], C('OSS_VIDEO')['endpoint']);                $image_file =  $ossClient->uploadFile(C('OSS_VIDEO')['bucket'], $save_name, $_FILES['img']['tmp_name']);                if ($image_file['status'] == true){                    $shift_url = str_replace(C('OSS_VIDEO')['oss_url'],C('OSS_VIDEO')['cdn_usl'],$image_file['url']);                    $img =  $shift_url;                }else{                    // 上传错误提示错误信息                }            } catch(OssException $e) {            }            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $img;        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }        return json($this->array_return);    }    private function base64_to_blob($base64Str)    {		if($index = strpos($base64Str,'base64,',0)){			$blobStr = substr($base64Str,$index+7);			$typestr = substr($base64Str,0,$index);			preg_match("/^data:(.*);$/",$typestr,$arr);			return ['blob'=>base64_decode($blobStr),'type'=>$arr[1]];		}				return false;	}    /**     * 判断图片是否存在     * @param $url     * @return bool     */    private function img_exists($url)    {        $filesize = @getimagesize($url);        if ($filesize) {            return true;        }else{            return false;        }    }    /**     * 发送短信     * @param $phone     * @param $code     * @return array     * type: 1:验证码 2：提现转账确认信息     */    private function setMsg($phone,$option,$status=0)    {        $content = '您的验证码为：'.$option.',请妥善保管';        $url = 'http://intapi.253.com/send/json';        $post_data['account']       = 'I4612514';        $post_data['password']      = 'b8fW1R4HZkd53e';        $post_data['msg'] = '【洋小秘】'.$content;        $mobile = $phone;        if($status == 0){            $mobile = '86'.$phone;        }        $post_data['mobile']    = $mobile;        $res = request_post($url, $post_data,true);        if($res['code'] == 0){            Db::table('s_new_msg')->add(array('msgid'=>$res['msgid'],'mobile'=>$post_data['mobile'],'code'=>$content,'addtime'=>time()));        }                return array('msg'=>$res['error']==''?'发送成功':'发送失败','status'=>$res['code']);    }     /**     * 对象转数组     */    public function object_array($array)     {        if(is_object($array)) {            $array = (array)$array;        }        if(is_array($array)) {            foreach($array as $key=>$value) {                $array[$key] = $this->object_array($value);            }        }                return $array;    }    /**     * 获取我的推广用户     */    public function son()    {        $cid = $this->request['cid'];        // 找到直接粉丝的id        $fan = Db::table("s_users_fans")->where(array('user_id'=>$cid,'level'=>'1'))->field('object_id')->select();        foreach($fan as $k=>$v){            $info = Db::table('s_user_info')->alias('u')                ->join('left join s_member m on m.id = u.member_id')                ->where(array('u.id'=>$v['object_id']))->field('u.id,m.phone as mobile,u.nick_name')->select();            unset($fan[$k]['object_id']);            $fan[$k]['text']='昵称:'.$info[0]['nick_name'].',注册手机号:'.$info[0]['mobile'];            $fan[$k]['href']='#parent1';            $fan[$k]['href']=$info[0]['id'];            $fan[$k]['nick_name']=$info[0]['nick_name'];            $fan[$k]['phone']=$info[0]['mobile'];            $inco = Db::table("s_users_fans")->where(array('user_id'=>$info[0]['id'],'level'=>'1'))->count();            $fan[$k]['tags']=$inco;        }                $this->array_return['ResultType'] = self::__OK__;        $this->array_return['Message'] = "操作成功";        $this->array_return['AppendData'] = $fan;        return json($this->array_return);    }    /**     * 文章分类(添加)     */    public function addArticleType()    {        $user_id = $this->userInfo['id'];        $name = $this->request['name'];        if($name){             //添加            $arr = [                'user_id' => $user_id,                'name' => $name,                'add_time' => time(),            ];            $res = Db::table('s_article_type')->add($arr);            $con = Db::table('s_article_type')->where('user_id='.$user_id)->count();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['count'] = $con;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 文章分类(列表)     */    public function articleTypeList()    {        $user_id = $this->userInfo['id'];        $res = Db::table("s_article_type")->field('id,name')->where('user_id='.$user_id)->select();        $con = Db::table('s_article_type')->where('user_id='.$user_id)->count();        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;            $this->array_return['count'] = $con;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "没有数据";        }                return json($this->array_return);    }    /**     * 文章分类(修改)     */    public function editArticleType()    {        $user_id = $this->userInfo['id'];        $name = $this->request['name'];        $id = $this->request['typeid'];        if($name){             //添加            $arr = [                'name' => $name,                'user_id' => $user_id,                'add_time' => time(),            ];            $res = Db::table("s_article_type")->where('id='.$id)->save($arr);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "没有数据";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 贺卡模板列表与详情     */    public function gcard()    {        $type = $this->request['type'];        $gid = $this->request['gid'];        $start = $this->request['start']?$this->request['start']:0;        $length = $this->request['length']?$this->request['length']:999;//不传则拿全部        if($type || $gid){            if($type){                $res = Db::table('s_gcard')->field('id,pic')->where(array('gcard_type_id'=>$type))->limit($start,$length)->select();            }else{                $res = Db::table('s_gcard')->alias('g')                    ->join('left join s_music m on m.id = g.music_id')                    ->join('left join s_gcard_text t on t.gcard_id = g.id')                    ->field('g.*,m.url as music_url,m.type_id as music_type,t.content')                    ->where(array('g.id'=>$gid))                    ->find();            }            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }    /**     * 获取贺卡分类     */    public function gcard_type()    {        $res = Db::table('s_gcard_type')->field('id,name')->select();        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 贺卡通过模板新增     */    public function mode_add_gcard()    {        $data['user_id']=$this->userInfo['id'];        $data['gcard_id']=$this->request['gcard_id'];        if($this->request['gcard_id']){            $res=D("Api/Gcard","Logic")->addUsersGcard($data);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 新增/编辑贺卡     */    public function addGcard()    {        $card_id = $this->request['card_id'];        $id = $this->userInfo['id'];        $title = $this->request['title'];        $phone = $this->request['phone'];        $content = $this->request['content'];        $gcard_id = $this->request['gcard_id'];        $pic = $this->request['pic'];        $music_id = $this->request['music_id'];        $font_color = $this->request['font_color'];        $font_border_color = $this->request['font_border_color'];        $share_title = $this->request['share_title'];        $share_thumb = $this->request['share_thumb'];        $share_content = $this->request['share_content'];        $content_y = $this->request['content_y'];        $content_x = $this->request['content_x'];//内容左右移动的距离        $content_angle = $this->request['content_angle'];//文字旋转角度初始0        $content_zoom = $this->request['content_zoom'];//文字缩放倍数        $small_img = $this->request['small_img'];//插入的小图url        $small_img_x = $this->request['small_img_x'];//插入的小图左右移动的距离        $small_img_y = $this->request['small_img_y'];//插入的小图上下移动的距离        $small_img_angle = $this->request['small_img_angle'];//插入的小图角度        $small_img_zoom = $this->request['small_img_zoom'];//插入的小图缩放倍数        $edit_width = $this->request['edit_width'];//编辑时图片的宽度        $edit_height = $this->request['edit_height'];//编辑时图片的高度        $arr=array();        $arr['user_id']=$id;        if($title!=''){            if($title==-1){                $arr['title']='';            }else{                $arr['title']=$title;            }        }        if($phone!=''){           if($phone==-1){                $arr['phone']='';            }else{                $arr['phone']=$phone;            }        }        if($content!=''){            if($content==-1){                $arr['content']='';            }else{                $arr['content']=$content;            }        }        if($gcard_id!=''){           $arr['gcard_id']=$gcard_id;        }        if($pic!=''){           $arr['pic']=$pic;        }        if($music_id!=''){           $arr['music_id']=$music_id;        }        if($font_color!=''){           $arr['font_color']=$font_color;        }        if($font_border_color!=''){           $arr['font_border_color']=$font_border_color;        }        if($share_title!=''){           $arr['share_title']=$share_title;        }        if($share_thumb!=''){           $arr['share_thumb']=$share_thumb;        }        if($share_content!=''){           $arr['share_content']=$share_content;        }        if($content_x!=''){           $arr['content_x']=$content_x;        }        if($content_y!=''){            $arr['content_y']=$content_y;        }        if($content_angle!=''){            $arr['content_angle']=$content_angle;        }        if($content_zoom!=''){            $arr['content_zoom']=$content_zoom;        }        $arr['small_img']=$small_img;        if($small_img_x!=''){            $arr['small_img_x']=$small_img_x;        }        if($small_img_y!=''){            $arr['small_img_y']=$small_img_y;        }        if($small_img_angle!=''){            $arr['small_img_angle']=$small_img_angle;        }        if($small_img_zoom!=''){            $arr['small_img_zoom']=$small_img_zoom;        }        if($edit_width != ''){            $arr['edit_width']=$edit_width;        }        if($edit_height != ''){            $arr['edit_height']=$edit_height;        }        if($card_id){           $res = Db::table('s_users_gcard')->where(array('id'=>$card_id,'user_id'=>$arr['user_id']))->save($arr);           if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $res = Db::table('s_users_gcard')->add($arr);            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "添加成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }                return json($this->array_return);    }    /**     * 获取贺卡详情     */    public function get_gcard()    {        $id = $this->userInfo['id'];        $cardid=$this->request['cardid'];        if($id){            if($cardid){                $where = array('g.id'=>$cardid);            }else{                $where = array('g.user_id'=>$id);            }            $res = Db::table('s_users_gcard')->alias('g')                ->join('left join s_user_info u on u.id = g.user_id')                ->join('left join s_music m on m.id = g.music_id')                ->field('g.*,u.headimg,m.url as music_url,m.type_id as music_type')                ->where($where)                ->select();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }         /**     * 删除贺卡     */    public function del_gcard()    {        $cardid=$this->request['cardid'];        if($cardid){            $res = Db::table("s_users_gcard")->where('id='.$cardid)->delete();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }        return json($this->array_return);    }        /**     * 获取贺词     */    public function get_gcard_test()    {        $cardid=$this->request['cardid'];        if($cardid){            $res = Db::table("s_gcard_text")->where('gcard_id='.$cardid)->select();            if ($res) {                $this->array_return['ResultType'] = self::__OK__;                $this->array_return['Message'] = "操作成功";                $this->array_return['AppendData'] = $res;            } else {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "操作失败";            }        }else{            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "缺少参数";        }                return json($this->array_return);    }        /**     * 体验卡接口     */    public function MonthCard()    {        if($this->request['vip_id'] == 8 && $this->request['code']) {            $old = Db::table('s_pay_code')->where(array('code' => $this->request['code'], 'status' => 0))->find();            if ($old) {                $model = M();                $model->startTrans();                $r = $model->table('s_pay_code_log')->add(array('code_id' => $old['id'], 'user_id' => $this->userInfo['id'], 'addtime' => time()));                $result =$model->table('s_pay_code')->where(array('id' => $old['id']))->save(array('status' => 1));                if ($r && $result) {                    $userData['vip_id'] = 8;                    $userData['vip_group_id'] = 7;                    $userData['vip_orver_time'] = strtotime('+1 month');//1个月过期                    $re = $model->table('s_user_info')->where(array('id' => $this->userInfo['id']))->save($userData);                    if ($re) {                        $model->commit();                        $this->array_return['ResultType']=self::__OK__;                        $this->array_return['Message']="操作成功";                        return json($this->array_return);                    } else {                        $model->rollback();                        $this->array_return['ResultType']=self::__ERROR2__;                        $this->array_return['Message']="操作失败";                        return json($this->array_return);                    }                }else{                    $model->rollback();                    $this->array_return['ResultType']=self::__ERROR2__;                    $this->array_return['Message']="操作失败";                    return json($this->array_return);                }            } else {                $this->array_return['ResultType']=self::__ERROR1__;                $this->array_return['Message']="无此验证码";                return json($this->array_return);            }        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="缺少重要参数";            return json($this->array_return);        }    }    /**     * 搜索页面导航图     */    public function search_img()    {        $res = Db::table('s_search_img')->where('type=1')->order('sort asc')->select();        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";            $this->array_return['AppendData'] = $res;        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }        /**     * 展示一切排列样式     */    public function show_style()    {        $style = $this->request['show_list']?$this->request['show_list']:0;        $res = Db::table('s_user_info')->where(array('id'=>$this->userInfo['id']))->save(array('show_list'=>$style));        if ($res) {            $this->array_return['ResultType'] = self::__OK__;            $this->array_return['Message'] = "操作成功";        } else {            $this->array_return['ResultType'] = self::__ERROR2__;            $this->array_return['Message'] = "操作失败";        }                return json($this->array_return);    }}