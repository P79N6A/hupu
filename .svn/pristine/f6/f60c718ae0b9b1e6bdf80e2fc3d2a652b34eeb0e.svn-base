<?phpnamespace app\api\controller;use think\facade\Config;use think\Db;use app\api\logic\VipList  as vipLogic;class AliPay {	private $appid = '2018091761406317'; //支付宝appid	//支付宝的公钥	private $alipayrsaPublicKey = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhOCUhyv5gnYmYvnKmsGq0zkBliUgP09PNhgkhpqAtQbh6BbjHuMOKxp/amFX+mkKq6nHvxkfsws5g43QKwBCASH9YWc8NcOOkxwVnxTBb8aaq3zeVPDLRbfswyu8lEr3h7F5H+zpWC4+HEdIrlklcGC4PQJNvzk7o9yXkB84ztQpNhGBDSwQEszPG20XwBul2aFv8GYiam9UJfN9yhwYgBlJWiGtvwcanv75E21/IO3GCuh/+1szTfJMhB9ZYzGK1Mp7B9TdXSl43PqbFNwRMbRz6itaMPaKHM3wAOQEAyRNie1CF00+8DFxNDXn3uZpBiAxSvyykwXrTCUcXzfQCwIDAQAB'; 	//支付宝的私钥       private $alipayrsaPrivateKey = 'MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCKN4mPZhofCgeouKbmQnFZAJGFbg2AV7hGTkrfsRCx8sRV4Lro4kaSWFdXGF9EsBmxoTmCgFniGsqcuJWnq63kVkutr9FDAieiynF9RM3KjngXw1NYqUVUari+xR8y/OLAri7UNlOsxBpC6Qxac9heJCRPGIGlJCRX1ALZYqoS5uvlLTJhg6AVrIkST9WeXaXX8wMsVGG+ZugsAWhtiMID4YhjyrOpZCZAYr8sOSYRbJHooIt9rDhCQMDvl3cI5Gubb7OeHQXKy6EMN+H1IrdYs5bwrClriYOac7BtWNh++l1ojDu5oUcuyuYQTNwDHgmCASDcb7saGinf7clSpZGLAgMBAAECggEAd0nrbVnfnX5YkeOcGAqsLPZyocgT2vraTcNwl5MIJ6ywirXEWw4/fjrEVqTwRCYAZvAQ5HLGIICi8ZPVhbqEABgChMrDPqPzdWpnfIgPXIyNVWT83/5nma3p+KvEe4sKYOV0AS9KFEfDqo/cW4yz5rwmoiUyb0a8HxkZxGiFBH4HE+yMzpmMV+dAxlOmo9guKEKmyf12pKGlKuEwO3MBeHfYMpzqcuK6FSQY0Awpi8bg4DZT4B4ym5AX/aKTyjJRt9oMG/Heux5qsrBUJCQ+Bsok6ng5j8zjxlFjH91gB06688kUh+M3OeR/KbvesWaZTJNVR/IhJKdumEBDbnCL4QKBgQDJVfk8XSGQqbaKF7jfdNtNoa3Bv4Qw8/qKT45Xs3qI0wdcrKfSQZmPgJGcYMPm5bTvrJHkY2r8u7oC5uWYA6Aop8iLWbbJfLqiaLAEnxhuVmkOgnNhqM9OeLo/QDjatng82V0B8Z8MwtgPkQtwlqOVbLMp4sAcX6wfcqr3G+FAOQKBgQCvvm3TxKVuG7d2LXy7x2ilWew5aT7gMO+hfIFtBKpruLeNh4SCvYkoEic61hSlQCej8MQlLU8Yz+YW1d/Nvu6X+f/eASbsN6FbZhlfOKfVsNAtnjOMUOMf4+cl8shQY4npJkx0BtAOkZaOj0gwR/vbnWYSJxpGZShDHKhzFUiX4wKBgQC+4nMtxwKGvFEjtgACZDFz9eDee6xiGT8lmO3UuoZnaORm+g8WqjlkM7paL+gsZwbX4Z5kkdmiin1+ONne+TkEsqbRb5p8h3QPfP+9MfWgzu5F4mpwYfNCa/Xw9/uvaSawUkj7CdEI8UaV46eb9EZd6jQndyM7A34WRspPBLDYCQKBgQCSV8OCvVR4XPInoXclssZsMnYn1ID8FSPmWBQ6YNE8xGNsojVw3T2SNZOfRdeJR+P6eyoKPzGHWs+holUsMdriiNZM2q67sxNVVa65ASeZJRQleIA6TrziuFep3QJ7FngnwrGVSHsGNqulaKDXO4n5dZcidJdHmUKup/WJZ2a8uwKBgAUDI8c2WM2LqusicKbxZgavECCcX6wXyvfn5FpcmXlKNwu+zTzQiFh5ASijTAd8VUliLP82mY2bCBQKp05z4ULwFGLcr6QcNpd2FniWAKeAFdGWTzo3CJB2TGevV6z/fpF6k237WuF35soGef+1uKyHR72XuaQ4Q8lSQo6Z3YEd';    /*    * 支付宝异步回调方法    */    public  function index()    {        //初始化参数        $flag = 'fail';    	$recharge_type = 'vip';    	$trade_status   = input('param.trade_status','');      //交易状态    	$status_arr = array('TRADE_FINISHED','TRADE_SUCCESS');	//订单状态        $app_id	= input('param.app_id',0);	//是否是app支付        $passback_params = input('param.passback_params','');        if ($app_id == $this->appid) {        	//app支付回调方法           	$total_fee      = input('param.total_amount',0);   //交易金额[支付宝]           	$buyer_email    = input('param.buyer_logon_id','');       //买家支付宝帐号；			require_once EXTEND_PATH.'/Alipay/aop/AopClient.php';			$aop = new \AopClient;			$aop->alipayrsaPublicKey = $this->alipayrsaPublicKey;			$verify_result = $aop->rsaCheckV1($_REQUEST, NULL, "RSA2");        } else {        	//网页支付回调方法        	$total_fee = input('param.total_fee',0);   //交易金额[支付宝]        	$buyer_email = input('param.buyer_email','');  //买家支付宝帐号；	        //读取配置文件		    $alipay_config = config('alipay_config');		    vendor('Alipay.AlipayNotify');		    $alipayNotify = new \AlipayNotify($alipay_config);		    $verify_result = $alipayNotify->verifyNotify();;        }                //验证成功		if(in_array($trade_status, $status_arr) && $verify_result) 		{           //获取支付宝的通知返回参数，可参考技术文档中服务器异步通知参数列表           $out_trade_no   = input('out_trade_no','');      //商户订单号           $trade_no       = input('trade_no','');          //支付宝交易号           $notify_id      = input('notify_id','');         //通知校验ID。           $notify_time    = input('notify_time','');       //通知的发送时间。格式为yyyy-MM-dd HH:mm:ss。                      $parameter = array(			"out_trade_no"     => $out_trade_no, //商户订单编号；             "trade_no"     => $trade_no,     //支付宝交易号；             "total_fee"     => $total_fee,    //交易金额；             "trade_status"     => $trade_status, //交易状态             "notify_id"     => $notify_id,    //通知校验ID。             "notify_time"   => $notify_time,  //通知的发送时间。             "buyer_email"   => $buyer_email,  //买家支付宝帐号；           );                      $oid = 1;           if ($passback_params) {           		$recharge_type = 'year' ;           		$uid_str = urldecode($passback_params);           		$uids = explode('=',$uid_str);           		$parameter['data']['day'] = 365;           		$parameter['data']['user_id'] = $uids[1];           		$parameter['order_id'] = $uids[1];           }                      //vip充值检查订单状态		   if ($recharge_type == 'vip') {	               $oid = $this->checkorderstatus($out_trade_no);               $parameter['order_id'] = $oid;           }          		   if ($oid) {           		$parameter['total_fee'] = $parameter['total_fee'] * 100; //交易金额[支付宝单位元]                $this->orderhandle($parameter,$recharge_type);  //进行订单分佣处理，并传送从支付宝返回的参数；           }			           $flag =  'success';           } 				$_REQUEST['result'] = $flag;		file_put_contents('/data/wwwlogs/alipay.txt', json_encode($_REQUEST),FILE_APPEND);		file_put_contents('/data/wwwlogs/app_alipay.txt', json_encode($_REQUEST),FILE_APPEND);		echo $flag;    }         /*     *@param  string $out_trade_no 字符串     *关闭支付宝订单交易     */    public function cancelorder()    {        //初始化参数        $out_trade_no = input('param.out_trade_no','');        $data = array('status'=>0,'msg' => '缺少参数');        if (!$out_trade_no) {             echo json_encode($data);            die();        }        require_once EXTEND_PATH.'/Alipay/aop/AopClient.php';        $aop = new \AopClient();        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';        $aop->appId = $this->appid;        $aop->rsaPrivateKey = $this->alipayrsaPrivateKey;        $aop->alipayrsaPublicKey = $this->alipayrsaPublicKey;        $aop->apiVersion = '1.0';        $aop->signType = 'RSA2';        $aop->postCharset='UTF-8';        $aop->format='json';        require_once EXTEND_PATH.'/Alipay/aop/request/AlipayTradeCloseRequest.php';        $request = new \AlipayTradeCloseRequest();        $bizArr = array('out_trade_no' => $out_trade_no);        $bizcontent = json_encode($bizArr);        $request->setBizContent($bizcontent);        $result = $aop->execute ( $request);         $res = 'fail';        $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";        $resultCode = $result->$responseNode->code;        if(!empty($resultCode)&&$resultCode == 10000){            $ord_obj = Db::table('s_vip_order');            $ord_obj->where('out_trade_no='.$out_trade_no.' and pay_status=0')->delete();            $res = 'success';        }          echo $res;    }    /*     *支付宝转账到个人账号     */    public function accounttransfer()    {         //初始化参数        $money = input('param.money',0);        $account = input('param.account',0);        $uid = input('param.uid',0);        require_once EXTEND_PATH.'/Alipay/aop/AopClient.php';        $aop = new \AopClient();        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';        $aop->appId = $this->appid;        $aop->rsaPrivateKey = $this->alipayrsaPrivateKey;        $aop->alipayrsaPublicKey = $this->alipayrsaPublicKey;        $aop->apiVersion = '1.0';        $aop->signType = 'RSA2';        $aop->postCharset='UTF-8';        $aop->format='json';        $out_biz_no = substr($this->appid,8).date('YmdHis').mt_rand(10000,99999);        $bizArr = array('out_biz_no'=>$out_biz_no,'amount' =>198,'payee_account'=>'leo@pagedesign.cn','payee_type'=>ALIPAY_LOGONID,'payer_show_name'=>'佣金发放','payee_real_name'=>'','remark'=>'您的佣金');        $bizcontent = json_encode($bizArr);        require_once EXTEND_PATH.'/Alipay/aop/AlipayFundTransToaccountTransferRequest.php';        $request = new \AlipayFundTransToaccountTransferRequest();        $request->setBizContent($bizcontent);        $res = 'fail';        $result = $aop->execute($request);         $responseNode = str_replace(".", "_", $request->getApiMethodName()) . "_response";        $resultCode = $result->$responseNode->code;        if(!empty($resultCode)&&$resultCode == 10000){            $res = 'success';        }         echo $res;    }    	/*     *@param  string $out_trade_no 字符串	 *app获取支付宝支付数据	 */	public function getOrderParams()	{	        //初始化参数		$out_trade_no = input('param.out_trade_no','');        $data = array('status'=>0,'msg' => '缺少参数');        if(!$out_trade_no){            echo json_encode($data);            die();        }        $ord_obj = Db::table('s_vip_order');        $info = $ord_obj->where('order_no='.$out_trade_no)->field('user_id,price')->find();        if(empty($info)){            $data['msg'] = '数据错误';            echo json_encode($data);            die();        }		        $price = $info['price'];		$notify_url = 'http://'.$_SERVER['HTTP_HOST'].'/Api/AliPay/index';//回调通知地址        $notify_url = 'http://wx.yxm360.com/Api/AliPay/index';		$goods_name = 'VIP会员充值'.$price;			    $bizArr = array('body'=>"洋小秘充值中心-VIP充值",'subject'=>$goods_name,'out_trade_no'=>$out_trade_no,	    'timeout_express'=>'30m','total_amount'=>$price,'product_code'=>'QUICK_MSECURITY_PAY');			    //app调用统一下单接口		$this->appaddorder($notify_url,$bizArr);	}        /*     *获得充值数据接口     */    public function getRechargeData()     {        $goods  = Db::table('s_vip_list')->where('status=1')->select();        echo json_encode($goods);    }    /*     *@param  int $vipid vipid整形     *@param  int $uid uid整形     *@param  string $unionid unionid字符串     *预先添加订单数据     */    public function addorder()    {        //判断用户是否登录        $uinfo = session("user_info");        //if (empty($uinfo)) { header("location:".url("Home/User/Login"));; }        $uid = input('param.uid',0);        $vipid = input('param.vipid',0);        $is_app = input('param.is_app',0);        $data = array('status'=>0,'msg' => '缺少参数');        if(!$uid || !$vipid ){            echo json_encode($data);            die();        }        $vip_obj = Db::table('s_vip_list');        $info = $vip_obj->where('id='.$vipid)->field('money')->find();        if(empty($info)){            $data['msg'] = '数据错误';            echo json_encode($data);            die();        }        //$total_fee = $info['money'];        $total_fee = 198 ; //默认198元充值        $out_trade_no = getOrderSn();        //构造要请求的参数数组，无需改动        $ord_obj = Db::table('s_vip_order');        $info1 = $ord_obj->where('user_id='.$uid.' and pay_status=1 and vip_list_id=1')->field('order_no')->find();        if($info1){            $data['msg'] = '您已经是会员,请退出重新登录';            echo json_encode($data);            die();        }        $info = $ord_obj->where('user_id='.$uid.' and pay_status=0 and vip_list_id=1')->field('order_no')->find();        if(empty($info)){			$pay_source = $is_app ? 'app支付' : '服务号支付';            $reg = $ord_obj->insert(array('order_no'=>$out_trade_no,'user_id'=>$uid,'vip_list_id'=>1,'price'=>$total_fee,'pay_status'=>0,'pay_source'=>$pay_source,'add_time'=>time()));        }else{            $out_trade_no = $info['order_no'];        }        $data = array('status'=>1,'msg' => '成功','out_trade_no' => $out_trade_no);        echo json_encode($data);    }       	/*     *获得会员年费充值数据接口     */    public function getAnnualData()     {    	$group_id = input('param.group_id',0);    	$uid = input('param.uid',0);      	$data = array('status'=>0,'msg' => '缺少参数');        if(!$group_id ){            echo json_encode($data);            die();        }                $user_obj = Db::table('s_user_detail');    	$w_arr = array('id'=>$uid,'vip_group_id'=>$group_id);        $info = $user_obj->where($w_arr)->field('id')->find();        if(empty($info)){            $data['msg'] = '数据不匹配';            echo json_encode($data);            die();        }                $vip_obj = Db::table('s_vip_group');        $info = $vip_obj->where('id='.$group_id)->field('id,vip_name,annual_fee,add_time')->find();        if(empty($info)){            $data['msg'] = '数据为空';            echo json_encode($data);            die();        }                echo json_encode($info);    }     	/*     *@param  int $group_id group_id整形     *@param  int $uid uid整形     *@param  string $unionid unionid字符串     *预先添加年费订单数据     */    public function renewalOrder()    {    	$group_id = input('param.group_id',0);        $uid = input('param.uid',0);         $data = array('status'=>0,'msg' => '缺少参数');        if(!$uid || !$group_id ){            echo json_encode($data);            die();        }    	$user_obj = Db::table('s_user_detail');    	$w_arr = array('id'=>$uid,'vip_group_id'=>$group_id);        $info = $user_obj->where($w_arr)->field('id')->find();        if(empty($info)){            $data['msg'] = '数据不匹配';            echo json_encode($data);            die();        }                $vip_obj = Db::table('s_vip_group');        $info = $vip_obj->where('id='.$group_id)->field('annual_fee')->find();        if(empty($info)){            $data['msg'] = '数据为空';            echo json_encode($data);            die();        }         $price = $info['annual_fee'];        $out_trade_no = getOrderSn();    	$passback_params = urlencode('uid='.$uid);        $notify_url = 'http://wx.yxm360.com/Api/AliPay/index';		$goods_name = '会员年费充值'.$price;	    $bizArr = array('body'=>"洋小秘充值中心-年费充值",'subject'=>$goods_name,'out_trade_no'=>$out_trade_no,	    'timeout_express'=>'30m','total_amount'=>$price,'product_code'=>'QUICK_MSECURITY_PAY','passback_params'=>$passback_params);				//app调用统一下单接口		$this->appaddorder($notify_url,$bizArr);    }    /*    * app端下单接口    */    private function appaddorder($notify_url,$bizArr)    {      	//初始化类		require_once EXTEND_PATH.'/Alipay/aop/AopClient.php';		$aop = new \AopClient;		$aop->gatewayUrl = "https://openapi.alipay.com/gateway.do";		$aop->appId = $this->appid;		$aop->rsaPrivateKey = $this->alipayrsaPrivateKey;		$aop->format = "json";		$aop->charset = "UTF-8";		$aop->signType = "RSA2";		$aop->alipayrsaPublicKey = $this->alipayrsaPublicKey;		//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称：alipay.trade.app.pay		require_once EXTEND_PATH.'/Alipay/aop/request/AlipayTradeAppPayRequest.php';		$request = new  \AlipayTradeAppPayRequest();		//SDK已经封装掉了公共参数，这里只需要传入业务参数		$bizcontent = json_encode($bizArr);		$request->setNotifyUrl($notify_url);		$request->setBizContent($bizcontent);		//这里和普通的接口调用不同，使用的是sdkExecute		$response = $aop->sdkExecute($request);		parse_str($response,$data);	 		$data['surl'] = $response;		//htmlspecialchars是为了输出到页面时防止被浏览器将关键参数html转义，实际打印到日志以及http传输不会有这个问题		echo json_encode($data);    }    /*网页获取支付宝支付数据    * 然后进行相关处理    */    public function doalipay()    {           $data = array('status'=>0,'msg' => '缺少参数');        //商户订单号 通过支付页面的表单进行传递，注意要唯一！        $out_trade_no   = input('out_trade_no','');             if (!$out_trade_no) {              echo json_encode($data);            die();        }        $ord_obj = Db::table('s_vip_order');        $info = $ord_obj->where('order_no='.$out_trade_no)->field('price')->find();        if(empty($info)){            $data['msg'] = '外部订单号有误';            echo json_encode($data);            die();        }        		//这里我们通过TP的C函数把配置项参数读出，赋给$alipay_config；		$alipay_config = config('alipay_config');  		        /**************************请求参数**************************/        $payment_type = "1"; //支付类型 //必填，不能修改        $notify_url = config('alipay.notify_url'); //服务器异步通知页面路径        $return_url = config('alipay.return_url'); //页面跳转同步通知页面路径        $seller_email = config('alipay.seller_email');//卖家支付宝帐户必填        $subject = '洋小秘';//input('ordsubject'];  //订单名称 //必填 通过支付页面的表单进行传递        $total_fee = $info['price'];   //付款金额  //必填 通过支付页面的表单进行传递        $body = '会员充值';//input('ordbody'];  //订单描述 通过支付页面的表单进行传递        $show_url =  input('ordshow_url','');  //商品展示地址 通过支付页面的表单进行传递        $anti_phishing_key = "";//防钓鱼时间戳 //若要使用请调用类文件submit中的query_timestamp函数        $exter_invoke_ip = get_client_ip(); //客户端的IP地址         /************************************************************/        $parameter = array(            "service" => "create_direct_pay_by_user",            "partner" => trim($alipay_config['partner']),            "payment_type"    => $payment_type,            "notify_url"    => $notify_url,            "return_url"    => $return_url,            "seller_email"    => $seller_email,            "out_trade_no"    => $out_trade_no,            "subject"    => $subject,            "total_fee"    => $total_fee,            "body"            => $body,            "show_url"    => $show_url,            "anti_phishing_key"    => $anti_phishing_key,            "exter_invoke_ip"    => $exter_invoke_ip,            "_input_charset"    => trim(strtolower($alipay_config['input_charset'])),        );               //建立请求          vendor('Alipay.AlipaySubmit');         $alipaySubmit = new \AlipaySubmit($alipay_config);        $html_text = $alipaySubmit->buildRequestForm($parameter,"post", "确认");        file_put_contents('/data/wwwlogs/webalipay.txt', $html_text,FILE_APPEND);        echo $html_text;    }       /*     * 页面跳转处理方法；     * 同步跳转      */    public  function returnurl()    {        //头部的处理跟上面两个方法一样，这里不罗嗦了！        $alipay_config = config('alipay_config');		vendor('Alipay.AlipayNotify');        $alipayNotify = new \AlipayNotify($alipay_config);//计算得出通知验证结果        $verify_result = $alipayNotify->verifyReturn();        if($verify_result) {            //验证成功            //获取支付宝的通知返回参数，可参考技术文档中页面跳转同步通知参数列表            $out_trade_no   = input('out_trade_no','');      //商户订单号            $trade_no       = input('trade_no','');          //支付宝交易号            $trade_status   = input('trade_status','');      //交易状态            $total_fee      = input('total_fee',0);         //交易金额            $notify_id      = input('notify_id','');         //通知校验ID。            $notify_time    = input('notify_time','');       //通知的发送时间。            $buyer_email    = input('buyer_email','');       //买家支付宝帐号；            $parameter = array(                "out_trade_no"     => $out_trade_no,      //商户订单编号；                "trade_no"     => $trade_no,          //支付宝交易号；                "total_fee"      => $total_fee,         //交易金额；                "trade_status"     => $trade_status,      //交易状态                "notify_id"      => $notify_id,         //通知校验ID。                "notify_time"    => $notify_time,       //通知的发送时间。                "buyer_email"    => $buyer_email,       //买家支付宝帐号            );            $status_arr = array('TRADE_FINISHED','TRADE_SUCCESS');	//订单状态            if(in_array($trade_status, $status_arr)) {                $oid = $this->checkorderstatus($out_trade_no);                if($oid){                    $parameter['order_id'] = $oid;                    $this->orderhandle($parameter);  //进行订单处理，并传送从支付宝返回的参数；                }                $this->redirect(config('alipay.successpage'));//跳转到配置项中配置的支付成功页面；            }else {                echo "trade_status=".input('trade_status');                $this->redirect(config('alipay.errorpage'));//跳转到配置项中配置的支付失败页面；            }        }               echo 'fail';    }       /*    *发放推荐奖励    *@param array   $parameter 数组    *@type string $type 充值类型    */    private function orderhandle($parameter,$type='vip')     {        $options = array('result_code'=>'SUCCESS','attach'=>'','transaction_id'=>$parameter['out_trade_no']);        $options = array_merge($options,$parameter);        $vip_mod = new  VipList();        if ($type == 'year'){        	$flag = $vip_mod->payCallback($options); //年费充值        } else {        	$flag = $vip_mod->BuyCallBack($options); //VIP充值        }        		return  $flag;    }        /*    *检查vip订单情况    *@order_no string $order_no 订单编号[商户订单号]    */    private function checkorderstatus($order_no)     {        $ord_obj = Db::table('s_vip_order');        $info = $ord_obj->where('order_no='.$order_no)->field('id,pay_status')->find();        if(empty($info)){             return 0;        }elseif($info['pay_status']==1){             return 0;        }else{            return $info['id'];        }     }   }