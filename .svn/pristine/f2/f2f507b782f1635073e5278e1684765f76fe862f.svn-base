<?php/** 团队管理 */namespace app\home\controller;use app\common\controller\HomeBase;use app\api\logic\User  as userLogic;use think\Db;class Team extends HomeBase{    private function is_head($user_id)    {        //判断是否团长        $data=false;        $team = Db::table("s_team_users")->where(['user_id'=>$user_id])->select();        foreach ($team as $key => $value) {            $position = Db::table('s_team_position')->where(["id"=>$value['position_id']])->find();            if($position['level']==1){                $data = Db::table("s_team")->where(['id'=>$value['team_id']])->find();                break;            }        }        return $data;    }    private function get_head($id)    {        //获取团长id        $user_id = 0;        $team = Db::table("s_team_users")->where(['id'=>$id])->select();        foreach ($team as $key => $value) {            $position = Db::table('s_team_position')->where(["id"=>$value['position_id']])->find();            if($position['level']==1){                $user_id=$value['user_id'];                break;            }        }        return $user_id;    }    public function addTeamCode()    {        $id = Input('get.id');        $url='http://'.$_SERVER['HTTP_HOST'].url("Home/Team/addTeam?id=".$id);        qrcode($url);    }    public function addTeam()    {        //加入团队操作        $id = Input('get.id');        $user_id = $this->userInfo['id'];        $is_add = Db::table("s_team_users")->where(['user_id'=>$user_id,'team_id'=>$id])->find();        if($is_add){            //判断是否存在团队            hao_msg('您已经在团队了',url('Home/Team/lists?id='.$id));            exit;        }        $data['team_id'] = $id;        $data['user_id'] = $user_id;        $data['object_id'] = $this->get_head($id);        $data['add_time'] = time();        $data['status'] = 2;        $add_id = Db::table("s_team_msg")->insert($data);        if($add_id){        }    }    /**     * 我的团队     */    public function mine()    {    	$user_logic = new userLogic();        $list = $user_logic->getBindUser($this->userInfo['id']);        foreach($list as $k => $v){            if($v['user_id'] == $this->userInfo['id']){                $current = $v;                unset($list[$k]);                break;            }        }        $myteam = Db::table("s_team_users")->where(['user_id'=>$this->userInfo['id']])->select();        foreach ($myteam as $key => $value) {            $team = Db::table("s_team")->where(['id'=>$value['team_id']])->find();            $myteam[$key]['name']=$team['name'];            $myteam[$key]['headurl']=$team['headurl'];            $content=cutstr_html($value['info']);            $myteam[$key]['info']=mb_substr($content,0,15,'utf-8');        }        $list = array_merge(array($current),$list);        $this->assign('list',$list);        $this->assign('myteam',$myteam);                return $this->fetch();    }    /**     * 团队（列表）     */    public function lists()    {        $id=Input("get.id");        $myteam = Db::table("s_team_users")->where(['team_id'=>$id])->select();        $data=[];        $head=[];        foreach ($myteam as $key => $value) {            $user = Db::table("s_userInfo")->where(['id'=>$value['user_id']])->find();            $position = Db::table('s_team_position')->where(["id"=>$value['position_id']])->find();            if($position['level']==1){                $head['name']=$user['nick_name'];                $head['headimg']=$user['headimg'];                $head['level_name']=$position['name'];                continue;            }            $_data['name']=$user['nick_name'];            $_data['headimg']=$user['headimg'];            $_data['mobile']=$user['mobile'];            $_data['level_name']=$position['name'];            $pin=getFirstCharter($_data['name']);            $data[$pin][]=$_data;        }        $res['team'] = Db::table("s_team")->where(['id'=>$id])->find();        $res['user_list']=$data;        $res['head']=$head;        $userIds = array(-1);        $userList = Db::table('s_team_users')->where(array('team_id' => $id))->select();        foreach ($userList as $v)            $userIds[] = $v['user_id'];        	$articleS = Db::table('s_article_list')->where(array('user_id'=>array('in',$userIds)))->order('add_time desc')->select();        foreach($articleS as $k => $v) {            $articleS[$k]['content'] = mb_substr(strip_tags($v['content']), 0, 80, 'utf-8');        }        $this->assign('articleS',$articleS);        $this->assign("data",$res);        $this->assign("user_list",$res['user_list']);        $this->assign("count",count($myteam));                return $this->fetch();    }    /**     * 我的团队（列表）     */    public function moments()    {        $this->assign("myteam",$this->is_head($this->userInfo['id']));        $where = array();        if(Input('post.keyword')){            $where['name'] = array('like',Input('post.keyword'));        }        $this->team = Db::table("s_team")->where($where)->order("add_time desc")->select();                return $this->fetch();    }    /**     * 团队动态2（列表）     */    public function moments2()    {        $where = array('user_id'=>$this->userInfo['id']);        if(Input('post.keyword')){            $teamList = Db::table('s_team')->where(array('name'=>array('like','%'.Input('post.keyword').'%')))->select();            $ids = array(-1);            foreach($teamList as $v)                $ids[] = $v['id'];            $where['team_id'] = array('in',$ids);        }        $teamList = Db::table('s_team_users')->where($where)->select();        $teamIds = $userIds = array(-1);        $articleS = array();        foreach($teamList as $v)            $teamIds[] = $v['team_id'];	        if($teamIds) {	            $userList = Db::table('s_team_users')->where(array('team_id' => array('in', $teamIds)))->select();	            foreach ($userList as $v)	                $userIds[] = $v['user_id'];		            $articleS = Db::table('s_article_list')->where(array('user_id'=>array('in',$userIds)))->order('add_time desc')->select();		            foreach($articleS as $k => $v) {		                $articleS[$k]['content'] = mb_substr(strip_tags($v['content']), 0, 80, 'utf-8');		            }	        }        $this->assign('articleS',$articleS);                return $this->fetch();    }    /**     * 团队消息（列表）     */    public function message()    {        $position = Db::table('s_team_position')->where(array('level'=>1))->find();        $where = array('user_id'=>$this->userInfo['id'],'position_id'=>$position['id']);        if(Input('post.keyword')){            $teamList = Db::table('s_team')->where(array('name'=>array('like','%'.Input('post.keyword').'%')))->select();            $ids = array(-1);            foreach($teamList as $v)                $ids[] = $v['id'];            $where['team_id'] = array('in',$ids);        }        $teamList = Db::table('s_team_users')->where($where)->select();        $teamIds = $userIds = array(-1);        $messageList = array();        foreach($teamList as $v)            $teamIds[] = $v['team_id'];        	if($teamIds) {	            $messageList = Db::table('s_team_msg')->alias('m')->join('__TEAM__  t ON m.team_id = t.id')->	            where()->field('m.*,t.name,t.headurl')->select();//array('m.team_id' => array('in', $teamIds))	        }        $this->assign('keyword',Input('post.keyword'));        $this->assign('messageS',$messageList);        return $this->fetch();    }    /**     * 信息内容     */    public function messageInfo()    {        if(isPOST){            $id = Input('post.id');            $status = Input('post.status');            $mesInfo = Db::table('s_team_msg')->where(array('id'=>$id))->find();            if($status == 1){                $addData = array(                    'team_id' => $mesInfo['team_id'],                    'user_id' => $mesInfo['user_id'],                    'add_time' => time()                );                Db::table('s_team_users')->insert($addData);            }            Db::table('s_team_msg')->where(array('id'=>$id))->update(array('status'=>$status));            header("location:".url('Home/Team/message'));        }        $id = Input('get.id') ;        $messageInfo = Db::table('s_team_msg')->alias('m')->join('__USER_INFO__  u ON u.id = m.user_id')->        where(array('m.id'=>$id))->field('m.*,u.nick_name')->find();        Db::table('s_team_msg')->where(array('id'=>$id))->update(array('is_read'=>1));        $this->assign('messageInfo',$messageInfo);                return $this->fetch();    }    /**     * 团队二维码     */    public function qrCode()    {        return $this->fetch();    }    /**     * 团队介绍     */    public function info()    {        $id = Input("get.id");        $this->data = Db::table("s_team")->where(['id'=>$id])->find();        $this->count = Db::table("s_team_users")->where(["team_id"=>$id])->count();        return $this->fetch();    }    /**     *  创建团队     */    public function create()    {        $listObj = Db::table('s_region');        $whereprovince['top_parentid'] = 0;        $listprovince = $listObj->where($whereprovince)->select();        $this->assign("province_list",$listprovince);        if(isPOST){            $post=Input("post.");            if(substr($_SERVER['HTTP_HOST'],0,1) == 'w'){                $start_name = 'Team';            }else{                $start_name = 'test';            }            if(!empty($_FILES['headurl']['name'])){                $Upload = new \Admin\Controller\UploadsController();                $end_name = trim(strrchr($_FILES['headurl']['name'], '.'),'.');                if($end_name == 'jpeg'){                    $save_name = $start_name.'/'.date('Ymd').'/'.time().rand(1,9999).'.jpg';                }else{                    $save_name = $start_name.'/'.date('Ymd').'/'.time().rand(1,9999).'.'.$end_name;                }                $post['headurl'] = $Upload->Uploads($save_name,$_FILES['headurl']);            }            if(empty($post['id'])){                //创建                $post['add_time']=time();                $id = Db::table("s_team")->insert($post);                if($id){                    $data['team_id']=$id;                    $data['user_id']=$this->userInfo['id'];                    $data['position_id'] = Db::table('s_team_position')->where(["level"=>1])->column('id');                    $data['add_time']=time();                    Db::table("s_team_users")->insert($data);                }                header("location:".url('Home/Team/moments'));            }else{                //编辑                Db::table("s_team")->update($post);            }        }else{            $get=Input();            if(!empty($get['id'])){                $this->data = Db::table("s_team")->where(['id'=>$get['id']])->find();                $this->title="编辑团队资料";            }else{                $this->title="创建团队";            }        }        return $this->fetch();    }    /**     *  团队管理     */    public function regulate()    {        return $this->fetch();    }    /**     *  团队成员管理     */    public function member()    {        return $this->fetch();    }    /**     *  团队广告管理     */    public function advert()    {        return $this->fetch();    }}