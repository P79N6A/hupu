<?php/** * Created by PhpStorm. * User: admin * Date: 2017/12/7 * Time: 0:16 */namespace app\api\controller;use app\common\controller\ApiBase;use app\api\logic\Cards  as cardsLogic;use app\api\logic\Member  as memberLogic;use app\api\logic\User  as userLogic;class Friend extends ApiBase{ 	private $cards_model = null; 	public function initialize()    {        parent::initialize();        $this->cards_model  = new cardsLogic();    }        public function MyFriends()    {        $where = $this->request;        $where['user_id'] = $this->userInfo['id'];        $list = $this->cards_model->getCards($where);        if(!empty($list))        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取网夹列表成功";            $this->array_return['AppendData']=$list;        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取网夹列表失败";            $this->array_return['AppendData']=null;        }        return json($this->array_return);    }    public function DeleteMyFriends()    {        $where = $this->request;        if(!isset($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择要删除的朋友！";            return json($this->array_return);        }else {            $where['id']=$this->_reqparam['id'];        }        //$where['user_id'] = $this->userInfo['id'];        //TODO:删除朋友时没有加userid条件，删除朋友条件中除了要有ID，还应该有user_id        $result  = $this->cards_model->delCards($where);        if(!empty($result))        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="删除朋友成功";            $this->array_return['AppendData']=$result;        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="删除朋友失败";            $this->array_return['AppendData']=null;        }                return json($this->array_return);    }    public function ViewMyFriend()    {        $where = $this->request;        if(!isset($this->_reqparam['id']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择要查看的朋友！";            return json($this->array_return);        }else{            $where['id']=$this->_reqparam['id'];        }        //$where['user_id'] = $this->userInfo['id'];        //TODO:删除朋友时没有加userid条件，查看朋友条件中除了要有ID，还应该有user_id        $result  = $this->cards_model->getCardsInfo($where);        if(!empty($result))        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="查看朋友成功";            $this->array_return['AppendData']=$result;            //‌‌$payinfo['obj']['pra']        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取朋友资料失败";            $this->array_return['AppendData']=null;        }                return json($this->array_return);    }    public function AddTrading()    {        $data=array();        $data['user_id']=$this->userInfo['id'];        if(!isset($this->_reqparam['tradId']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择要交换V网的朋友！";            return json($this->array_return);        }else{        	$user_mod = new userLogic();            $object_user = $user_mod->getUserInfoOption(array('spopenid'=>$this->_reqparam['spopenid']));            if(empty($object_user))            {                $this->array_return['ResultType']=self::__ERROR__;                $this->array_return['Message']="要交换V网的朋友的资料没有找到！";                return json($this->array_return);            }            $data['object_id']=$object_user['id'];        }        if(!isset($this->_reqparam['notice']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="交朋友总得说点什么吧！";            return json($this->array_return);        }else{            $data['msg']=$this->_reqparam['notice'];        }        $result = $this->cards_model->applyCards($data);        if($result){            $this->array_return['Message']="交换微网申请成功";            $visit_id=$this->_reqparam['visit_id'];            if($visit_id){//通过分享                $result = $this->cards_model->addCollection($this->userInfo['id'],$this->_reqparam['tradId'],$visit_id);                if($result){                    $this->array_return['Message'].='加入收藏成功！';                    $this->array_return['ResultType']=self::__OK__;                }else{                    $this->array_return['Message'].='加入收藏失败！';                    $this->array_return['ResultType']=self::__OK__;                }            }else{//通过加好友                $this->array_return['Message'].='交换微网申请成功!！';                $this->array_return['ResultType']=self::__OK__;            }        }else{            return json(array('status'=>0,'msg'=>'请勿重复申请'));            $this->array_return['ResultType']=self::__ERROR___;        }        return json($this->array_return);    }    //以上方法目前存在于UserController中，需要时迁移过来，现己迁移一半    public function GetCardExchangeList()    {        if(!isset($this->_reqparam['type']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="没有选择要获取的列表类型！";            return json($this->array_return);        }        switch($this->_reqparam['type']){            case 'mine':                $where['object_id'] = $this->userInfo['id'];                $where['status'] = array('in',array(1,2,3));                break;            case 'apply':                $where['user_id'] = $this->userInfo['id'];                $where['status'] = array('in',array(1,2,3));                break;            case 'success':                $where['user_id'] = $this->userInfo['id'];                $where['object_id'] = $this->userInfo['id'];                $where['status'] = 1;                break;        }        $begin_position = (intval($this->_reqparam['current_page_number'])-1)*intval($this->_reqparam['page_size']);        $limit=$begin_position.",".$this->_reqparam['page_size'];        $list = $this->cards_model->getCardsList_xcx($where,$limit);        if($this->_reqparam['type'] == 'mine' ||$this->_reqparam['type'] == 'success' ){            foreach($list as $k =>$v){                if($v['object_id'] == $this->userInfo['id'])                {                    $collectUser = Db::table('s_user_detail')->where(array('id'=>$v['user_id']))->find();                    if($collectUser)                    {                        $collectUser['background_img']=ToOpenWxImage( $collectUser['background_img']);                        $collectUser['headimg']=ToOpenWxImage( $collectUser['headimg']);                        $collectUser['wx_ewm_url']=ToOpenWxImage( $collectUser['wx_ewm_url']);                        $collectUser['shareimg']=ToOpenWxImage( $collectUser['shareimg']);                        $collectUser['qrcodeimg']=ToOpenWxImage( $collectUser['qrcodeimg']);                        $collectUser['thumbhead']=ToOpenWxImage( $collectUser['thumbhead']);                        $list[$k]['user_info']=   $collectUser;                    }                }            }        }        if(!empty($list))        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="获取名片交换列表成功";            $this->array_return['AppendData']=$list;            //‌‌$payinfo['obj']['pra']        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="获取名片交换列表失败";            $this->array_return['AppendData']=null;        }        return json($this->array_return);    }    public function ValidateExchange()    {        if (!isset($this->_reqparam['id'])) {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "没有指定具体请求！";            return json($this->array_return);        }        if (!isset($this->_reqparam['status'])) {            $this->array_return['ResultType'] = self::__ERROR__;            $this->array_return['Message'] = "没有指定审核结果！";            return json($this->array_return);        }else{            switch ($this->_reqparam['status'])            {                case '同意':                    $this->_reqparam['status']=1;                    break;                case '拒绝':                    $this->_reqparam['status']=3;                    break;                default:                    $this->array_return['ResultType'] = self::__ERROR__;                    $this->array_return['Message'] = "没有指定审核结果！";                    return json($this->array_return);            }        }        $par=array('id'=>$this->_reqparam['id'],'status'=>$this->_reqparam['status']);        $res = $this->cards_model->operateCards($par);        if(!empty($res))        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="审核成功";            $this->array_return['AppendData']=$res;        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="审核失败";            $this->array_return['AppendData']=null;        }        return json($this->array_return);    }    public function SendFriendSMS()    {        if(empty($this->_reqparam['mobile'])||!preg_match("/^1[345789]{1}\d{9}$/",$this->_reqparam['mobile']))        {            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="手机号码格式错误!";            return json($this->array_return);        }        $par=array('nick_name'=>$this->userInfo['nick_name'],'spopenid'=>$this->_reqparam['spopenid'],'user_id'=>$this->userInfo['id']);        $member_mod = new memberLogic();        $res = $member_mod->sendFriendMessage($this->_reqparam['mobile'],$par);        if($res['status']=="0")        {            $this->array_return['ResultType']=self::__OK__;            $this->array_return['Message']="发送成功";            $this->array_return['AppendData']=$res;        }else{            $this->array_return['ResultType']=self::__ERROR__;            $this->array_return['Message']="发送失败";            $this->array_return['AppendData']=null;        }        return json($this->array_return);    }}