<?php/** * Created by PhpStorm. * User: admin * Date: 2017/11/30 * Time: 22:37 */namespace app\api\controller;use app\common\controller\ApiBase;use app\api\logic\VisitLog  as visitLogic;use app\api\model\Opinion  as opinionModel;require_once EXTEND_PATH.'/Alioss/autoload.php';class Common extends  ApiBase{	private $visit_logic = null;	private $opi_mod = null; 	 	function initialize() 	{ 		parent::initialize();        $this->visit_logic = new visitLogic();        $this->opi_mod = new opinionModel();    }        /**     * 图片上传     */    public function upload_img()    {        $img = $this->_reqparam['img'];        $type = ucwords($this->_reqparam['type']);        if (!$type){            return json(['ResultType'=>self::__ERROR__,'Message'=>"未传递类型",'AppendData'=>[]]);        }        if(substr($img,0,5) == 'data:'){            //上传base64图            $base64_image = str_replace(' ', '+', $img);            if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $base64_image, $result)){                //匹配成功                if($result[2] == 'jpeg'){                    $image_name = uniqid().rand(1000,9999).'.jpg';                }else{                    $image_name = uniqid().rand(1000,9999).'.'.$result[2];                }                // 文件名称                $object = $type.'/'.date("Y-m-d",time())."/".$image_name;                if (strstr($base64_image,",")){                    $base64_image = explode(',',$base64_image);                    $base64_image = $base64_image[1];                }                $path = './Uploads/Article/'.date("Y-m-d",time());                if (!is_dir($path)){ //判断目录是否存在 不存在就创建                    mkdir($path,0777,true);                }                $imageSrc=  './Uploads/Article/'.date("Y-m-d",time())."/".uniqid().rand(1000,9999).'.jpg';  //图片名字                file_put_contents($imageSrc, base64_decode($base64_image));//返回的是图片名                try{					$conf = config('OSS_IMAGE');                    $ossClient = new \OSS\OssClient($conf['accessKeyId'], $conf['accessKeySecret'], $conf['endpoint']);                    $image_file =  $ossClient->uploadFile($conf['bucket'], $object, $imageSrc);                    if ($image_file['status'] == true)                    {                        if (strtolower($type) == 'share'){                            $cdn_usl_https = 'https://oss.mingxin001.com/';                            $shift_url = str_replace($conf['oss_url'],$cdn_usl_https,$image_file['url']);                        }else{                            $shift_url = str_replace($conf['oss_url'],$conf['cdn_usl'],$image_file['url']);                        }                                                $result_url =  $shift_url."@!protected";                        unlink($imageSrc);                        $this->array_return['ResultType'] = self::__OK__;                        $this->array_return['Message'] = "操作成功";                        $this->array_return['AppendData'] = $result_url;                    }else{                        // 上传错误提示错误信息                        $this->array_return['ResultType'] = self::__ERROR2__;                        $this->array_return['Message'] = "上传操作失败";                    }                } catch(OssException $e) {                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "上传操作失败";                }            }        }else{            $end_name = trim(strrchr($_FILES['img']['name'], '.'),'.');            if($end_name == 'jpeg'){                $save_name = $type.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.jpg';            }else{                $save_name = $type.'/'.date('Y-m-d').'/'.time().rand(1,9999).'.'.$end_name;            }            try{            	$conf = config('OSS_IMAGE');                $ossClient = new \OSS\OssClient($conf['accessKeyId'], $conf['accessKeySecret'], $conf['endpoint']);                $image_file =  $ossClient->uploadFile($conf['bucket'], $save_name, $_FILES['img']['tmp_name']);                if ($image_file['status'] == true){                    if (strtolower($type) == 'share'){                        $cdn_usl_https = 'https://oss.mingxin001.com/';                        $shift_url = str_replace($conf['oss_url'],$cdn_usl_https,$image_file['url']);                    }else{                        $shift_url = str_replace($conf['oss_url'],$conf['cdn_usl'],$image_file['url']);                    }                    $result_url =  $shift_url."@!protected";                    $this->array_return['ResultType'] = self::__OK__;                    $this->array_return['Message'] = "操作成功";                    $this->array_return['AppendData'] = $result_url;                }else{                    // 上传错误提示错误信息                    $this->array_return['ResultType'] = self::__ERROR2__;                    $this->array_return['Message'] = "上传操作失败2";                }            } catch(OssException $e) {                $this->array_return['ResultType'] = self::__ERROR2__;                $this->array_return['Message'] = "上传操作失败3";            }        }                return json($this->array_return);    }    public function GetSystemInfo()    {        $result = array();        $result['phone']='400-920-1127';        $result['infos']='洋小秘，为营销而生';        $result['image']='http://wx.yxm360.com/tempstatic/image/WX20170917-024534@2x.png';         $array_return['ResultType']=self::__ERROR__;        $array_return['Message']="获取系统信息数据失败";        if($result){            $array_return['ResultType']=self::__OK__;            $array_return['Message']="获取系统信息成功";            $array_return['AppendData']=$result;        }                return json($array_return);    }    public function Feedback()    {        $res = $this->_reqparam;        if(!isset($res['contactinfo'])){            $this->ajax_return['ResultType']=self::__ERROR__;            $this->ajax_return['Message']="联系方式不能为空";            return json($this->ajax_return);        }        if(!isset($res['name'])){            $this->ajax_return['ResultType']=self::__ERROR__;            $this->ajax_return['Message']="用户姓名不能为空";            return json($this->ajax_return);        }        if(!isset($res['infos'])){            $this->ajax_return['ResultType']=self::__ERROR__;            $this->ajax_return['Message']="内容不能为空";            return json($this->ajax_return);exit;        }        $data['user_id']=$this->userInfo['id'];        $data['contact'] = $res['contactinfo'];        $data['content'] = $res['infos'];        $data['name'] = $res['name'];        $data['status']=0;        $data['add_time']=  time();        $id= $this->opi_mod->insert($data);        if($id){            $data['id'] = $id;            $array_return['ResultType']=self::__OK__;            $array_return['Message']="添加成功";            $array_return['AppendData']=$data;        }else{            $array_return['ResultType']=self::__ERROR__;            $array_return['Message']="添加失败";        }                return json($array_return);    }    public function Visitcount()    { 	        	$array_return['ResultType'] = self::__ERROR__;        	$array_return['Message'] = "获取访问纪录失败";        $data = $this->visit_logic->getLogData(array('object_id'=>$this->userInfo['id']));        if($data){            $result=array();            $result['all']=$data['count'];            $result['today']=$data['today_count'];            $result['yesterday']=$data['yesterday_count'];            $result['forward']=$data['share_count'];            $result['data']=$data['data'];            $array_return['ResultType']=self::__OK__;            $array_return['Message']="获取访问纪录成功";            $array_return['AppendData']=$result;        }                return json($array_return);    }    public function GetArticlesEditInfo()    {        $result = array();        array_push($result,'1、目前仅支持微信文章、今日头条文章抓取');        array_push($result,'2、抓取其它网页文章可能会不能正常显示或编辑');        if($result){            $array_return['ResultType']=self::__OK__;            $array_return['Message']="获取软文编辑说明成功";            $array_return['AppendData']=$result;        }else{            $array_return['ResultType']=self::__ERROR__;            $array_return['Message']="获取软文编辑说明失败";        }                return json($array_return);    }}